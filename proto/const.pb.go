// Code generated by protoc-gen-go. DO NOT EDIT.
// source: const.proto

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	const.proto
	gate.proto
	gs.proto

It has these top-level messages:
	ClientReq
	ClientResp
	LoginReq
	LoginResp
	ModifyUserInfo
	NoticeReq
	NoticeResp
	NoticeInfo
	RankingReq
	RankingResp
	RankingInfo
	GetActionListReq
	GetActionListResp
	ActionInfo
	ActionRankingReq
	ActionRankingResp
	DistributionReq
	DistributionResp
	Team
	Pusher
	Employ
	Achieve
	GetTeamRewardReq
	GetShareRewardReq
	ChargeReq
	ChargeResp
	GetShareRedPkgReq
	GetShareRedPkgResp
	CreateClubReq
	CreateClubResp
	ClubInfo
	GetClubListReq
	GetClubListResp
	SearchClubReq
	SearchClubResp
	JoinClubReq
	ModifyClubInfoReq
	QuitClubReq
	DisbandClubReq
	ClubApplicantInfo
	GetClubApplyListReq
	ClubApproveReq
	ClubApproveResp
	GetClubApplyListResp
	ClubMemberInfo
	GetClubMembersListReq
	GetClubMembersListResp
	SetClubAdministratorReq
	DeleteClubMemberReq
	ModifyClubGameReq
	CreateClubRoomReq
	CreateClubRoomResp
	RemoveClubRoomReq
	SetClubRoomModeReq
	SendClubChangesResp
	ClubRoomInfo
	ClubRoomDeskInfo
	DeskPlayer
	CLubDaysConsumeReq
	CLubDaysConsumeResp
	ClubDayConsumeInfo
	ClubRoomListReq
	ClubRoomListResp
	JoinClubDeskReq
	JoinClubDeskResp
	ModifyClubRoomRuleReq
	ModifyClubRoomRuleResp
	ModifyClubRoomDecReq
	ClubRoomDeskInfoReq
	ClubRoomDeskInfoResp
	GetRoomListReq
	GetRoomListResp
	ExchangeReq
	WithDrawReq
	DepositReq
	SetBankPasswdReq
	BankUpdateNtf
	VerifyBankPasswdReq
	TransferReq
	ShareReq
	CloseAccountReq
	CloseAccountResp
	SendPlayerLocation
	MJPlayerResultListNtf
	BigTwoPlayerResultListNtf
	BigTwoPlayerEndResultListNtf
	GetMultipleFightGradeReq
	GetMultipleFightGradeResp
	GamePlayerResultListNtf
	PdkPlayerResultListNtf
	PdkResultInfo
	PdkPlayerEndResultListNtf
	PdkEndResultInfo
	FiveDdzPlayerResultListNtf
	DdzResultInfo
	DdzPlayerEndResultListNtf
	DdzEndResultInfo
	HongZhongMahjongResultNtf
	PersonPerGameResult
	HongZhongMahjongPutOut
	HongZhongMahjongdetailWin
	GamePlayerEndResultListNtf
	GameEndResultInfo
	MahjongEndRecord
	BigTwoEndResultInfo
	MultipleFightGradeInfo
	FightGradeInfo
	MaxWin
	PersonFight
	MJPlayerResultInfo
	MJPlayerResultDetailInfo
	BigTwoResultInfo
	BigTwoCards
	BigTwoInfo
	BigTwoCardInfo
	RoomInfo
	PaoDeKuaiRoomInfo
	RoomClubDeskInfo
	Player
	Gps
	CreateRoomReq
	ExpendSpeciThing
	NingYuanSpeciRule
	Hold
	RoomConfig
	CreateRoomResp
	JoinRoomReq
	JoinRoomResp
	GetRoomDataReq
	GetRoomDataResp
	TalkToAllReq
	TalkToAllResp
	QuitRoomReq
	RoomListNtf
	JoinRoomNtf
	QuitRoomNtf
	MatchReq
	MatchResp
	LogoutReq
	LogoutResp
	CommonResp
	HeartReq
	HeartResp
	BindReq
	MoneyUpdateNtf
	GetPlayerScoreReq
	GetPlayerScoreResp
	ScoreInfo
	MoneyInfo
	GameMoneyUpdateNtf
	ShareNumNtf
	PlayFieldClubMemberReq
	PlayFieldClubMemberResp
	ClubMemberInfoTree
	SetProportionReq
	SetIntegralReq
	SetClubModeReq
	PlayFieldPermissionReq
	BindPlayerGVoiceIDReq
	BindPlayerGVoiceIDResp
	SetGpsInfoReq
	SetGpsInfoResp
	GetClubMaxWinReq
	GetClubMaxWinResp
	ClubMaxWinInfo
	GetClubMaxFightReq
	GetClubMaxFightResp
	GetRoomInfoReq
	GetRoomInfoResp
	UserStatusNtf
	GameStatusNtf
	UserOPNtf
	UserOpReq
	NoticeListReq
	NoticeListResp
	NoticeListPushResp
	NoticeItem
	OP
	TEST_GATE_REQ
	TEST_GS_REQ
	TEST_GS_RESP
	MSG
	Account
	ID
	IPCObject
	Club
	IPCRoom
	IPCCreateRoomReq
	IPCJoinOKInfo
	IPCJoinRoomReq
	IPCMatchReq
	MoneyUpdateInfo
	PayInfo
	IPCJoinClubRoomDeskReq
	ServerMoneyInfo
	SetLevelInfo
	ModifyGoldInfo
	ActionDataInfo
	ToDatabase
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 协议号
type PROTO int32

const (
	// 服务器定义
	PROTO_TEST_GATE      PROTO = 0
	PROTO_TEST_GS        PROTO = 1
	PROTO_IPC            PROTO = 2
	PROTO_LOGIN_FORWARD  PROTO = 3
	PROTO_GS_FORWARD     PROTO = 4
	PROTO_GATE_BROADCAST PROTO = 5
	// 客户端定义
	PROTO_HEART                  PROTO = 2000
	PROTO_COMMON                 PROTO = 2001
	PROTO_LOGIN                  PROTO = 2002
	PROTO_LOGOUT                 PROTO = 2003
	PROTO_NOTICE                 PROTO = 2017
	PROTO_WITHDRAW               PROTO = 2018
	PROTO_DEPOSIT                PROTO = 2019
	PROTO_NOTIFY_BANK            PROTO = 2020
	PROTO_SET_BANK_PASSWD        PROTO = 2021
	PROTO_VERIFY_BANK_PASSWD     PROTO = 2022
	PROTO_RANKING                PROTO = 2023
	PROTO_MODIFY_USER_INFO       PROTO = 2024
	PROTO_TRANSFER               PROTO = 2025
	PROTO_SHARE                  PROTO = 2026
	PROTO_DISTRIBUTION           PROTO = 2027
	PROTO_CLOSE_ACCOUNT          PROTO = 2028
	PROTO_EXCHANGE               PROTO = 2029
	PROTO_BIND                   PROTO = 2030
	PROTO_GET_TEAM_REWARD        PROTO = 2031
	PROTO_GET_SHARE_REWARD       PROTO = 2032
	PROTO_CHARGE                 PROTO = 2033
	PROTO_CREATE_CLUB            PROTO = 2034
	PROTO_GET_CLUB_LIST          PROTO = 2035
	PROTO_SEARCH_CLUB            PROTO = 2036
	PROTO_JOIN_CLUB              PROTO = 2037
	PROTO_MODIFY_CLUB_INFO       PROTO = 2038
	PROTO_QUIT_CLUB              PROTO = 2039
	PROTO_DISBAND_CLUB           PROTO = 2040
	PROTO_CLUB_APPROVE           PROTO = 2041
	PROTO_GET_CLUB_APPLY_LIST    PROTO = 2042
	PROTO_GET_CLUB_MEMBERS_LIST  PROTO = 2043
	PROTO_SET_CLUB_ADMINISTRATOR PROTO = 2044
	PROTO_DELETE_CLUB_MEMBER     PROTO = 2045
	PROTO_MODIFY_CLUB_GAME       PROTO = 2046
	PROTO_GET_SHARE_REDPKG       PROTO = 2047
	PROTO_GET_ACTION_LIST        PROTO = 2048
	PROTO_ACTION_RANKING         PROTO = 2049
	PROTO_CREAT_CLUB_ROOM        PROTO = 2050
	PROTO_CLUB_ROOM_LIST         PROTO = 2051
	PROTO_JOIN_CLUB_DESK         PROTO = 2052
	PROTO_MODIFY_CLUB_ROOM_RULE  PROTO = 2053
	PROTO_MODIFY_CLUB_ROOM_DEC   PROTO = 2054
	PROTO_CLUB_ROOM_DESK_INFO    PROTO = 2055
	PROTO_REMOVE_CLUB_ROOM       PROTO = 2056
	PROTO_SET_CLUB_ROOM_MODE     PROTO = 2057
	PROTO_SEND_CLUB_CHANGES      PROTO = 2058
	PROTO_GET_CLUB_DAYS_RECORD   PROTO = 2059
	// 与小游戏相关的协议号 起始为1000
	PROTO_GET_ROOM_LIST                            PROTO = 1004
	PROTO_CREATE_ROOM                              PROTO = 1005
	PROTO_JOIN_ROOM                                PROTO = 1006
	PROTO_QUIT_ROOM                                PROTO = 1007
	PROTO_MATCH                                    PROTO = 1008
	PROTO_NOTIFY_ROOM_LIST                         PROTO = 1009
	PROTO_NOTIFY_GAME_STATUS                       PROTO = 1010
	PROTO_USER_OP                                  PROTO = 1011
	PROTO_NOTIFY_MONEY_UPDATE                      PROTO = 1012
	PROTO_NOTIFY_JOIN_ROOM                         PROTO = 1013
	PROTO_NOTIFY_QUIT_ROOM                         PROTO = 1014
	PROTO_NOTIFY_USER_STATUS                       PROTO = 1015
	PROTO_NOTIFY_USER_OP                           PROTO = 1016
	PROTO_NOTIFY_MJ_PLAYER_RESULT_LIST             PROTO = 1017
	PROTO_TALK_TO_ALL                              PROTO = 1018
	PROTO_NOTIFY_GAME_MONEY_UPDATE                 PROTO = 1019
	PROTO_GET_ROOM_DATA                            PROTO = 1020
	PROTO_GET_PLAYERS_SCORE                        PROTO = 1021
	PROTO_PROTO_NOTIFY_SHARE_NUM                   PROTO = 1022
	PROTO_BIND_PLAYER_GVOICE_ID                    PROTO = 1023
	PROTO_NOTIFY_BIGtWO_PLAYER_RESULT_LIST         PROTO = 1024
	PROTO_NOTIFY_BIGtWO_PLAYER_END_RESULT_LIST     PROTO = 1025
	PROTO_GET_FIGHT_LIST                           PROTO = 1026
	PROTO_NOTIFY_GAME_PLAYER_RESULT_LIST           PROTO = 1027
	PROTO_PROTO_NOTIFY_GAME_PLAYER_END_RESULT_LIST PROTO = 1028
	PROTO_SET_GPS_INFO                             PROTO = 1029
	PROTO_NOTIFY_PDK_PLAYER_RESULT_LIST            PROTO = 1030
	PROTO_NOTIFY_PDK_PLAYER_END_RESULT_LIST        PROTO = 1031
	PROTO_GET_CLUB_MAXWIN_LIST                     PROTO = 1032
	PROTO_GET_CLUB_MAXWIN_FIGHT                    PROTO = 1033
	PROTO_GET_ROOM_IFON                            PROTO = 1034
	PROTO_NOTIFY_FIVE_DDZ_PLAYER_RESULT_LIST       PROTO = 1035
	PROTO_NOTIFY_FIVE_DDZ_PLAYER_END_RESULT_LIST   PROTO = 1036
	PROTO_NOTICE_LIST                              PROTO = 1037
	PROTO_NOTIFY_NOTICE                            PROTO = 1038
)

var PROTO_name = map[int32]string{
	0:    "TEST_GATE",
	1:    "TEST_GS",
	2:    "IPC",
	3:    "LOGIN_FORWARD",
	4:    "GS_FORWARD",
	5:    "GATE_BROADCAST",
	2000: "HEART",
	2001: "COMMON",
	2002: "LOGIN",
	2003: "LOGOUT",
	2017: "NOTICE",
	2018: "WITHDRAW",
	2019: "DEPOSIT",
	2020: "NOTIFY_BANK",
	2021: "SET_BANK_PASSWD",
	2022: "VERIFY_BANK_PASSWD",
	2023: "RANKING",
	2024: "MODIFY_USER_INFO",
	2025: "TRANSFER",
	2026: "SHARE",
	2027: "DISTRIBUTION",
	2028: "CLOSE_ACCOUNT",
	2029: "EXCHANGE",
	2030: "BIND",
	2031: "GET_TEAM_REWARD",
	2032: "GET_SHARE_REWARD",
	2033: "CHARGE",
	2034: "CREATE_CLUB",
	2035: "GET_CLUB_LIST",
	2036: "SEARCH_CLUB",
	2037: "JOIN_CLUB",
	2038: "MODIFY_CLUB_INFO",
	2039: "QUIT_CLUB",
	2040: "DISBAND_CLUB",
	2041: "CLUB_APPROVE",
	2042: "GET_CLUB_APPLY_LIST",
	2043: "GET_CLUB_MEMBERS_LIST",
	2044: "SET_CLUB_ADMINISTRATOR",
	2045: "DELETE_CLUB_MEMBER",
	2046: "MODIFY_CLUB_GAME",
	2047: "GET_SHARE_REDPKG",
	2048: "GET_ACTION_LIST",
	2049: "ACTION_RANKING",
	2050: "CREAT_CLUB_ROOM",
	2051: "CLUB_ROOM_LIST",
	2052: "JOIN_CLUB_DESK",
	2053: "MODIFY_CLUB_ROOM_RULE",
	2054: "MODIFY_CLUB_ROOM_DEC",
	2055: "CLUB_ROOM_DESK_INFO",
	2056: "REMOVE_CLUB_ROOM",
	2057: "SET_CLUB_ROOM_MODE",
	2058: "SEND_CLUB_CHANGES",
	2059: "GET_CLUB_DAYS_RECORD",
	1004: "GET_ROOM_LIST",
	1005: "CREATE_ROOM",
	1006: "JOIN_ROOM",
	1007: "QUIT_ROOM",
	1008: "MATCH",
	1009: "NOTIFY_ROOM_LIST",
	1010: "NOTIFY_GAME_STATUS",
	1011: "USER_OP",
	1012: "NOTIFY_MONEY_UPDATE",
	1013: "NOTIFY_JOIN_ROOM",
	1014: "NOTIFY_QUIT_ROOM",
	1015: "NOTIFY_USER_STATUS",
	1016: "NOTIFY_USER_OP",
	1017: "NOTIFY_MJ_PLAYER_RESULT_LIST",
	1018: "TALK_TO_ALL",
	1019: "NOTIFY_GAME_MONEY_UPDATE",
	1020: "GET_ROOM_DATA",
	1021: "GET_PLAYERS_SCORE",
	1022: "PROTO_NOTIFY_SHARE_NUM",
	1023: "BIND_PLAYER_GVOICE_ID",
	1024: "NOTIFY_BIGtWO_PLAYER_RESULT_LIST",
	1025: "NOTIFY_BIGtWO_PLAYER_END_RESULT_LIST",
	1026: "GET_FIGHT_LIST",
	1027: "NOTIFY_GAME_PLAYER_RESULT_LIST",
	1028: "PROTO_NOTIFY_GAME_PLAYER_END_RESULT_LIST",
	1029: "SET_GPS_INFO",
	1030: "NOTIFY_PDK_PLAYER_RESULT_LIST",
	1031: "NOTIFY_PDK_PLAYER_END_RESULT_LIST",
	1032: "GET_CLUB_MAXWIN_LIST",
	1033: "GET_CLUB_MAXWIN_FIGHT",
	1034: "GET_ROOM_IFON",
	1035: "NOTIFY_FIVE_DDZ_PLAYER_RESULT_LIST",
	1036: "NOTIFY_FIVE_DDZ_PLAYER_END_RESULT_LIST",
	1037: "NOTICE_LIST",
	1038: "NOTIFY_NOTICE",
}
var PROTO_value = map[string]int32{
	"TEST_GATE":                                0,
	"TEST_GS":                                  1,
	"IPC":                                      2,
	"LOGIN_FORWARD":                            3,
	"GS_FORWARD":                               4,
	"GATE_BROADCAST":                           5,
	"HEART":                                    2000,
	"COMMON":                                   2001,
	"LOGIN":                                    2002,
	"LOGOUT":                                   2003,
	"NOTICE":                                   2017,
	"WITHDRAW":                                 2018,
	"DEPOSIT":                                  2019,
	"NOTIFY_BANK":                              2020,
	"SET_BANK_PASSWD":                          2021,
	"VERIFY_BANK_PASSWD":                       2022,
	"RANKING":                                  2023,
	"MODIFY_USER_INFO":                         2024,
	"TRANSFER":                                 2025,
	"SHARE":                                    2026,
	"DISTRIBUTION":                             2027,
	"CLOSE_ACCOUNT":                            2028,
	"EXCHANGE":                                 2029,
	"BIND":                                     2030,
	"GET_TEAM_REWARD":                          2031,
	"GET_SHARE_REWARD":                         2032,
	"CHARGE":                                   2033,
	"CREATE_CLUB":                              2034,
	"GET_CLUB_LIST":                            2035,
	"SEARCH_CLUB":                              2036,
	"JOIN_CLUB":                                2037,
	"MODIFY_CLUB_INFO":                         2038,
	"QUIT_CLUB":                                2039,
	"DISBAND_CLUB":                             2040,
	"CLUB_APPROVE":                             2041,
	"GET_CLUB_APPLY_LIST":                      2042,
	"GET_CLUB_MEMBERS_LIST":                    2043,
	"SET_CLUB_ADMINISTRATOR":                   2044,
	"DELETE_CLUB_MEMBER":                       2045,
	"MODIFY_CLUB_GAME":                         2046,
	"GET_SHARE_REDPKG":                         2047,
	"GET_ACTION_LIST":                          2048,
	"ACTION_RANKING":                           2049,
	"CREAT_CLUB_ROOM":                          2050,
	"CLUB_ROOM_LIST":                           2051,
	"JOIN_CLUB_DESK":                           2052,
	"MODIFY_CLUB_ROOM_RULE":                    2053,
	"MODIFY_CLUB_ROOM_DEC":                     2054,
	"CLUB_ROOM_DESK_INFO":                      2055,
	"REMOVE_CLUB_ROOM":                         2056,
	"SET_CLUB_ROOM_MODE":                       2057,
	"SEND_CLUB_CHANGES":                        2058,
	"GET_CLUB_DAYS_RECORD":                     2059,
	"GET_ROOM_LIST":                            1004,
	"CREATE_ROOM":                              1005,
	"JOIN_ROOM":                                1006,
	"QUIT_ROOM":                                1007,
	"MATCH":                                    1008,
	"NOTIFY_ROOM_LIST":                         1009,
	"NOTIFY_GAME_STATUS":                       1010,
	"USER_OP":                                  1011,
	"NOTIFY_MONEY_UPDATE":                      1012,
	"NOTIFY_JOIN_ROOM":                         1013,
	"NOTIFY_QUIT_ROOM":                         1014,
	"NOTIFY_USER_STATUS":                       1015,
	"NOTIFY_USER_OP":                           1016,
	"NOTIFY_MJ_PLAYER_RESULT_LIST":             1017,
	"TALK_TO_ALL":                              1018,
	"NOTIFY_GAME_MONEY_UPDATE":                 1019,
	"GET_ROOM_DATA":                            1020,
	"GET_PLAYERS_SCORE":                        1021,
	"PROTO_NOTIFY_SHARE_NUM":                   1022,
	"BIND_PLAYER_GVOICE_ID":                    1023,
	"NOTIFY_BIGtWO_PLAYER_RESULT_LIST":         1024,
	"NOTIFY_BIGtWO_PLAYER_END_RESULT_LIST":     1025,
	"GET_FIGHT_LIST":                           1026,
	"NOTIFY_GAME_PLAYER_RESULT_LIST":           1027,
	"PROTO_NOTIFY_GAME_PLAYER_END_RESULT_LIST": 1028,
	"SET_GPS_INFO":                             1029,
	"NOTIFY_PDK_PLAYER_RESULT_LIST":            1030,
	"NOTIFY_PDK_PLAYER_END_RESULT_LIST":        1031,
	"GET_CLUB_MAXWIN_LIST":                     1032,
	"GET_CLUB_MAXWIN_FIGHT":                    1033,
	"GET_ROOM_IFON":                            1034,
	"NOTIFY_FIVE_DDZ_PLAYER_RESULT_LIST":       1035,
	"NOTIFY_FIVE_DDZ_PLAYER_END_RESULT_LIST":   1036,
	"NOTICE_LIST":                              1037,
	"NOTIFY_NOTICE":                            1038,
}

func (x PROTO) String() string {
	return proto.EnumName(PROTO_name, int32(x))
}
func (PROTO) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 错误码
type ERROR int32

const (
	ERROR__                           ERROR = 0
	ERROR_OK                          ERROR = 1000
	ERROR_USER_NOT_LOGIN              ERROR = 1001
	ERROR_SERVER_NOT_EXIST            ERROR = 1002
	ERROR_DATA                        ERROR = 1003
	ERROR_USER_LOGOUT                 ERROR = 1004
	ERROR_CREATE_ROOM_FAILED          ERROR = 1005
	ERROR_JOIN_ROOM_FAILED            ERROR = 1006
	ERROR_MATCH_ROOM_FAILED           ERROR = 1007
	ERROR_USER_IN_ROOM                ERROR = 1008
	ERROR_UUID_NOT_EXIST              ERROR = 1009
	ERROR_ACCOUNT_EXIST               ERROR = 1010
	ERROR_ACCOUNT_PASSWD_NOT_MATCH    ERROR = 1011
	ERROR_LOGIN_AGAIN                 ERROR = 1012
	ERROR_GOLD_NOT_ENOUGH             ERROR = 1013
	ERROR_ROOMCARD_NOT_ENOUGH         ERROR = 1014
	ERROR_USER_NOT_IN_ROOM            ERROR = 1015
	ERROR_USER_ENOUGH                 ERROR = 1016
	ERROR_ROOM_NOT_FOUND              ERROR = 1017
	ERROR_USER_MULTI_LOGIN_DEVICE     ERROR = 1018
	ERROR_BANK_PASSWD                 ERROR = 1019
	ERROR_BANK_BALANCES_NOT_ENOUGH    ERROR = 1020
	ERROR_DEPOSIT_GOLD_NOT_ENOUGH     ERROR = 1021
	ERROR_STRING_LENGTH               ERROR = 1022
	ERROR_STRING_HAS_OTHER            ERROR = 1023
	ERROR_TOKEN_INVAILD               ERROR = 1024
	ERROR_USER_NOT_EXIST              ERROR = 1025
	ERROR_SHARE_TOO_MANY              ERROR = 1026
	ERROR_DIAMOND_NOT_ENOUGH          ERROR = 1027
	ERROR_ACCOUNT_BIND_AGAIN          ERROR = 1028
	ERROR_GET_TEAM_REWARD_FAILED      ERROR = 1029
	ERROR_GAME_NUM_LIMIT              ERROR = 1030
	ERROR_GAME_START                  ERROR = 1031
	ERROR_GAME_OWNER_QUIT             ERROR = 1032
	ERROR_PLAYER_QUIT                 ERROR = 1033
	ERROR_ACHIEVE_FAILED              ERROR = 1034
	ERROR_PAY_AMOUNT                  ERROR = 1035
	ERROR_PAY_SERVER                  ERROR = 1036
	ERROR_CLUB_NOT_EXIST              ERROR = 1037
	ERROR_CLUB_NOT_EXIST_PLAYER       ERROR = 1038
	ERROR_CLUB_PERMISSION             ERROR = 1039
	ERROR_CLUB_APPLY                  ERROR = 1040
	ERROR_CLUB_PLAYER                 ERROR = 1041
	ERROR_CLUB_NOT_APPLY              ERROR = 1042
	ERROR_CODE_INVAILD                ERROR = 1043
	ERROR_CLUB_NOT_EXIST_MEMBER       ERROR = 1044
	ERROR_ACTION_IS_END               ERROR = 1045
	ERROR_CREAT_CLUB_PERM             ERROR = 1046
	ERROR_CREAT_CLUB_REACH_MAX        ERROR = 1047
	ERROR_JOIN_OTHER_CLUB_REACH_MAX   ERROR = 1048
	ERROR_OP_CLUB_ROOM_PERM           ERROR = 1049
	ERROR_CLUB_ROOM_NOTEXIST          ERROR = 1050
	ERROR_JOIN_CLUB_ROOM_DESK_FULL    ERROR = 1051
	ERROR_CLUB_OWNER_CARDS_NOT_ENOUGH ERROR = 1052
	ERROR_CLUB_DISMISS_HAVEPLAYING    ERROR = 1053
	ERROR_CLUB_ROOM_ALLDESKFULL       ERROR = 1054
	ERROR_CLUB_ROOM_REACHDESKMAX      ERROR = 1055
	ERROR_CLUB_NICK_DUPLICATE         ERROR = 1056
	ERROR_CLUB_ROOM_NUM_REACH_MAX     ERROR = 1057
	ERROR_USER_GPS_NOEXIST            ERROR = 1058
	ERROR_CLUB_JOIN_REACHMAX          ERROR = 1059
	ERROR_ORIGIN_NOTEXITGAME          ERROR = 1060
	ERROR_USER_LEVEL_LOW              ERROR = 1061
	ERROR_USER_NOT_SUBORDINATE        ERROR = 1062
	ERROR_USER_NOT_OWNER              ERROR = 1063
	ERROR_USER_NOT_COMMON             ERROR = 1064
	ERROR_HAVE_SAME_IP                ERROR = 1065
	ERROR_SERVER_MAINTAIN             ERROR = 1066
	ERROR_SERVER_CLOSED               ERROR = 1067
	ERROR_VERSION_NEED_UPDATE         ERROR = 1068
)

var ERROR_name = map[int32]string{
	0:    "_",
	1000: "OK",
	1001: "USER_NOT_LOGIN",
	1002: "SERVER_NOT_EXIST",
	1003: "DATA",
	1004: "USER_LOGOUT",
	1005: "CREATE_ROOM_FAILED",
	1006: "JOIN_ROOM_FAILED",
	1007: "MATCH_ROOM_FAILED",
	1008: "USER_IN_ROOM",
	1009: "UUID_NOT_EXIST",
	1010: "ACCOUNT_EXIST",
	1011: "ACCOUNT_PASSWD_NOT_MATCH",
	1012: "LOGIN_AGAIN",
	1013: "GOLD_NOT_ENOUGH",
	1014: "ROOMCARD_NOT_ENOUGH",
	1015: "USER_NOT_IN_ROOM",
	1016: "USER_ENOUGH",
	1017: "ROOM_NOT_FOUND",
	1018: "USER_MULTI_LOGIN_DEVICE",
	1019: "BANK_PASSWD",
	1020: "BANK_BALANCES_NOT_ENOUGH",
	1021: "DEPOSIT_GOLD_NOT_ENOUGH",
	1022: "STRING_LENGTH",
	1023: "STRING_HAS_OTHER",
	1024: "TOKEN_INVAILD",
	1025: "USER_NOT_EXIST",
	1026: "SHARE_TOO_MANY",
	1027: "DIAMOND_NOT_ENOUGH",
	1028: "ACCOUNT_BIND_AGAIN",
	1029: "GET_TEAM_REWARD_FAILED",
	1030: "GAME_NUM_LIMIT",
	1031: "GAME_START",
	1032: "GAME_OWNER_QUIT",
	1033: "PLAYER_QUIT",
	1034: "ACHIEVE_FAILED",
	1035: "PAY_AMOUNT",
	1036: "PAY_SERVER",
	1037: "CLUB_NOT_EXIST",
	1038: "CLUB_NOT_EXIST_PLAYER",
	1039: "CLUB_PERMISSION",
	1040: "CLUB_APPLY",
	1041: "CLUB_PLAYER",
	1042: "CLUB_NOT_APPLY",
	1043: "CODE_INVAILD",
	1044: "CLUB_NOT_EXIST_MEMBER",
	1045: "ACTION_IS_END",
	1046: "CREAT_CLUB_PERM",
	1047: "CREAT_CLUB_REACH_MAX",
	1048: "JOIN_OTHER_CLUB_REACH_MAX",
	1049: "OP_CLUB_ROOM_PERM",
	1050: "CLUB_ROOM_NOTEXIST",
	1051: "JOIN_CLUB_ROOM_DESK_FULL",
	1052: "CLUB_OWNER_CARDS_NOT_ENOUGH",
	1053: "CLUB_DISMISS_HAVEPLAYING",
	1054: "CLUB_ROOM_ALLDESKFULL",
	1055: "CLUB_ROOM_REACHDESKMAX",
	1056: "CLUB_NICK_DUPLICATE",
	1057: "CLUB_ROOM_NUM_REACH_MAX",
	1058: "USER_GPS_NOEXIST",
	1059: "CLUB_JOIN_REACHMAX",
	1060: "ORIGIN_NOTEXITGAME",
	1061: "USER_LEVEL_LOW",
	1062: "USER_NOT_SUBORDINATE",
	1063: "USER_NOT_OWNER",
	1064: "USER_NOT_COMMON",
	1065: "HAVE_SAME_IP",
	1066: "SERVER_MAINTAIN",
	1067: "SERVER_CLOSED",
	1068: "VERSION_NEED_UPDATE",
}
var ERROR_value = map[string]int32{
	"_":                           0,
	"OK":                          1000,
	"USER_NOT_LOGIN":              1001,
	"SERVER_NOT_EXIST":            1002,
	"DATA":                        1003,
	"USER_LOGOUT":                 1004,
	"CREATE_ROOM_FAILED":          1005,
	"JOIN_ROOM_FAILED":            1006,
	"MATCH_ROOM_FAILED":           1007,
	"USER_IN_ROOM":                1008,
	"UUID_NOT_EXIST":              1009,
	"ACCOUNT_EXIST":               1010,
	"ACCOUNT_PASSWD_NOT_MATCH":    1011,
	"LOGIN_AGAIN":                 1012,
	"GOLD_NOT_ENOUGH":             1013,
	"ROOMCARD_NOT_ENOUGH":         1014,
	"USER_NOT_IN_ROOM":            1015,
	"USER_ENOUGH":                 1016,
	"ROOM_NOT_FOUND":              1017,
	"USER_MULTI_LOGIN_DEVICE":     1018,
	"BANK_PASSWD":                 1019,
	"BANK_BALANCES_NOT_ENOUGH":    1020,
	"DEPOSIT_GOLD_NOT_ENOUGH":     1021,
	"STRING_LENGTH":               1022,
	"STRING_HAS_OTHER":            1023,
	"TOKEN_INVAILD":               1024,
	"USER_NOT_EXIST":              1025,
	"SHARE_TOO_MANY":              1026,
	"DIAMOND_NOT_ENOUGH":          1027,
	"ACCOUNT_BIND_AGAIN":          1028,
	"GET_TEAM_REWARD_FAILED":      1029,
	"GAME_NUM_LIMIT":              1030,
	"GAME_START":                  1031,
	"GAME_OWNER_QUIT":             1032,
	"PLAYER_QUIT":                 1033,
	"ACHIEVE_FAILED":              1034,
	"PAY_AMOUNT":                  1035,
	"PAY_SERVER":                  1036,
	"CLUB_NOT_EXIST":              1037,
	"CLUB_NOT_EXIST_PLAYER":       1038,
	"CLUB_PERMISSION":             1039,
	"CLUB_APPLY":                  1040,
	"CLUB_PLAYER":                 1041,
	"CLUB_NOT_APPLY":              1042,
	"CODE_INVAILD":                1043,
	"CLUB_NOT_EXIST_MEMBER":       1044,
	"ACTION_IS_END":               1045,
	"CREAT_CLUB_PERM":             1046,
	"CREAT_CLUB_REACH_MAX":        1047,
	"JOIN_OTHER_CLUB_REACH_MAX":   1048,
	"OP_CLUB_ROOM_PERM":           1049,
	"CLUB_ROOM_NOTEXIST":          1050,
	"JOIN_CLUB_ROOM_DESK_FULL":    1051,
	"CLUB_OWNER_CARDS_NOT_ENOUGH": 1052,
	"CLUB_DISMISS_HAVEPLAYING":    1053,
	"CLUB_ROOM_ALLDESKFULL":       1054,
	"CLUB_ROOM_REACHDESKMAX":      1055,
	"CLUB_NICK_DUPLICATE":         1056,
	"CLUB_ROOM_NUM_REACH_MAX":     1057,
	"USER_GPS_NOEXIST":            1058,
	"CLUB_JOIN_REACHMAX":          1059,
	"ORIGIN_NOTEXITGAME":          1060,
	"USER_LEVEL_LOW":              1061,
	"USER_NOT_SUBORDINATE":        1062,
	"USER_NOT_OWNER":              1063,
	"USER_NOT_COMMON":             1064,
	"HAVE_SAME_IP":                1065,
	"SERVER_MAINTAIN":             1066,
	"SERVER_CLOSED":               1067,
	"VERSION_NEED_UPDATE":         1068,
}

func (x ERROR) String() string {
	return proto.EnumName(ERROR_name, int32(x))
}
func (ERROR) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// 常量
type CONST int32

const (
	CONST_CONST_UNUSED CONST = 0
	CONST_SYS_USER     CONST = -1
	CONST_TOTAL_USER   CONST = 10000000
)

var CONST_name = map[int32]string{
	0:        "CONST_UNUSED",
	-1:       "SYS_USER",
	10000000: "TOTAL_USER",
}
var CONST_value = map[string]int32{
	"CONST_UNUSED": 0,
	"SYS_USER":     -1,
	"TOTAL_USER":   10000000,
}

func (x CONST) String() string {
	return proto.EnumName(CONST_name, int32(x))
}
func (CONST) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// 平台
type PLATFORM int32

const (
	PLATFORM_PLATFORM_UNUSED PLATFORM = 0
	PLATFORM_GUEST           PLATFORM = 1
	PLATFORM_ACCOUNT         PLATFORM = 2
	PLATFORM_WECHAT          PLATFORM = 3
	PLATFORM_WECHAT_GAME     PLATFORM = 4
)

var PLATFORM_name = map[int32]string{
	0: "PLATFORM_UNUSED",
	1: "GUEST",
	2: "ACCOUNT",
	3: "WECHAT",
	4: "WECHAT_GAME",
}
var PLATFORM_value = map[string]int32{
	"PLATFORM_UNUSED": 0,
	"GUEST":           1,
	"ACCOUNT":         2,
	"WECHAT":          3,
	"WECHAT_GAME":     4,
}

func (x PLATFORM) String() string {
	return proto.EnumName(PLATFORM_name, int32(x))
}
func (PLATFORM) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// 游戏类型
type GAME int32

const (
	GAME_GAME_UNUSED        GAME = 0
	GAME_QIANGZHUANG_NIUNIU GAME = 1
	GAME_ZHAJINHUA          GAME = 2
	GAME_BAIJIALE           GAME = 3
	GAME_MAHJONG_4          GAME = 4
	GAME_MAHJONG_3          GAME = 5
	GAME_MAHJONG_2          GAME = 6
	GAME_SANGONG            GAME = 7
	GAME_DACHIXIAO          GAME = 8
	GAME_BIGTWO             GAME = 9
	GAME_HONGZHONG_MAHJONG  GAME = 10
	GAME_PAODEKUAI          GAME = 11
	GAME_YINBIN_MAHJONG     GAME = 12
	GAME_YINBIN_FIVE_DDZ    GAME = 13
	GAME_PAODEKUAI_2        GAME = 14
	GAME_NINGYUAN_MAHJONG   GAME = 15
	GAME_PAODEKUAI_3        GAME = 16
	GAME_PAODEKUAI_4        GAME = 17
	GAME_NEIJIANG_MAHJONG   GAME = 18
	GAME_LUZHOU_GUIMAHJONG  GAME = 19
	GAME_YAOJI_MAHJONG      GAME = 20
	GAME_LESHAN_ERQISHI     GAME = 21
)

var GAME_name = map[int32]string{
	0:  "GAME_UNUSED",
	1:  "QIANGZHUANG_NIUNIU",
	2:  "ZHAJINHUA",
	3:  "BAIJIALE",
	4:  "MAHJONG_4",
	5:  "MAHJONG_3",
	6:  "MAHJONG_2",
	7:  "SANGONG",
	8:  "DACHIXIAO",
	9:  "BIGTWO",
	10: "HONGZHONG_MAHJONG",
	11: "PAODEKUAI",
	12: "YINBIN_MAHJONG",
	13: "YINBIN_FIVE_DDZ",
	14: "PAODEKUAI_2",
	15: "NINGYUAN_MAHJONG",
	16: "PAODEKUAI_3",
	17: "PAODEKUAI_4",
	18: "NEIJIANG_MAHJONG",
	19: "LUZHOU_GUIMAHJONG",
	20: "YAOJI_MAHJONG",
	21: "LESHAN_ERQISHI",
}
var GAME_value = map[string]int32{
	"GAME_UNUSED":        0,
	"QIANGZHUANG_NIUNIU": 1,
	"ZHAJINHUA":          2,
	"BAIJIALE":           3,
	"MAHJONG_4":          4,
	"MAHJONG_3":          5,
	"MAHJONG_2":          6,
	"SANGONG":            7,
	"DACHIXIAO":          8,
	"BIGTWO":             9,
	"HONGZHONG_MAHJONG":  10,
	"PAODEKUAI":          11,
	"YINBIN_MAHJONG":     12,
	"YINBIN_FIVE_DDZ":    13,
	"PAODEKUAI_2":        14,
	"NINGYUAN_MAHJONG":   15,
	"PAODEKUAI_3":        16,
	"PAODEKUAI_4":        17,
	"NEIJIANG_MAHJONG":   18,
	"LUZHOU_GUIMAHJONG":  19,
	"YAOJI_MAHJONG":      20,
	"LESHAN_ERQISHI":     21,
}

func (x GAME) String() string {
	return proto.EnumName(GAME_name, int32(x))
}
func (GAME) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// 规则
type RULE int32

const (
	RULE_RULE_UNUSED            RULE = 0
	RULE_BIMENG1                RULE = 1
	RULE_BIMENG3                RULE = 2
	RULE_BIMENG5                RULE = 3
	RULE_C3                     RULE = 4
	RULE_FORWARD                RULE = 5
	RULE_ZI_MO_JIA_DI           RULE = 6
	RULE_ZI_MO_JIA_FAN          RULE = 7
	RULE_DIAN_GANG_HUA_ZI_MO    RULE = 8
	RULE_DIAN_GANG_HUA_DIAN_PAO RULE = 9
	RULE_YAO_JIU_JIANG_DUI      RULE = 10
	RULE_TIAN_DI_HU             RULE = 11
	RULE_HAI_DI_LAO             RULE = 12
	RULE_SAN_FAN_FENG_DING      RULE = 13
	RULE_SI_FAN_FENG_DING       RULE = 14
	RULE_BU_FENG_DING           RULE = 15
	RULE_MEN_QING_DUAN_YAO_JIU  RULE = 16
	RULE_DAPAI_DANGZHUANG       RULE = 17
	RULE_QIANGZHUANG            RULE = 18
	RULE_CUOPAI                 RULE = 19
	RULE_BAOJIU                 RULE = 20
)

var RULE_name = map[int32]string{
	0:  "RULE_UNUSED",
	1:  "BIMENG1",
	2:  "BIMENG3",
	3:  "BIMENG5",
	4:  "C3",
	5:  "FORWARD",
	6:  "ZI_MO_JIA_DI",
	7:  "ZI_MO_JIA_FAN",
	8:  "DIAN_GANG_HUA_ZI_MO",
	9:  "DIAN_GANG_HUA_DIAN_PAO",
	10: "YAO_JIU_JIANG_DUI",
	11: "TIAN_DI_HU",
	12: "HAI_DI_LAO",
	13: "SAN_FAN_FENG_DING",
	14: "SI_FAN_FENG_DING",
	15: "BU_FENG_DING",
	16: "MEN_QING_DUAN_YAO_JIU",
	17: "DAPAI_DANGZHUANG",
	18: "QIANGZHUANG",
	19: "CUOPAI",
	20: "BAOJIU",
}
var RULE_value = map[string]int32{
	"RULE_UNUSED":            0,
	"BIMENG1":                1,
	"BIMENG3":                2,
	"BIMENG5":                3,
	"C3":                     4,
	"FORWARD":                5,
	"ZI_MO_JIA_DI":           6,
	"ZI_MO_JIA_FAN":          7,
	"DIAN_GANG_HUA_ZI_MO":    8,
	"DIAN_GANG_HUA_DIAN_PAO": 9,
	"YAO_JIU_JIANG_DUI":      10,
	"TIAN_DI_HU":             11,
	"HAI_DI_LAO":             12,
	"SAN_FAN_FENG_DING":      13,
	"SI_FAN_FENG_DING":       14,
	"BU_FENG_DING":           15,
	"MEN_QING_DUAN_YAO_JIU":  16,
	"DAPAI_DANGZHUANG":       17,
	"QIANGZHUANG":            18,
	"CUOPAI":                 19,
	"BAOJIU":                 20,
}

func (x RULE) String() string {
	return proto.EnumName(RULE_name, int32(x))
}
func (RULE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

// 俱乐部头衔
type CLUB_TITLE int32

const (
	CLUB_TITLE_CLUB_TITLE_MEMBER        CLUB_TITLE = 0
	CLUB_TITLE_CLUB_TITLE_ADMINISTRATOR CLUB_TITLE = 1
	CLUB_TITLE_CLUB_TITLE_OWNER         CLUB_TITLE = 2
)

var CLUB_TITLE_name = map[int32]string{
	0: "CLUB_TITLE_MEMBER",
	1: "CLUB_TITLE_ADMINISTRATOR",
	2: "CLUB_TITLE_OWNER",
}
var CLUB_TITLE_value = map[string]int32{
	"CLUB_TITLE_MEMBER":        0,
	"CLUB_TITLE_ADMINISTRATOR": 1,
	"CLUB_TITLE_OWNER":         2,
}

func (x CLUB_TITLE) String() string {
	return proto.EnumName(CLUB_TITLE_name, int32(x))
}
func (CLUB_TITLE) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

// 大贰地区
type ORIGIN int32

const (
	ORIGIN_SELF_SELECT ORIGIN = 0
	ORIGIN_CHANGNING   ORIGIN = 1
	ORIGIN_JIANG_AN    ORIGIN = 2
	ORIGIN_XINGWEN     ORIGIN = 3
	ORIGIN_LUZHOU      ORIGIN = 4
	ORIGIN_YIBIN       ORIGIN = 5
	ORIGIN_CHENGDU     ORIGIN = 6
	ORIGIN_GAOXIAN     ORIGIN = 7
	ORIGIN_GONGXIAN    ORIGIN = 8
	ORIGIN_HEJIANG     ORIGIN = 9
	ORIGIN_JUNLIANG    ORIGIN = 10
	ORIGIN_LESHAN      ORIGIN = 11
	ORIGIN_NANXI       ORIGIN = 12
	ORIGIN_PINGSHAN    ORIGIN = 13
	ORIGIN_XUYONG      ORIGIN = 14
	ORIGIN_GULIN       ORIGIN = 15
)

var ORIGIN_name = map[int32]string{
	0:  "SELF_SELECT",
	1:  "CHANGNING",
	2:  "JIANG_AN",
	3:  "XINGWEN",
	4:  "LUZHOU",
	5:  "YIBIN",
	6:  "CHENGDU",
	7:  "GAOXIAN",
	8:  "GONGXIAN",
	9:  "HEJIANG",
	10: "JUNLIANG",
	11: "LESHAN",
	12: "NANXI",
	13: "PINGSHAN",
	14: "XUYONG",
	15: "GULIN",
}
var ORIGIN_value = map[string]int32{
	"SELF_SELECT": 0,
	"CHANGNING":   1,
	"JIANG_AN":    2,
	"XINGWEN":     3,
	"LUZHOU":      4,
	"YIBIN":       5,
	"CHENGDU":     6,
	"GAOXIAN":     7,
	"GONGXIAN":    8,
	"HEJIANG":     9,
	"JUNLIANG":    10,
	"LESHAN":      11,
	"NANXI":       12,
	"PINGSHAN":    13,
	"XUYONG":      14,
	"GULIN":       15,
}

func (x ORIGIN) String() string {
	return proto.EnumName(ORIGIN_name, int32(x))
}
func (ORIGIN) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterEnum("protocol.PROTO", PROTO_name, PROTO_value)
	proto.RegisterEnum("protocol.ERROR", ERROR_name, ERROR_value)
	proto.RegisterEnum("protocol.CONST", CONST_name, CONST_value)
	proto.RegisterEnum("protocol.PLATFORM", PLATFORM_name, PLATFORM_value)
	proto.RegisterEnum("protocol.GAME", GAME_name, GAME_value)
	proto.RegisterEnum("protocol.RULE", RULE_name, RULE_value)
	proto.RegisterEnum("protocol.CLUB_TITLE", CLUB_TITLE_name, CLUB_TITLE_value)
	proto.RegisterEnum("protocol.ORIGIN", ORIGIN_name, ORIGIN_value)
}

func init() { proto.RegisterFile("const.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x58, 0x57, 0x93, 0xdc, 0xc6,
	0xf1, 0xe7, 0x45, 0x80, 0x73, 0x61, 0xfb, 0xe6, 0x78, 0x94, 0xf4, 0x57, 0x28, 0x49, 0x7f, 0x5b,
	0xb6, 0xcf, 0x65, 0x57, 0x59, 0x94, 0x3f, 0xc0, 0x2c, 0x30, 0x0b, 0xcc, 0x1d, 0x30, 0x03, 0x62,
	0x06, 0xb7, 0xb7, 0x7c, 0x99, 0x2a, 0xeb, 0xd5, 0x65, 0xba, 0x6c, 0x7d, 0x00, 0xe5, 0x68, 0xc9,
	0x39, 0xe7, 0x6c, 0x39, 0x7c, 0x04, 0x7f, 0x07, 0x87, 0x27, 0x3f, 0x5a, 0x4e, 0xca, 0x39, 0x4b,
	0x14, 0x5d, 0xdd, 0x03, 0x60, 0xb1, 0x47, 0x9a, 0x2f, 0xdc, 0xe9, 0xee, 0xe9, 0xfc, 0xeb, 0x69,
	0x1c, 0xdb, 0xb8, 0xf3, 0xe2, 0xe7, 0xbe, 0x78, 0xd7, 0x27, 0x3f, 0xff, 0x85, 0x8b, 0x77, 0x5d,
	0xe4, 0x31, 0xfd, 0x77, 0xe7, 0xc5, 0xcf, 0xee, 0x3f, 0x39, 0x62, 0x6b, 0x55, 0x6d, 0x9c, 0xe1,
	0x5b, 0xec, 0xb4, 0x93, 0xd6, 0xf9, 0x4c, 0x38, 0x09, 0xa7, 0xf8, 0x06, 0x8b, 0xc2, 0xd1, 0xc2,
	0x12, 0x8f, 0xd8, 0x8a, 0xaa, 0x12, 0x58, 0xe6, 0x3b, 0x6c, 0xab, 0x30, 0x99, 0xd2, 0x7e, 0x62,
	0xea, 0xa9, 0xa8, 0x53, 0x58, 0xe1, 0xdb, 0x8c, 0x65, 0xb6, 0x3f, 0xaf, 0x72, 0xce, 0xb6, 0x51,
	0x85, 0x1f, 0xd7, 0x46, 0xa4, 0x89, 0xb0, 0x0e, 0xd6, 0x38, 0x63, 0x6b, 0xb9, 0x14, 0xb5, 0x83,
	0x3f, 0x8d, 0xf8, 0x06, 0x5b, 0x4f, 0x4c, 0x59, 0x1a, 0x0d, 0x7f, 0x1e, 0x21, 0x83, 0xf4, 0xc1,
	0x5f, 0x88, 0x51, 0x98, 0xcc, 0x34, 0x0e, 0xfe, 0x4a, 0x07, 0x6d, 0x9c, 0x4a, 0x24, 0xfc, 0x7d,
	0xc4, 0xb7, 0x58, 0x3c, 0x55, 0x2e, 0x4f, 0x6b, 0x31, 0x85, 0xa7, 0x46, 0x7c, 0x93, 0x45, 0xa9,
	0xac, 0x8c, 0x55, 0x0e, 0xfe, 0x31, 0xe2, 0xc0, 0x36, 0x50, 0x72, 0x32, 0xf3, 0x63, 0xa1, 0x0f,
	0xe1, 0x9f, 0x23, 0x7e, 0x86, 0x8d, 0xac, 0x74, 0x74, 0xf4, 0x95, 0xb0, 0x76, 0x9a, 0xc2, 0xbf,
	0x46, 0xfc, 0x1a, 0xc6, 0x8f, 0x64, 0xdd, 0xc9, 0x75, 0x8c, 0x7f, 0x93, 0xba, 0x5a, 0xe8, 0x43,
	0xa5, 0x33, 0xf8, 0xcf, 0x88, 0xef, 0x31, 0x28, 0x4d, 0x8a, 0x62, 0x8d, 0x95, 0xb5, 0x57, 0x7a,
	0x62, 0xe0, 0x69, 0x72, 0xc1, 0xd5, 0x42, 0xdb, 0x89, 0xac, 0xe1, 0x19, 0xf2, 0xdb, 0xe6, 0xa2,
	0x96, 0xf0, 0xec, 0x88, 0xef, 0xb0, 0xcd, 0x54, 0x59, 0x57, 0xab, 0x71, 0xe3, 0x94, 0xd1, 0xf0,
	0xdc, 0x88, 0x73, 0xb6, 0x95, 0x14, 0xc6, 0x4a, 0x2f, 0x92, 0xc4, 0x34, 0xda, 0xc1, 0xf3, 0xa4,
	0x41, 0x1e, 0x27, 0xb9, 0xd0, 0x99, 0x84, 0x17, 0x46, 0xfc, 0x34, 0x5b, 0x1d, 0x2b, 0x9d, 0xc2,
	0x8b, 0xe4, 0x6f, 0x26, 0x9d, 0x77, 0x52, 0x94, 0xbe, 0x96, 0x94, 0xc6, 0x97, 0xc8, 0x11, 0xa4,
	0x92, 0x99, 0x8e, 0xfc, 0x72, 0x48, 0x5f, 0x2e, 0xea, 0x4c, 0xc2, 0x2b, 0x14, 0x7b, 0x52, 0x4b,
	0xcc, 0x76, 0x52, 0x34, 0x63, 0x78, 0x95, 0x2c, 0xe3, 0x2d, 0x3c, 0xfa, 0x42, 0x59, 0x07, 0xaf,
	0x91, 0x94, 0x95, 0xa2, 0x4e, 0xf2, 0x20, 0xf5, 0xfa, 0x88, 0x6f, 0xb3, 0xd3, 0x07, 0x46, 0xe9,
	0x70, 0x7e, 0x63, 0x18, 0x34, 0x5d, 0xa4, 0xa0, 0xdf, 0x24, 0xb1, 0xf3, 0x8d, 0x0a, 0xda, 0xe0,
	0xad, 0x2e, 0xd2, 0xb1, 0xd0, 0x69, 0x20, 0xbd, 0x4d, 0x24, 0xba, 0x22, 0xaa, 0xaa, 0x36, 0x47,
	0x12, 0xde, 0x19, 0xf1, 0x6b, 0xd9, 0x6e, 0xef, 0x82, 0xa8, 0xaa, 0x62, 0x16, 0x1c, 0x79, 0x77,
	0xc4, 0xff, 0x8f, 0xed, 0xf5, 0x9c, 0x52, 0x96, 0x63, 0x59, 0xdb, 0xc0, 0x7b, 0x6f, 0xc4, 0xaf,
	0x67, 0x67, 0x6d, 0x7f, 0x2b, 0x2d, 0x95, 0xc6, 0x94, 0x0a, 0x67, 0x6a, 0x78, 0x9f, 0x6a, 0x97,
	0xca, 0x42, 0xb6, 0x71, 0xb6, 0x77, 0xe1, 0xd2, 0x15, 0x8e, 0x67, 0xa2, 0x94, 0xf0, 0xc1, 0x15,
	0xb9, 0x4b, 0xab, 0xc3, 0x0c, 0x2e, 0xf7, 0x89, 0x16, 0x09, 0xd6, 0x29, 0x58, 0xbe, 0x1b, 0xf8,
	0x2e, 0xdb, 0x6e, 0x29, 0x5d, 0x1b, 0xdc, 0x03, 0x28, 0x4a, 0x99, 0x0d, 0x7a, 0x6b, 0x63, 0x4a,
	0xb8, 0x97, 0x44, 0xfb, 0x73, 0xb8, 0x7f, 0x1f, 0x11, 0xfb, 0x64, 0xfa, 0x54, 0xda, 0x43, 0xb8,
	0x1f, 0x30, 0xd4, 0xa1, 0x63, 0x74, 0xa1, 0x6e, 0x0a, 0x09, 0x0f, 0x00, 0xbf, 0x8e, 0x9d, 0xb9,
	0x82, 0x97, 0xca, 0x04, 0x1e, 0x04, 0xcc, 0xdd, 0x90, 0x66, 0x0f, 0x43, 0x2d, 0x1e, 0x02, 0x0c,
	0xa9, 0x96, 0xa5, 0x39, 0x92, 0x03, 0x8f, 0x1e, 0x06, 0xcc, 0x4c, 0x9f, 0x36, 0xba, 0x54, 0x9a,
	0x54, 0xc2, 0x23, 0xc0, 0xcf, 0xb2, 0x1d, 0x2b, 0xdb, 0x42, 0xf9, 0xd0, 0x76, 0x16, 0x1e, 0x25,
	0xe3, 0x7d, 0x0d, 0x52, 0x31, 0xb3, 0xbe, 0x96, 0x89, 0xa9, 0x53, 0x78, 0x0c, 0xba, 0xde, 0x99,
	0x07, 0xf7, 0x7c, 0x34, 0xe8, 0x30, 0xb2, 0xf8, 0x42, 0xd4, 0xf7, 0x0e, 0x9d, 0x5f, 0x8c, 0xfa,
	0x26, 0xa1, 0xf3, 0x4b, 0x11, 0x42, 0xa3, 0x14, 0x2e, 0xc9, 0xe1, 0xe5, 0x08, 0x9d, 0x6e, 0xb1,
	0x39, 0x57, 0xfa, 0x4a, 0x84, 0x4e, 0xb7, 0x64, 0x2c, 0x98, 0xb7, 0x4e, 0xb8, 0xc6, 0xc2, 0xab,
	0x11, 0x42, 0x91, 0x50, 0x67, 0x2a, 0x78, 0x2d, 0xc2, 0x64, 0xb4, 0x62, 0xa5, 0xd1, 0x72, 0xe6,
	0x9b, 0x2a, 0xc5, 0xd9, 0xf4, 0xfa, 0x50, 0xef, 0xdc, 0x95, 0x37, 0x86, 0xe4, 0xb9, 0x47, 0x6f,
	0x0e, 0xcd, 0x91, 0xf2, 0xd6, 0xdc, 0x5b, 0x11, 0x56, 0x6e, 0xc8, 0x30, 0x15, 0xbc, 0x1d, 0xf1,
	0x5b, 0xd8, 0x0d, 0x9d, 0xd5, 0x03, 0x5f, 0x15, 0x62, 0x26, 0x6b, 0x5f, 0x4b, 0xdb, 0x14, 0x2e,
	0xf8, 0xff, 0x0e, 0x25, 0xc5, 0x89, 0xe2, 0xd0, 0x3b, 0xe3, 0x45, 0x51, 0xc0, 0xbb, 0x11, 0xbf,
	0x91, 0x5d, 0x3b, 0x8c, 0x68, 0xc1, 0xdf, 0xf7, 0xa2, 0x85, 0xcc, 0xa6, 0xc2, 0x09, 0x78, 0x3f,
	0xc2, 0x02, 0x21, 0x2d, 0x58, 0xb0, 0xde, 0x26, 0xa6, 0x96, 0x70, 0x29, 0x42, 0x20, 0xd0, 0x40,
	0xf6, 0xad, 0xc2, 0xd0, 0xc4, 0xba, 0x29, 0xe1, 0x83, 0x08, 0xdb, 0x0a, 0xa7, 0x46, 0xe7, 0x57,
	0x76, 0x64, 0x54, 0x22, 0xbd, 0x4a, 0xe1, 0x72, 0xc4, 0x3f, 0xcc, 0x6e, 0xee, 0x06, 0xa1, 0xca,
	0xee, 0x9a, 0x9a, 0xab, 0x39, 0x7f, 0x77, 0xcc, 0x3f, 0xc6, 0x3e, 0x74, 0x55, 0x31, 0x6c, 0x96,
	0xa1, 0xe8, 0x3d, 0x31, 0xe6, 0x07, 0x5d, 0x9c, 0xa8, 0x2c, 0x6f, 0x89, 0xf7, 0xc6, 0xfc, 0xff,
	0xd9, 0x4d, 0xc3, 0x50, 0xaf, 0x62, 0xe4, 0xbe, 0x98, 0x7f, 0x82, 0x7d, 0x74, 0x21, 0x88, 0xa1,
	0xe8, 0x49, 0x43, 0xf7, 0xc7, 0x38, 0x45, 0xb0, 0x8b, 0xb3, 0xca, 0x86, 0x7e, 0x7f, 0x20, 0xe6,
	0xb7, 0xb2, 0x1b, 0xdb, 0xbb, 0x55, 0x7a, 0x78, 0x35, 0x2b, 0x0f, 0xc6, 0xfc, 0x36, 0x76, 0xcb,
	0x95, 0x32, 0x27, 0xd5, 0x3f, 0x14, 0x2f, 0xf4, 0x7c, 0x29, 0x8e, 0xa7, 0xaa, 0x05, 0xff, 0xc3,
	0xf1, 0xe2, 0x48, 0x0a, 0x2c, 0x0a, 0x17, 0x1e, 0x89, 0x17, 0xaa, 0xa6, 0x26, 0x46, 0xc3, 0xa3,
	0x31, 0xff, 0x08, 0xbb, 0xb5, 0x35, 0x39, 0x51, 0x47, 0xd2, 0xa7, 0xe9, 0x85, 0xab, 0xf9, 0xf6,
	0x58, 0xcc, 0x3f, 0xce, 0x6e, 0xfb, 0x1f, 0x82, 0x27, 0x1d, 0xfc, 0x52, 0xdc, 0xbd, 0x61, 0x89,
	0x0c, 0x94, 0xc7, 0xc9, 0x76, 0x7b, 0xbd, 0x7d, 0x06, 0x9f, 0x88, 0xf7, 0xff, 0xb8, 0xc9, 0xd6,
	0x64, 0x5d, 0x9b, 0x9a, 0xaf, 0xb1, 0x25, 0x0f, 0xa7, 0x78, 0xc4, 0x96, 0xcd, 0x21, 0x3c, 0x4d,
	0x8d, 0x4c, 0x1d, 0xac, 0x8d, 0xf3, 0xe1, 0x3d, 0x7d, 0x86, 0xd0, 0x60, 0x65, 0x7d, 0xd4, 0x92,
	0xe5, 0x31, 0x6a, 0x7e, 0x36, 0xc2, 0x87, 0x87, 0x5a, 0xf0, 0x39, 0xea, 0x63, 0xba, 0xd6, 0x3e,
	0xbb, 0xcf, 0x13, 0x54, 0x06, 0x70, 0xf7, 0x13, 0xa1, 0x0a, 0x99, 0x22, 0xea, 0xf7, 0x18, 0xf4,
	0x50, 0xeb, 0xc8, 0x2f, 0x52, 0x13, 0x13, 0xd8, 0x17, 0xe8, 0x2f, 0x45, 0x58, 0xd0, 0xf6, 0xf9,
	0x0c, 0x28, 0x7c, 0x39, 0xf8, 0xd8, 0xa8, 0x74, 0xe0, 0xcc, 0x2b, 0x04, 0x8c, 0xf6, 0x89, 0x6c,
	0x69, 0xaf, 0x12, 0x96, 0x3a, 0x5a, 0x78, 0xa4, 0xe9, 0x4a, 0x98, 0x29, 0xaf, 0x91, 0xd3, 0x61,
	0x05, 0x11, 0x99, 0x50, 0x1a, 0xa7, 0x01, 0x8e, 0x75, 0x53, 0xb4, 0x9a, 0xb5, 0x69, 0xb2, 0x1c,
	0x87, 0xc1, 0xb5, 0x6c, 0x17, 0x4d, 0x27, 0xa2, 0x5e, 0xe0, 0xbc, 0x49, 0xb1, 0xf4, 0xd9, 0xea,
	0x1c, 0x7c, 0x6b, 0x9e, 0x8d, 0x56, 0xf0, 0x6d, 0x72, 0x99, 0xe2, 0x42, 0xc1, 0x89, 0x69, 0x74,
	0x8a, 0xe0, 0xbf, 0x81, 0x5d, 0x43, 0x62, 0x65, 0x53, 0x38, 0x15, 0xb2, 0xed, 0x53, 0x79, 0x84,
	0x35, 0x7a, 0x97, 0x94, 0x0c, 0xd7, 0x8b, 0xf7, 0x28, 0x1c, 0xa2, 0x8c, 0x45, 0x21, 0x74, 0x22,
	0xed, 0xd0, 0x99, 0xf7, 0x49, 0x5d, 0xbb, 0xcc, 0xf8, 0x93, 0x41, 0x5c, 0xa2, 0xfc, 0xe0, 0x66,
	0xa1, 0x33, 0x5f, 0x48, 0x9d, 0xb9, 0x1c, 0x67, 0x00, 0xd6, 0x35, 0xd0, 0x72, 0x61, 0xbd, 0x71,
	0xb9, 0xac, 0x11, 0xfe, 0x9c, 0x6d, 0x39, 0x73, 0x28, 0xb5, 0x57, 0xfa, 0x48, 0xa8, 0x22, 0x45,
	0xac, 0x0f, 0xfb, 0x22, 0xe4, 0x37, 0xa0, 0x3a, 0xcc, 0x14, 0x67, 0x8c, 0x2f, 0x85, 0x9e, 0x21,
	0xaa, 0xf1, 0x85, 0x55, 0xa2, 0x34, 0x7a, 0xc1, 0x83, 0xfb, 0x88, 0xd1, 0x55, 0x83, 0x26, 0x4f,
	0xc8, 0xfa, 0xfd, 0x31, 0xce, 0xa9, 0x13, 0x5b, 0x4b, 0x57, 0xff, 0x07, 0xc2, 0xe4, 0x40, 0xc8,
	0xeb, 0x06, 0xa7, 0x7e, 0xa9, 0x08, 0xae, 0x23, 0xc6, 0xba, 0x79, 0x5f, 0x13, 0x2e, 0xb1, 0x70,
	0x48, 0x30, 0x53, 0x2d, 0x6b, 0x9a, 0xd9, 0x08, 0x49, 0x60, 0x1b, 0x2d, 0x52, 0x88, 0xf2, 0x48,
	0x1c, 0x5e, 0xe8, 0x5c, 0xc9, 0x23, 0xd9, 0x99, 0x78, 0x94, 0xb4, 0x55, 0x62, 0xe6, 0x45, 0x49,
	0x0b, 0xd6, 0x63, 0x3d, 0x21, 0xf4, 0x3c, 0xa2, 0xaa, 0x7b, 0xad, 0xe7, 0xd1, 0x3f, 0x4e, 0x80,
	0x5f, 0x24, 0xb6, 0xb0, 0x84, 0x27, 0xc8, 0x1f, 0xe2, 0x55, 0xb2, 0x2e, 0x95, 0xb5, 0xb8, 0xcc,
	0x7d, 0x99, 0xf4, 0xce, 0x77, 0x19, 0xf8, 0x0a, 0x39, 0x18, 0xc4, 0xc2, 0xc5, 0xaf, 0x2e, 0x5a,
	0x0a, 0x62, 0x5f, 0xa3, 0xa1, 0x96, 0x98, 0x54, 0xf6, 0xf5, 0xf8, 0xfa, 0xd5, 0x8c, 0xb7, 0xab,
	0xcc, 0x37, 0xe2, 0x00, 0x05, 0x5a, 0x43, 0x94, 0xc5, 0x19, 0x01, 0xdf, 0x8c, 0x4f, 0x6c, 0x21,
	0xe8, 0x16, 0x7c, 0x8b, 0xc6, 0xd9, 0x70, 0x37, 0x91, 0x22, 0xc9, 0x71, 0x76, 0xc1, 0xb7, 0x63,
	0x7e, 0x13, 0xbb, 0x8e, 0x60, 0x4a, 0x5d, 0x71, 0x92, 0xff, 0x9d, 0x18, 0xf1, 0x6a, 0xaa, 0xc1,
	0xb6, 0x40, 0x2a, 0xbf, 0x4b, 0x55, 0x9e, 0x13, 0xb5, 0x71, 0x21, 0x5d, 0xdf, 0x8b, 0xb1, 0x7b,
	0xe7, 0xcb, 0xcd, 0x7c, 0x2b, 0x99, 0x34, 0x45, 0x01, 0xdf, 0x8f, 0xf9, 0xcd, 0xec, 0x7a, 0xe2,
	0x84, 0x0a, 0x22, 0xd6, 0x16, 0xfa, 0xfb, 0x07, 0xa4, 0x20, 0xec, 0x1a, 0xca, 0x62, 0x4e, 0x7d,
	0x2e, 0x8e, 0x24, 0x26, 0x0e, 0xf7, 0xac, 0x1f, 0xce, 0x33, 0x42, 0xaa, 0x45, 0x51, 0xa0, 0x76,
	0x52, 0xfe, 0x23, 0xea, 0xb0, 0xc1, 0xf2, 0x84, 0x61, 0x20, 0x17, 0x23, 0xf9, 0x71, 0xdc, 0x6f,
	0x4a, 0x5a, 0x25, 0x87, 0x3e, 0x6d, 0xaa, 0x42, 0x25, 0xf8, 0xd8, 0xfe, 0x24, 0x46, 0x44, 0x0d,
	0x62, 0x69, 0xca, 0x41, 0x06, 0x7e, 0x1a, 0xf7, 0xe0, 0xc7, 0xb7, 0x46, 0x9b, 0x10, 0xe7, 0xcf,
	0xe6, 0x09, 0x08, 0x43, 0x0e, 0x2f, 0xa0, 0xfc, 0xcf, 0x89, 0x61, 0x6a, 0x85, 0x20, 0x0f, 0x69,
	0x71, 0xb4, 0x63, 0xfe, 0x62, 0x8e, 0xad, 0x42, 0x1e, 0xc9, 0xc2, 0x17, 0x66, 0x0a, 0xbf, 0xa4,
	0xd2, 0xf4, 0x80, 0xb3, 0xcd, 0xd8, 0xd4, 0xa9, 0xd2, 0xe8, 0xd6, 0xaf, 0x16, 0xb1, 0x48, 0xe9,
	0x82, 0x5f, 0x53, 0x81, 0x7b, 0x62, 0xfb, 0x55, 0xf4, 0x1b, 0xea, 0x1c, 0x4c, 0x93, 0xb7, 0x08,
	0x0e, 0x55, 0xc1, 0x93, 0x71, 0xf8, 0xa6, 0xa1, 0x61, 0x5e, 0x0a, 0xa5, 0x1d, 0x62, 0xf0, 0xb7,
	0xd4, 0x33, 0x2d, 0x95, 0x3e, 0x37, 0x52, 0xf8, 0x1d, 0x25, 0xe6, 0x48, 0xd6, 0xd8, 0xbc, 0x5e,
	0x4b, 0x99, 0x76, 0x5b, 0xc8, 0xef, 0xe3, 0xfd, 0x84, 0xad, 0x25, 0x46, 0x5b, 0xc7, 0x01, 0x3b,
	0x53, 0x5b, 0xe7, 0x1b, 0xdd, 0xe0, 0xad, 0x53, 0x7c, 0x8f, 0xc5, 0x76, 0x66, 0x69, 0x0d, 0x82,
	0xcb, 0xdd, 0xbf, 0x25, 0xbe, 0xc3, 0x98, 0x33, 0x4e, 0x14, 0x81, 0x71, 0xf7, 0x1f, 0x9e, 0x5a,
	0xdd, 0x77, 0x2c, 0xae, 0x0a, 0xe1, 0x26, 0xa6, 0x2e, 0xf9, 0x2e, 0x1b, 0x75, 0xbf, 0xe7, 0xaa,
	0x4e, 0xb3, 0xb5, 0xac, 0x91, 0xd6, 0xc1, 0x12, 0x7e, 0x43, 0x76, 0x1f, 0x40, 0xcb, 0x9c, 0xb1,
	0xf5, 0xa9, 0x4c, 0x72, 0xe1, 0x60, 0x85, 0x8f, 0xd8, 0x46, 0xf8, 0x1d, 0x36, 0xf6, 0xd5, 0xfd,
	0xc7, 0x57, 0xd8, 0x2a, 0xfe, 0x44, 0x0e, 0x8d, 0x84, 0x5e, 0xdd, 0x59, 0xc6, 0xcf, 0x2b, 0xa1,
	0xb3, 0x0b, 0x79, 0x23, 0x74, 0xe6, 0xb5, 0x6a, 0xb4, 0x6a, 0x60, 0x09, 0x3f, 0x57, 0x2f, 0xe4,
	0xe2, 0x40, 0xe9, 0xbc, 0x11, 0xb0, 0xcc, 0x37, 0x59, 0x3c, 0x16, 0xea, 0x40, 0x89, 0x42, 0xc2,
	0x0a, 0x32, 0x4b, 0x91, 0x1f, 0x18, 0x9d, 0xf9, 0x3b, 0x60, 0x75, 0x78, 0x3c, 0x07, 0x6b, 0xc3,
	0xe3, 0xed, 0xb0, 0x8e, 0x5e, 0x5a, 0xa1, 0x33, 0xa3, 0x33, 0x88, 0x90, 0x97, 0xe2, 0xac, 0x39,
	0x56, 0xc2, 0x40, 0x8c, 0x4e, 0x8f, 0x55, 0xe6, 0xa6, 0x06, 0x4e, 0xf3, 0x3d, 0xb6, 0x93, 0x1b,
	0x74, 0x04, 0x2f, 0xb6, 0x0a, 0x80, 0xe1, 0x8d, 0x4a, 0x98, 0x54, 0x1e, 0x36, 0x42, 0xc1, 0x06,
	0x7e, 0xfe, 0xce, 0x94, 0x1e, 0x2b, 0xdd, 0x8b, 0x6c, 0x62, 0x9e, 0x5a, 0x5a, 0xb7, 0x0b, 0xc0,
	0x16, 0x46, 0xda, 0xdf, 0xf3, 0xb7, 0xc3, 0x36, 0x3f, 0xc3, 0x40, 0x2b, 0x9d, 0xcd, 0x1a, 0x31,
	0xbf, 0x3b, 0x5a, 0x14, 0x3b, 0x07, 0xb0, 0x48, 0xb8, 0x03, 0x76, 0xe8, 0x9e, 0xc4, 0xd0, 0x07,
	0x6e, 0x71, 0xf4, 0xb6, 0x68, 0x2e, 0xe4, 0xa6, 0xf1, 0x59, 0xa3, 0x3a, 0xf2, 0x2e, 0x7e, 0xc0,
	0xcf, 0x84, 0x39, 0x50, 0xbd, 0xe4, 0x19, 0xf4, 0xb8, 0x90, 0x36, 0x17, 0xda, 0xcb, 0xfa, 0xbc,
	0xb2, 0xb9, 0x82, 0xbd, 0xfd, 0x4b, 0xcb, 0x6c, 0x15, 0x3f, 0x57, 0xd0, 0x1a, 0xfe, 0x3f, 0xaf,
	0xc7, 0x06, 0x8b, 0xc6, 0xaa, 0x94, 0x3a, 0xfb, 0x54, 0x28, 0x70, 0x38, 0x9c, 0x83, 0xe5, 0xf9,
	0xe1, 0xd3, 0xb0, 0xc2, 0xd7, 0xd9, 0x72, 0x72, 0x0e, 0x56, 0x91, 0xd8, 0xfd, 0x69, 0x60, 0x0d,
	0xfb, 0xee, 0x82, 0xf2, 0xa5, 0xf1, 0x07, 0x4a, 0xf8, 0x54, 0xc1, 0x3a, 0xba, 0x33, 0xa7, 0x4c,
	0x84, 0x06, 0x5c, 0x41, 0x76, 0x53, 0x25, 0xb4, 0xcf, 0x30, 0x9e, 0xbc, 0x11, 0x9e, 0x04, 0x00,
	0x47, 0xc5, 0xd9, 0x45, 0x06, 0x9d, 0x2a, 0xd1, 0xd6, 0x66, 0x26, 0x50, 0x4b, 0xe3, 0x43, 0x22,
	0xd2, 0x46, 0x01, 0xe3, 0xdb, 0x8c, 0x39, 0x14, 0x4a, 0x95, 0xcf, 0x1b, 0xd8, 0xc0, 0x73, 0x2e,
	0x14, 0x1e, 0x0b, 0x61, 0x60, 0x13, 0xaf, 0x59, 0xa1, 0xd1, 0xb0, 0x9f, 0x48, 0xbc, 0x85, 0x53,
	0x69, 0x0b, 0x33, 0x6a, 0xd5, 0x09, 0xea, 0x36, 0x7a, 0x3f, 0x6e, 0x06, 0x94, 0x11, 0xbf, 0x8e,
	0xed, 0x95, 0x52, 0xfb, 0xf3, 0x8a, 0x0c, 0x0a, 0xed, 0x5b, 0x1f, 0x00, 0xbf, 0x1f, 0x21, 0x15,
	0x15, 0xda, 0xea, 0x7b, 0x17, 0x76, 0x30, 0x9b, 0x83, 0x66, 0xc6, 0x2f, 0x2e, 0xb6, 0x9e, 0x34,
	0xa6, 0x12, 0x0a, 0x76, 0xa9, 0xd7, 0xb0, 0x34, 0x0d, 0x9c, 0xd9, 0x9f, 0xb6, 0x6f, 0x8e, 0x53,
	0xae, 0x90, 0xe8, 0xe6, 0xfc, 0xd4, 0x3d, 0x19, 0xa7, 0xf8, 0x0d, 0xed, 0x68, 0x0d, 0xe4, 0xc5,
	0x8f, 0xe6, 0x25, 0xf4, 0x60, 0xc0, 0x0d, 0x13, 0x67, 0x79, 0xff, 0x6f, 0x4b, 0x6c, 0x3d, 0xcc,
	0x33, 0x74, 0xc6, 0xca, 0x62, 0xe2, 0xad, 0x2c, 0x64, 0xe2, 0xe0, 0x14, 0x76, 0x32, 0x7d, 0x28,
	0x62, 0x17, 0xc2, 0x12, 0x42, 0x2a, 0xe4, 0x52, 0xe8, 0x50, 0xdd, 0x63, 0xa5, 0xb3, 0xa9, 0xd4,
	0xb0, 0x82, 0xae, 0x86, 0xe6, 0x82, 0x55, 0xc4, 0xfb, 0x4c, 0x8d, 0x95, 0x86, 0x35, 0x94, 0x49,
	0x72, 0xa9, 0xb3, 0xb4, 0x09, 0xb0, 0xca, 0x84, 0x39, 0x56, 0x54, 0xd4, 0x4d, 0x16, 0x23, 0xc0,
	0xe8, 0x14, 0x23, 0x2b, 0x97, 0xa4, 0x1b, 0x4e, 0x93, 0x99, 0x46, 0x17, 0x74, 0x62, 0xa4, 0x99,
	0x9a, 0x11, 0x36, 0x50, 0xb3, 0x16, 0xfa, 0x58, 0xc1, 0x26, 0x0a, 0x55, 0x4a, 0x67, 0xc4, 0xd8,
	0x42, 0xa1, 0xe3, 0x66, 0x66, 0xa8, 0x2a, 0x34, 0x6e, 0x0a, 0xa5, 0x61, 0xf4, 0x99, 0x75, 0xfa,
	0xab, 0xd6, 0xb9, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x53, 0x1b, 0x5b, 0x0d, 0xeb, 0x12, 0x00,
	0x00,
}
