// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gate.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ClientReq struct {
	Api  PROTO  `protobuf:"varint,1,opt,name=api,enum=protocol.PROTO" json:"api,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ClientReq) Reset()                    { *m = ClientReq{} }
func (m *ClientReq) String() string            { return proto.CompactTextString(m) }
func (*ClientReq) ProtoMessage()               {}
func (*ClientReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ClientReq) GetApi() PROTO {
	if m != nil {
		return m.Api
	}
	return PROTO_TEST_GATE
}

func (m *ClientReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ClientResp struct {
	Api  PROTO  `protobuf:"varint,1,opt,name=api,enum=protocol.PROTO" json:"api,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ClientResp) Reset()                    { *m = ClientResp{} }
func (m *ClientResp) String() string            { return proto.CompactTextString(m) }
func (*ClientResp) ProtoMessage()               {}
func (*ClientResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ClientResp) GetApi() PROTO {
	if m != nil {
		return m.Api
	}
	return PROTO_TEST_GATE
}

func (m *ClientResp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 登录
// @api:2002,@type:req
type LoginReq struct {
	Uuid         string   `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Account      string   `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Pwd          string   `protobuf:"bytes,3,opt,name=pwd" json:"pwd,omitempty"`
	Platform     PLATFORM `protobuf:"varint,4,opt,name=platform,enum=protocol.PLATFORM" json:"platform,omitempty"`
	IsNew        bool     `protobuf:"varint,5,opt,name=isNew" json:"isNew,omitempty"`
	Code         string   `protobuf:"bytes,6,opt,name=code" json:"code,omitempty"`
	Token        string   `protobuf:"bytes,7,opt,name=token" json:"token,omitempty"`
	RefreshToken string   `protobuf:"bytes,8,opt,name=refreshToken" json:"refreshToken,omitempty"`
	Inviter      int64    `protobuf:"varint,9,opt,name=inviter" json:"inviter,omitempty"`
	Os           string   `protobuf:"bytes,10,opt,name=os" json:"os,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *LoginReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *LoginReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LoginReq) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *LoginReq) GetPlatform() PLATFORM {
	if m != nil {
		return m.Platform
	}
	return PLATFORM_PLATFORM_UNUSED
}

func (m *LoginReq) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *LoginReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *LoginReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginReq) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *LoginReq) GetInviter() int64 {
	if m != nil {
		return m.Inviter
	}
	return 0
}

func (m *LoginReq) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

// @api:2002,@type:resp
type LoginResp struct {
	Id             int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Gold           int64   `protobuf:"varint,3,opt,name=gold" json:"gold,omitempty"`
	Diamond        int64   `protobuf:"varint,4,opt,name=diamond" json:"diamond,omitempty"`
	Roomcard       []int64 `protobuf:"varint,5,rep,packed,name=roomcard" json:"roomcard,omitempty"`
	GsId           int32   `protobuf:"varint,6,opt,name=gsId" json:"gsId,omitempty"`
	RoomId         int32   `protobuf:"varint,7,opt,name=roomId" json:"roomId,omitempty"`
	Uuid           string  `protobuf:"bytes,8,opt,name=uuid" json:"uuid,omitempty"`
	BankGold       int64   `protobuf:"varint,9,opt,name=bankGold" json:"bankGold,omitempty"`
	Icon           string  `protobuf:"bytes,10,opt,name=icon" json:"icon,omitempty"`
	Signature      string  `protobuf:"bytes,11,opt,name=signature" json:"signature,omitempty"`
	IsNew          bool    `protobuf:"varint,12,opt,name=isNew" json:"isNew,omitempty"`
	ShareCnt       int32   `protobuf:"varint,13,opt,name=shareCnt" json:"shareCnt,omitempty"`
	ShareTotal     int32   `protobuf:"varint,14,opt,name=shareTotal" json:"shareTotal,omitempty"`
	ShareAchieve   int32   `protobuf:"varint,15,opt,name=shareAchieve" json:"shareAchieve,omitempty"`
	CanOpenRedPkg  int32   `protobuf:"varint,16,opt,name=canOpenRedPkg" json:"canOpenRedPkg,omitempty"`
	AchieveRedPkg  float32 `protobuf:"fixed32,17,opt,name=achieveRedPkg" json:"achieveRedPkg,omitempty"`
	Ip             string  `protobuf:"bytes,18,opt,name=ip" json:"ip,omitempty"`
	ServerTime     int64   `protobuf:"varint,19,opt,name=serverTime" json:"serverTime,omitempty"`
	Sex            int32   `protobuf:"varint,20,opt,name=sex" json:"sex,omitempty"`
	Gps            *Gps    `protobuf:"bytes,21,opt,name=gps" json:"gps,omitempty"`
	CreateClubPerm []int32 `protobuf:"varint,22,rep,packed,name=createClubPerm" json:"createClubPerm,omitempty"`
}

func (m *LoginResp) Reset()                    { *m = LoginResp{} }
func (m *LoginResp) String() string            { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()               {}
func (*LoginResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *LoginResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LoginResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginResp) GetGold() int64 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *LoginResp) GetDiamond() int64 {
	if m != nil {
		return m.Diamond
	}
	return 0
}

func (m *LoginResp) GetRoomcard() []int64 {
	if m != nil {
		return m.Roomcard
	}
	return nil
}

func (m *LoginResp) GetGsId() int32 {
	if m != nil {
		return m.GsId
	}
	return 0
}

func (m *LoginResp) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *LoginResp) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *LoginResp) GetBankGold() int64 {
	if m != nil {
		return m.BankGold
	}
	return 0
}

func (m *LoginResp) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *LoginResp) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *LoginResp) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *LoginResp) GetShareCnt() int32 {
	if m != nil {
		return m.ShareCnt
	}
	return 0
}

func (m *LoginResp) GetShareTotal() int32 {
	if m != nil {
		return m.ShareTotal
	}
	return 0
}

func (m *LoginResp) GetShareAchieve() int32 {
	if m != nil {
		return m.ShareAchieve
	}
	return 0
}

func (m *LoginResp) GetCanOpenRedPkg() int32 {
	if m != nil {
		return m.CanOpenRedPkg
	}
	return 0
}

func (m *LoginResp) GetAchieveRedPkg() float32 {
	if m != nil {
		return m.AchieveRedPkg
	}
	return 0
}

func (m *LoginResp) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *LoginResp) GetServerTime() int64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

func (m *LoginResp) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *LoginResp) GetGps() *Gps {
	if m != nil {
		return m.Gps
	}
	return nil
}

func (m *LoginResp) GetCreateClubPerm() []int32 {
	if m != nil {
		return m.CreateClubPerm
	}
	return nil
}

// 修改玩家信息
// @api:2024,@type:req
type ModifyUserInfo struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Signature string `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
}

func (m *ModifyUserInfo) Reset()                    { *m = ModifyUserInfo{} }
func (m *ModifyUserInfo) String() string            { return proto.CompactTextString(m) }
func (*ModifyUserInfo) ProtoMessage()               {}
func (*ModifyUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ModifyUserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModifyUserInfo) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

// 公告
// @api:2017,@type:req
type NoticeReq struct {
}

func (m *NoticeReq) Reset()                    { *m = NoticeReq{} }
func (m *NoticeReq) String() string            { return proto.CompactTextString(m) }
func (*NoticeReq) ProtoMessage()               {}
func (*NoticeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

// @api:2017,@type:resp
type NoticeResp struct {
	List []*NoticeInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *NoticeResp) Reset()                    { *m = NoticeResp{} }
func (m *NoticeResp) String() string            { return proto.CompactTextString(m) }
func (*NoticeResp) ProtoMessage()               {}
func (*NoticeResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *NoticeResp) GetList() []*NoticeInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type NoticeInfo struct {
	Title    string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Content  string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Datetime int64  `protobuf:"varint,3,opt,name=datetime" json:"datetime,omitempty"`
}

func (m *NoticeInfo) Reset()                    { *m = NoticeInfo{} }
func (m *NoticeInfo) String() string            { return proto.CompactTextString(m) }
func (*NoticeInfo) ProtoMessage()               {}
func (*NoticeInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *NoticeInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NoticeInfo) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *NoticeInfo) GetDatetime() int64 {
	if m != nil {
		return m.Datetime
	}
	return 0
}

// 排行榜
// @api:2023,@type:req
type RankingReq struct {
}

func (m *RankingReq) Reset()                    { *m = RankingReq{} }
func (m *RankingReq) String() string            { return proto.CompactTextString(m) }
func (*RankingReq) ProtoMessage()               {}
func (*RankingReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

// @api:2023,@type:resp
type RankingResp struct {
	SelfGold int64          `protobuf:"varint,1,opt,name=selfGold" json:"selfGold,omitempty"`
	SelfRank int32          `protobuf:"varint,2,opt,name=selfRank" json:"selfRank,omitempty"`
	List     []*RankingInfo `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
}

func (m *RankingResp) Reset()                    { *m = RankingResp{} }
func (m *RankingResp) String() string            { return proto.CompactTextString(m) }
func (*RankingResp) ProtoMessage()               {}
func (*RankingResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *RankingResp) GetSelfGold() int64 {
	if m != nil {
		return m.SelfGold
	}
	return 0
}

func (m *RankingResp) GetSelfRank() int32 {
	if m != nil {
		return m.SelfRank
	}
	return 0
}

func (m *RankingResp) GetList() []*RankingInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type RankingInfo struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Userid    int64  `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Gold      int64  `protobuf:"varint,3,opt,name=Gold" json:"Gold,omitempty"`
	Icon      string `protobuf:"bytes,4,opt,name=icon" json:"icon,omitempty"`
	Signature string `protobuf:"bytes,5,opt,name=signature" json:"signature,omitempty"`
}

func (m *RankingInfo) Reset()                    { *m = RankingInfo{} }
func (m *RankingInfo) String() string            { return proto.CompactTextString(m) }
func (*RankingInfo) ProtoMessage()               {}
func (*RankingInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *RankingInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RankingInfo) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *RankingInfo) GetGold() int64 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *RankingInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *RankingInfo) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

// 活动
// @api:2048,@type:req
type GetActionListReq struct {
}

func (m *GetActionListReq) Reset()                    { *m = GetActionListReq{} }
func (m *GetActionListReq) String() string            { return proto.CompactTextString(m) }
func (*GetActionListReq) ProtoMessage()               {}
func (*GetActionListReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

// @api:2048,@type:resp
type GetActionListResp struct {
	List []*ActionInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *GetActionListResp) Reset()                    { *m = GetActionListResp{} }
func (m *GetActionListResp) String() string            { return proto.CompactTextString(m) }
func (*GetActionListResp) ProtoMessage()               {}
func (*GetActionListResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *GetActionListResp) GetList() []*ActionInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type ActionInfo struct {
	ActionId int32  `protobuf:"varint,1,opt,name=actionId" json:"actionId,omitempty"`
	Type     int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Start    int64  `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	End      int64  `protobuf:"varint,4,opt,name=end" json:"end,omitempty"`
	Close    int64  `protobuf:"varint,5,opt,name=close" json:"close,omitempty"`
	Title    string `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	Content  string `protobuf:"bytes,7,opt,name=content" json:"content,omitempty"`
	Img      string `protobuf:"bytes,8,opt,name=img" json:"img,omitempty"`
	IsRun    int32  `protobuf:"varint,9,opt,name=isRun" json:"isRun,omitempty"`
}

func (m *ActionInfo) Reset()                    { *m = ActionInfo{} }
func (m *ActionInfo) String() string            { return proto.CompactTextString(m) }
func (*ActionInfo) ProtoMessage()               {}
func (*ActionInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ActionInfo) GetActionId() int32 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

func (m *ActionInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ActionInfo) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ActionInfo) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *ActionInfo) GetClose() int64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *ActionInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ActionInfo) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ActionInfo) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *ActionInfo) GetIsRun() int32 {
	if m != nil {
		return m.IsRun
	}
	return 0
}

// 活动排行榜
// @api:2049,@type:req
type ActionRankingReq struct {
	ActionId int32 `protobuf:"varint,1,opt,name=actionId" json:"actionId,omitempty"`
}

func (m *ActionRankingReq) Reset()                    { *m = ActionRankingReq{} }
func (m *ActionRankingReq) String() string            { return proto.CompactTextString(m) }
func (*ActionRankingReq) ProtoMessage()               {}
func (*ActionRankingReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *ActionRankingReq) GetActionId() int32 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

// @api:2049,@type:resp
type ActionRankingResp struct {
	ActionId int32          `protobuf:"varint,1,opt,name=actionId" json:"actionId,omitempty"`
	SelfGold int64          `protobuf:"varint,2,opt,name=selfGold" json:"selfGold,omitempty"`
	SelfRank int32          `protobuf:"varint,3,opt,name=selfRank" json:"selfRank,omitempty"`
	List     []*RankingInfo `protobuf:"bytes,4,rep,name=list" json:"list,omitempty"`
}

func (m *ActionRankingResp) Reset()                    { *m = ActionRankingResp{} }
func (m *ActionRankingResp) String() string            { return proto.CompactTextString(m) }
func (*ActionRankingResp) ProtoMessage()               {}
func (*ActionRankingResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *ActionRankingResp) GetActionId() int32 {
	if m != nil {
		return m.ActionId
	}
	return 0
}

func (m *ActionRankingResp) GetSelfGold() int64 {
	if m != nil {
		return m.SelfGold
	}
	return 0
}

func (m *ActionRankingResp) GetSelfRank() int32 {
	if m != nil {
		return m.SelfRank
	}
	return 0
}

func (m *ActionRankingResp) GetList() []*RankingInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 分销
// @api:2027,@type:req
type DistributionReq struct {
}

func (m *DistributionReq) Reset()                    { *m = DistributionReq{} }
func (m *DistributionReq) String() string            { return proto.CompactTextString(m) }
func (*DistributionReq) ProtoMessage()               {}
func (*DistributionReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

// @api:2027,@type:resp
type DistributionResp struct {
	Userid  int64     `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Team    *Team     `protobuf:"bytes,2,opt,name=team" json:"team,omitempty"`
	List    []*Pusher `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
	Employ  *Employ   `protobuf:"bytes,4,opt,name=employ" json:"employ,omitempty"`
	Achieve *Achieve  `protobuf:"bytes,5,opt,name=achieve" json:"achieve,omitempty"`
}

func (m *DistributionResp) Reset()                    { *m = DistributionResp{} }
func (m *DistributionResp) String() string            { return proto.CompactTextString(m) }
func (*DistributionResp) ProtoMessage()               {}
func (*DistributionResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *DistributionResp) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *DistributionResp) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *DistributionResp) GetList() []*Pusher {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *DistributionResp) GetEmploy() *Employ {
	if m != nil {
		return m.Employ
	}
	return nil
}

func (m *DistributionResp) GetAchieve() *Achieve {
	if m != nil {
		return m.Achieve
	}
	return nil
}

type Team struct {
	Owner     int64 `protobuf:"varint,1,opt,name=owner" json:"owner,omitempty"`
	IncOwner  int64 `protobuf:"varint,2,opt,name=incOwner" json:"incOwner,omitempty"`
	Teamer    int64 `protobuf:"varint,3,opt,name=teamer" json:"teamer,omitempty"`
	IncTeamer int64 `protobuf:"varint,4,opt,name=incTeamer" json:"incTeamer,omitempty"`
}

func (m *Team) Reset()                    { *m = Team{} }
func (m *Team) String() string            { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()               {}
func (*Team) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *Team) GetOwner() int64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *Team) GetIncOwner() int64 {
	if m != nil {
		return m.IncOwner
	}
	return 0
}

func (m *Team) GetTeamer() int64 {
	if m != nil {
		return m.Teamer
	}
	return 0
}

func (m *Team) GetIncTeamer() int64 {
	if m != nil {
		return m.IncTeamer
	}
	return 0
}

type Pusher struct {
	NextId      int64  `protobuf:"varint,1,opt,name=nextId" json:"nextId,omitempty"`
	Nike        string `protobuf:"bytes,2,opt,name=nike" json:"nike,omitempty"`
	NextAchieve int64  `protobuf:"varint,3,opt,name=nextAchieve" json:"nextAchieve,omitempty"`
	OwnAchieve  int64  `protobuf:"varint,4,opt,name=ownAchieve" json:"ownAchieve,omitempty"`
}

func (m *Pusher) Reset()                    { *m = Pusher{} }
func (m *Pusher) String() string            { return proto.CompactTextString(m) }
func (*Pusher) ProtoMessage()               {}
func (*Pusher) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *Pusher) GetNextId() int64 {
	if m != nil {
		return m.NextId
	}
	return 0
}

func (m *Pusher) GetNike() string {
	if m != nil {
		return m.Nike
	}
	return ""
}

func (m *Pusher) GetNextAchieve() int64 {
	if m != nil {
		return m.NextAchieve
	}
	return 0
}

func (m *Pusher) GetOwnAchieve() int64 {
	if m != nil {
		return m.OwnAchieve
	}
	return 0
}

type Employ struct {
	Week      float64 `protobuf:"fixed64,1,opt,name=week" json:"week,omitempty"`
	Available float64 `protobuf:"fixed64,2,opt,name=available" json:"available,omitempty"`
	Total     float64 `protobuf:"fixed64,3,opt,name=total" json:"total,omitempty"`
	Next      float64 `protobuf:"fixed64,4,opt,name=next" json:"next,omitempty"`
}

func (m *Employ) Reset()                    { *m = Employ{} }
func (m *Employ) String() string            { return proto.CompactTextString(m) }
func (*Employ) ProtoMessage()               {}
func (*Employ) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *Employ) GetWeek() float64 {
	if m != nil {
		return m.Week
	}
	return 0
}

func (m *Employ) GetAvailable() float64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Employ) GetTotal() float64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Employ) GetNext() float64 {
	if m != nil {
		return m.Next
	}
	return 0
}

type Achieve struct {
	Week  int64 `protobuf:"varint,1,opt,name=week" json:"week,omitempty"`
	Owner int64 `protobuf:"varint,2,opt,name=owner" json:"owner,omitempty"`
	Next  int64 `protobuf:"varint,3,opt,name=next" json:"next,omitempty"`
}

func (m *Achieve) Reset()                    { *m = Achieve{} }
func (m *Achieve) String() string            { return proto.CompactTextString(m) }
func (*Achieve) ProtoMessage()               {}
func (*Achieve) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *Achieve) GetWeek() int64 {
	if m != nil {
		return m.Week
	}
	return 0
}

func (m *Achieve) GetOwner() int64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *Achieve) GetNext() int64 {
	if m != nil {
		return m.Next
	}
	return 0
}

// @api:2031,@type:req
type GetTeamRewardReq struct {
}

func (m *GetTeamRewardReq) Reset()                    { *m = GetTeamRewardReq{} }
func (m *GetTeamRewardReq) String() string            { return proto.CompactTextString(m) }
func (*GetTeamRewardReq) ProtoMessage()               {}
func (*GetTeamRewardReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

// @api:2032,@type:req
type GetShareRewardReq struct {
}

func (m *GetShareRewardReq) Reset()                    { *m = GetShareRewardReq{} }
func (m *GetShareRewardReq) String() string            { return proto.CompactTextString(m) }
func (*GetShareRewardReq) ProtoMessage()               {}
func (*GetShareRewardReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

// @api:2033,@type:req
type ChargeReq struct {
	Platform int32 `protobuf:"varint,1,opt,name=platform" json:"platform,omitempty"`
	Amount   int32 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *ChargeReq) Reset()                    { *m = ChargeReq{} }
func (m *ChargeReq) String() string            { return proto.CompactTextString(m) }
func (*ChargeReq) ProtoMessage()               {}
func (*ChargeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *ChargeReq) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *ChargeReq) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// @api:2033,@type:resp
type ChargeResp struct {
	Platform int32  `protobuf:"varint,1,opt,name=platform" json:"platform,omitempty"`
	ToPayUrl string `protobuf:"bytes,2,opt,name=toPayUrl" json:"toPayUrl,omitempty"`
}

func (m *ChargeResp) Reset()                    { *m = ChargeResp{} }
func (m *ChargeResp) String() string            { return proto.CompactTextString(m) }
func (*ChargeResp) ProtoMessage()               {}
func (*ChargeResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *ChargeResp) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *ChargeResp) GetToPayUrl() string {
	if m != nil {
		return m.ToPayUrl
	}
	return ""
}

// @api:2047,@type:req
type GetShareRedPkgReq struct {
}

func (m *GetShareRedPkgReq) Reset()                    { *m = GetShareRedPkgReq{} }
func (m *GetShareRedPkgReq) String() string            { return proto.CompactTextString(m) }
func (*GetShareRedPkgReq) ProtoMessage()               {}
func (*GetShareRedPkgReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

// @api:2047,@type:resp
type GetShareRedPkgResp struct {
	AchieveRedPkg float32 `protobuf:"fixed32,1,opt,name=achieveRedPkg" json:"achieveRedPkg,omitempty"`
}

func (m *GetShareRedPkgResp) Reset()                    { *m = GetShareRedPkgResp{} }
func (m *GetShareRedPkgResp) String() string            { return proto.CompactTextString(m) }
func (*GetShareRedPkgResp) ProtoMessage()               {}
func (*GetShareRedPkgResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *GetShareRedPkgResp) GetAchieveRedPkg() float32 {
	if m != nil {
		return m.AchieveRedPkg
	}
	return 0
}

// @api:2034,@type:req
type CreateClubReq struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Desc      string `protobuf:"bytes,2,opt,name=desc" json:"desc,omitempty"`
	GameTypes int32  `protobuf:"varint,3,opt,name=gameTypes" json:"gameTypes,omitempty"`
	Origin    int32  `protobuf:"varint,4,opt,name=origin" json:"origin,omitempty"`
	ClubType  int32  `protobuf:"varint,5,opt,name=clubType" json:"clubType,omitempty"`
}

func (m *CreateClubReq) Reset()                    { *m = CreateClubReq{} }
func (m *CreateClubReq) String() string            { return proto.CompactTextString(m) }
func (*CreateClubReq) ProtoMessage()               {}
func (*CreateClubReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *CreateClubReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateClubReq) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CreateClubReq) GetGameTypes() int32 {
	if m != nil {
		return m.GameTypes
	}
	return 0
}

func (m *CreateClubReq) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

func (m *CreateClubReq) GetClubType() int32 {
	if m != nil {
		return m.ClubType
	}
	return 0
}

// @api:2034,@type:resp
type CreateClubResp struct {
	Info *ClubInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *CreateClubResp) Reset()                    { *m = CreateClubResp{} }
func (m *CreateClubResp) String() string            { return proto.CompactTextString(m) }
func (*CreateClubResp) ProtoMessage()               {}
func (*CreateClubResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *CreateClubResp) GetInfo() *ClubInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type ClubInfo struct {
	ClubId    int32  `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	MemberCnt int32  `protobuf:"varint,2,opt,name=memberCnt" json:"memberCnt,omitempty"`
	RoomCnt   int32  `protobuf:"varint,3,opt,name=roomCnt" json:"roomCnt,omitempty"`
	ApplyCnt  int32  `protobuf:"varint,4,opt,name=applyCnt" json:"applyCnt,omitempty"`
	GameTypes int32  `protobuf:"varint,5,opt,name=gameTypes" json:"gameTypes,omitempty"`
	OwnerId   int64  `protobuf:"varint,6,opt,name=ownerId" json:"ownerId,omitempty"`
	Name      string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	Icon      string `protobuf:"bytes,8,opt,name=icon" json:"icon,omitempty"`
	Desc      string `protobuf:"bytes,9,opt,name=desc" json:"desc,omitempty"`
	OwnerName string `protobuf:"bytes,10,opt,name=ownerName" json:"ownerName,omitempty"`
	Origin    int32  `protobuf:"varint,11,opt,name=origin" json:"origin,omitempty"`
	SelfPerm  int32  `protobuf:"varint,12,opt,name=selfPerm" json:"selfPerm,omitempty"`
	ClubType  int32  `protobuf:"varint,13,opt,name=clubType" json:"clubType,omitempty"`
}

func (m *ClubInfo) Reset()                    { *m = ClubInfo{} }
func (m *ClubInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubInfo) ProtoMessage()               {}
func (*ClubInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{30} }

func (m *ClubInfo) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ClubInfo) GetMemberCnt() int32 {
	if m != nil {
		return m.MemberCnt
	}
	return 0
}

func (m *ClubInfo) GetRoomCnt() int32 {
	if m != nil {
		return m.RoomCnt
	}
	return 0
}

func (m *ClubInfo) GetApplyCnt() int32 {
	if m != nil {
		return m.ApplyCnt
	}
	return 0
}

func (m *ClubInfo) GetGameTypes() int32 {
	if m != nil {
		return m.GameTypes
	}
	return 0
}

func (m *ClubInfo) GetOwnerId() int64 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *ClubInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClubInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ClubInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *ClubInfo) GetOwnerName() string {
	if m != nil {
		return m.OwnerName
	}
	return ""
}

func (m *ClubInfo) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

func (m *ClubInfo) GetSelfPerm() int32 {
	if m != nil {
		return m.SelfPerm
	}
	return 0
}

func (m *ClubInfo) GetClubType() int32 {
	if m != nil {
		return m.ClubType
	}
	return 0
}

// @api:2035,@type:req
type GetClubListReq struct {
}

func (m *GetClubListReq) Reset()                    { *m = GetClubListReq{} }
func (m *GetClubListReq) String() string            { return proto.CompactTextString(m) }
func (*GetClubListReq) ProtoMessage()               {}
func (*GetClubListReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

// @api:2035,@type:resp
type GetClubListResp struct {
	List []*ClubInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *GetClubListResp) Reset()                    { *m = GetClubListResp{} }
func (m *GetClubListResp) String() string            { return proto.CompactTextString(m) }
func (*GetClubListResp) ProtoMessage()               {}
func (*GetClubListResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *GetClubListResp) GetList() []*ClubInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// @api:2036,@type:req
type SearchClubReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *SearchClubReq) Reset()                    { *m = SearchClubReq{} }
func (m *SearchClubReq) String() string            { return proto.CompactTextString(m) }
func (*SearchClubReq) ProtoMessage()               {}
func (*SearchClubReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{33} }

func (m *SearchClubReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// @api:2036,@type:resp
type SearchClubResp struct {
	Info *ClubInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *SearchClubResp) Reset()                    { *m = SearchClubResp{} }
func (m *SearchClubResp) String() string            { return proto.CompactTextString(m) }
func (*SearchClubResp) ProtoMessage()               {}
func (*SearchClubResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{34} }

func (m *SearchClubResp) GetInfo() *ClubInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// @api:2037,@type:req
type JoinClubReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *JoinClubReq) Reset()                    { *m = JoinClubReq{} }
func (m *JoinClubReq) String() string            { return proto.CompactTextString(m) }
func (*JoinClubReq) ProtoMessage()               {}
func (*JoinClubReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{35} }

func (m *JoinClubReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// 修改俱乐部信息
// @api:2038,@type:req
type ModifyClubInfoReq struct {
	ClubId int32  `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc" json:"desc,omitempty"`
}

func (m *ModifyClubInfoReq) Reset()                    { *m = ModifyClubInfoReq{} }
func (m *ModifyClubInfoReq) String() string            { return proto.CompactTextString(m) }
func (*ModifyClubInfoReq) ProtoMessage()               {}
func (*ModifyClubInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{36} }

func (m *ModifyClubInfoReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ModifyClubInfoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModifyClubInfoReq) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

// 退出俱乐部
// @api:2039,@type:req
type QuitClubReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *QuitClubReq) Reset()                    { *m = QuitClubReq{} }
func (m *QuitClubReq) String() string            { return proto.CompactTextString(m) }
func (*QuitClubReq) ProtoMessage()               {}
func (*QuitClubReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{37} }

func (m *QuitClubReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// 解散俱乐部
// @api:2040,@type:req
type DisbandClubReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *DisbandClubReq) Reset()                    { *m = DisbandClubReq{} }
func (m *DisbandClubReq) String() string            { return proto.CompactTextString(m) }
func (*DisbandClubReq) ProtoMessage()               {}
func (*DisbandClubReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{38} }

func (m *DisbandClubReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// 俱乐部申请玩家信息
type ClubApplicantInfo struct {
	UserId int64  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Icon   string `protobuf:"bytes,3,opt,name=icon" json:"icon,omitempty"`
}

func (m *ClubApplicantInfo) Reset()                    { *m = ClubApplicantInfo{} }
func (m *ClubApplicantInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubApplicantInfo) ProtoMessage()               {}
func (*ClubApplicantInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{39} }

func (m *ClubApplicantInfo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ClubApplicantInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClubApplicantInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

// 拉取俱乐部申请列表
// @api:2042,@type:req
type GetClubApplyListReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *GetClubApplyListReq) Reset()                    { *m = GetClubApplyListReq{} }
func (m *GetClubApplyListReq) String() string            { return proto.CompactTextString(m) }
func (*GetClubApplyListReq) ProtoMessage()               {}
func (*GetClubApplyListReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{40} }

func (m *GetClubApplyListReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// 审批加入俱乐部
// @api:2041,@type:req
type ClubApproveReq struct {
	Agree  bool  `protobuf:"varint,1,opt,name=agree" json:"agree,omitempty"`
	ClubId int32 `protobuf:"varint,2,opt,name=clubId" json:"clubId,omitempty"`
	Target int64 `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
}

func (m *ClubApproveReq) Reset()                    { *m = ClubApproveReq{} }
func (m *ClubApproveReq) String() string            { return proto.CompactTextString(m) }
func (*ClubApproveReq) ProtoMessage()               {}
func (*ClubApproveReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{41} }

func (m *ClubApproveReq) GetAgree() bool {
	if m != nil {
		return m.Agree
	}
	return false
}

func (m *ClubApproveReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ClubApproveReq) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

// @api:2041,@type:resp
type ClubApproveResp struct {
	Member *ClubMemberInfo `protobuf:"bytes,1,opt,name=member" json:"member,omitempty"`
}

func (m *ClubApproveResp) Reset()                    { *m = ClubApproveResp{} }
func (m *ClubApproveResp) String() string            { return proto.CompactTextString(m) }
func (*ClubApproveResp) ProtoMessage()               {}
func (*ClubApproveResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{42} }

func (m *ClubApproveResp) GetMember() *ClubMemberInfo {
	if m != nil {
		return m.Member
	}
	return nil
}

// @api:2042,@type:resp
type GetClubApplyListResp struct {
	ClubId int32                `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	List   []*ClubApplicantInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *GetClubApplyListResp) Reset()                    { *m = GetClubApplyListResp{} }
func (m *GetClubApplyListResp) String() string            { return proto.CompactTextString(m) }
func (*GetClubApplyListResp) ProtoMessage()               {}
func (*GetClubApplyListResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{43} }

func (m *GetClubApplyListResp) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *GetClubApplyListResp) GetList() []*ClubApplicantInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 俱乐部成员信息
type ClubMemberInfo struct {
	Title     CLUB_TITLE `protobuf:"varint,1,opt,name=title,enum=protocol.CLUB_TITLE" json:"title,omitempty"`
	UserId    int64      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	LoginTime int64      `protobuf:"varint,3,opt,name=loginTime" json:"loginTime,omitempty"`
	Name      string     `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Icon      string     `protobuf:"bytes,5,opt,name=icon" json:"icon,omitempty"`
	Online    bool       `protobuf:"varint,6,opt,name=online" json:"online,omitempty"`
}

func (m *ClubMemberInfo) Reset()                    { *m = ClubMemberInfo{} }
func (m *ClubMemberInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubMemberInfo) ProtoMessage()               {}
func (*ClubMemberInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{44} }

func (m *ClubMemberInfo) GetTitle() CLUB_TITLE {
	if m != nil {
		return m.Title
	}
	return CLUB_TITLE_CLUB_TITLE_MEMBER
}

func (m *ClubMemberInfo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ClubMemberInfo) GetLoginTime() int64 {
	if m != nil {
		return m.LoginTime
	}
	return 0
}

func (m *ClubMemberInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClubMemberInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *ClubMemberInfo) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

// 获取俱乐部成员列表
// @api:2043,@type:req
type GetClubMembersListReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *GetClubMembersListReq) Reset()                    { *m = GetClubMembersListReq{} }
func (m *GetClubMembersListReq) String() string            { return proto.CompactTextString(m) }
func (*GetClubMembersListReq) ProtoMessage()               {}
func (*GetClubMembersListReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{45} }

func (m *GetClubMembersListReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// @api:2043,@type:resp
type GetClubMembersListResp struct {
	ClubId int32             `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	List   []*ClubMemberInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *GetClubMembersListResp) Reset()                    { *m = GetClubMembersListResp{} }
func (m *GetClubMembersListResp) String() string            { return proto.CompactTextString(m) }
func (*GetClubMembersListResp) ProtoMessage()               {}
func (*GetClubMembersListResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{46} }

func (m *GetClubMembersListResp) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *GetClubMembersListResp) GetList() []*ClubMemberInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 设置Club管理员
// @api:2044,@type:req
type SetClubAdministratorReq struct {
	Title  CLUB_TITLE `protobuf:"varint,1,opt,name=title,enum=protocol.CLUB_TITLE" json:"title,omitempty"`
	ClubId int32      `protobuf:"varint,2,opt,name=clubId" json:"clubId,omitempty"`
	Target int64      `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
}

func (m *SetClubAdministratorReq) Reset()                    { *m = SetClubAdministratorReq{} }
func (m *SetClubAdministratorReq) String() string            { return proto.CompactTextString(m) }
func (*SetClubAdministratorReq) ProtoMessage()               {}
func (*SetClubAdministratorReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{47} }

func (m *SetClubAdministratorReq) GetTitle() CLUB_TITLE {
	if m != nil {
		return m.Title
	}
	return CLUB_TITLE_CLUB_TITLE_MEMBER
}

func (m *SetClubAdministratorReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *SetClubAdministratorReq) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

// 删除俱乐部成员
// @api:2045,@type:req
type DeleteClubMemberReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	Target int64 `protobuf:"varint,2,opt,name=target" json:"target,omitempty"`
}

func (m *DeleteClubMemberReq) Reset()                    { *m = DeleteClubMemberReq{} }
func (m *DeleteClubMemberReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteClubMemberReq) ProtoMessage()               {}
func (*DeleteClubMemberReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{48} }

func (m *DeleteClubMemberReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *DeleteClubMemberReq) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

// @api:2046,@type:req
type ModifyClubGameReq struct {
	ClubId    int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	GameTypes int32 `protobuf:"varint,2,opt,name=gameTypes" json:"gameTypes,omitempty"`
}

func (m *ModifyClubGameReq) Reset()                    { *m = ModifyClubGameReq{} }
func (m *ModifyClubGameReq) String() string            { return proto.CompactTextString(m) }
func (*ModifyClubGameReq) ProtoMessage()               {}
func (*ModifyClubGameReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{49} }

func (m *ModifyClubGameReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ModifyClubGameReq) GetGameTypes() int32 {
	if m != nil {
		return m.GameTypes
	}
	return 0
}

// 创建俱乐部包间
// @api:2050,@type:req
type CreateClubRoomReq struct {
	ClubId           int32             `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	Rule             []int32           `protobuf:"varint,2,rep,packed,name=rule" json:"rule,omitempty"`
	PlayNum          int32             `protobuf:"varint,3,opt,name=playNum" json:"playNum,omitempty"`
	GameNum          int32             `protobuf:"varint,4,opt,name=gameNum" json:"gameNum,omitempty"`
	GameType         GAME              `protobuf:"varint,5,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	RoomConfig       *RoomConfig       `protobuf:"bytes,6,opt,name=roomConfig" json:"roomConfig,omitempty"`
	MaxWinSco        int32             `protobuf:"varint,7,opt,name=maxWinSco" json:"maxWinSco,omitempty"`
	Base             int32             `protobuf:"varint,8,opt,name=base" json:"base,omitempty"`
	ExpendSpeciThing *ExpendSpeciThing `protobuf:"bytes,9,opt,name=expendSpeciThing" json:"expendSpeciThing,omitempty"`
	Origin           int32             `protobuf:"varint,10,opt,name=origin" json:"origin,omitempty"`
}

func (m *CreateClubRoomReq) Reset()                    { *m = CreateClubRoomReq{} }
func (m *CreateClubRoomReq) String() string            { return proto.CompactTextString(m) }
func (*CreateClubRoomReq) ProtoMessage()               {}
func (*CreateClubRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{50} }

func (m *CreateClubRoomReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *CreateClubRoomReq) GetRule() []int32 {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *CreateClubRoomReq) GetPlayNum() int32 {
	if m != nil {
		return m.PlayNum
	}
	return 0
}

func (m *CreateClubRoomReq) GetGameNum() int32 {
	if m != nil {
		return m.GameNum
	}
	return 0
}

func (m *CreateClubRoomReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *CreateClubRoomReq) GetRoomConfig() *RoomConfig {
	if m != nil {
		return m.RoomConfig
	}
	return nil
}

func (m *CreateClubRoomReq) GetMaxWinSco() int32 {
	if m != nil {
		return m.MaxWinSco
	}
	return 0
}

func (m *CreateClubRoomReq) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *CreateClubRoomReq) GetExpendSpeciThing() *ExpendSpeciThing {
	if m != nil {
		return m.ExpendSpeciThing
	}
	return nil
}

func (m *CreateClubRoomReq) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

// @api:2050,@type:resp
type CreateClubRoomResp struct {
	Uid int32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *CreateClubRoomResp) Reset()                    { *m = CreateClubRoomResp{} }
func (m *CreateClubRoomResp) String() string            { return proto.CompactTextString(m) }
func (*CreateClubRoomResp) ProtoMessage()               {}
func (*CreateClubRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{51} }

func (m *CreateClubRoomResp) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// 删除俱乐部包间
// @api:2056,@type:req
type RemoveClubRoomReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	Uid    int32 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *RemoveClubRoomReq) Reset()                    { *m = RemoveClubRoomReq{} }
func (m *RemoveClubRoomReq) String() string            { return proto.CompactTextString(m) }
func (*RemoveClubRoomReq) ProtoMessage()               {}
func (*RemoveClubRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{52} }

func (m *RemoveClubRoomReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *RemoveClubRoomReq) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// 设置俱乐部包间模式
// @api:2057,@type:req
type SetClubRoomModeReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	Mode   int32 `protobuf:"varint,2,opt,name=mode" json:"mode,omitempty"`
}

func (m *SetClubRoomModeReq) Reset()                    { *m = SetClubRoomModeReq{} }
func (m *SetClubRoomModeReq) String() string            { return proto.CompactTextString(m) }
func (*SetClubRoomModeReq) ProtoMessage()               {}
func (*SetClubRoomModeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{53} }

func (m *SetClubRoomModeReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *SetClubRoomModeReq) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

// 向客户端推送,俱乐部的变化信息
// @api:2058,@type:resp
type SendClubChangesResp struct {
	Type     int32         `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	ClubId   int32         `protobuf:"varint,2,opt,name=clubId" json:"clubId,omitempty"`
	Mode     int32         `protobuf:"varint,3,opt,name=mode" json:"mode,omitempty"`
	RoomInfo *ClubRoomInfo `protobuf:"bytes,4,opt,name=roomInfo" json:"roomInfo,omitempty"`
	CardNum  int32         `protobuf:"varint,5,opt,name=cardNum" json:"cardNum,omitempty"`
}

func (m *SendClubChangesResp) Reset()                    { *m = SendClubChangesResp{} }
func (m *SendClubChangesResp) String() string            { return proto.CompactTextString(m) }
func (*SendClubChangesResp) ProtoMessage()               {}
func (*SendClubChangesResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{54} }

func (m *SendClubChangesResp) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *SendClubChangesResp) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *SendClubChangesResp) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *SendClubChangesResp) GetRoomInfo() *ClubRoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *SendClubChangesResp) GetCardNum() int32 {
	if m != nil {
		return m.CardNum
	}
	return 0
}

// 包间信息
type ClubRoomInfo struct {
	Rule             []int32             `protobuf:"varint,1,rep,packed,name=rule" json:"rule,omitempty"`
	PlayNum          int32               `protobuf:"varint,2,opt,name=playNum" json:"playNum,omitempty"`
	GameNum          int32               `protobuf:"varint,3,opt,name=gameNum" json:"gameNum,omitempty"`
	GameType         GAME                `protobuf:"varint,4,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	DeskInfo         []*ClubRoomDeskInfo `protobuf:"bytes,5,rep,name=deskInfo" json:"deskInfo,omitempty"`
	Dec              string              `protobuf:"bytes,6,opt,name=dec" json:"dec,omitempty"`
	Uid              int32               `protobuf:"varint,7,opt,name=uid" json:"uid,omitempty"`
	MaxWinSco        int32               `protobuf:"varint,8,opt,name=maxWinSco" json:"maxWinSco,omitempty"`
	Base             int32               `protobuf:"varint,9,opt,name=base" json:"base,omitempty"`
	ExpendSpeciThing *ExpendSpeciThing   `protobuf:"bytes,10,opt,name=expendSpeciThing" json:"expendSpeciThing,omitempty"`
	Origin           int32               `protobuf:"varint,11,opt,name=origin" json:"origin,omitempty"`
}

func (m *ClubRoomInfo) Reset()                    { *m = ClubRoomInfo{} }
func (m *ClubRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubRoomInfo) ProtoMessage()               {}
func (*ClubRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{55} }

func (m *ClubRoomInfo) GetRule() []int32 {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *ClubRoomInfo) GetPlayNum() int32 {
	if m != nil {
		return m.PlayNum
	}
	return 0
}

func (m *ClubRoomInfo) GetGameNum() int32 {
	if m != nil {
		return m.GameNum
	}
	return 0
}

func (m *ClubRoomInfo) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *ClubRoomInfo) GetDeskInfo() []*ClubRoomDeskInfo {
	if m != nil {
		return m.DeskInfo
	}
	return nil
}

func (m *ClubRoomInfo) GetDec() string {
	if m != nil {
		return m.Dec
	}
	return ""
}

func (m *ClubRoomInfo) GetUid() int32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ClubRoomInfo) GetMaxWinSco() int32 {
	if m != nil {
		return m.MaxWinSco
	}
	return 0
}

func (m *ClubRoomInfo) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *ClubRoomInfo) GetExpendSpeciThing() *ExpendSpeciThing {
	if m != nil {
		return m.ExpendSpeciThing
	}
	return nil
}

func (m *ClubRoomInfo) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

// 包间中桌子的信息
type ClubRoomDeskInfo struct {
	IsStart  bool          `protobuf:"varint,1,opt,name=isStart" json:"isStart,omitempty"`
	Index    int32         `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	CurNum   int32         `protobuf:"varint,3,opt,name=curNum" json:"curNum,omitempty"`
	TotalNum int32         `protobuf:"varint,4,opt,name=totalNum" json:"totalNum,omitempty"`
	Players  []*DeskPlayer `protobuf:"bytes,5,rep,name=players" json:"players,omitempty"`
}

func (m *ClubRoomDeskInfo) Reset()                    { *m = ClubRoomDeskInfo{} }
func (m *ClubRoomDeskInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubRoomDeskInfo) ProtoMessage()               {}
func (*ClubRoomDeskInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{56} }

func (m *ClubRoomDeskInfo) GetIsStart() bool {
	if m != nil {
		return m.IsStart
	}
	return false
}

func (m *ClubRoomDeskInfo) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ClubRoomDeskInfo) GetCurNum() int32 {
	if m != nil {
		return m.CurNum
	}
	return 0
}

func (m *ClubRoomDeskInfo) GetTotalNum() int32 {
	if m != nil {
		return m.TotalNum
	}
	return 0
}

func (m *ClubRoomDeskInfo) GetPlayers() []*DeskPlayer {
	if m != nil {
		return m.Players
	}
	return nil
}

// 桌上玩家的信息
type DeskPlayer struct {
	DeskId int32  `protobuf:"varint,1,opt,name=DeskId" json:"DeskId,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Icon   string `protobuf:"bytes,3,opt,name=Icon" json:"Icon,omitempty"`
	Online bool   `protobuf:"varint,4,opt,name=online" json:"online,omitempty"`
}

func (m *DeskPlayer) Reset()                    { *m = DeskPlayer{} }
func (m *DeskPlayer) String() string            { return proto.CompactTextString(m) }
func (*DeskPlayer) ProtoMessage()               {}
func (*DeskPlayer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{57} }

func (m *DeskPlayer) GetDeskId() int32 {
	if m != nil {
		return m.DeskId
	}
	return 0
}

func (m *DeskPlayer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeskPlayer) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *DeskPlayer) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

// 获取茶馆的游戏多少天的的消耗记录
// @api:2059,@type:req
type CLubDaysConsumeReq struct {
	ClubId      int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	Day         int32 `protobuf:"varint,2,opt,name=Day" json:"Day,omitempty"`
	PayCardType int32 `protobuf:"varint,3,opt,name=payCardType" json:"payCardType,omitempty"`
}

func (m *CLubDaysConsumeReq) Reset()                    { *m = CLubDaysConsumeReq{} }
func (m *CLubDaysConsumeReq) String() string            { return proto.CompactTextString(m) }
func (*CLubDaysConsumeReq) ProtoMessage()               {}
func (*CLubDaysConsumeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{58} }

func (m *CLubDaysConsumeReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *CLubDaysConsumeReq) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *CLubDaysConsumeReq) GetPayCardType() int32 {
	if m != nil {
		return m.PayCardType
	}
	return 0
}

// @api:2059,@type:resp
type CLubDaysConsumeResp struct {
	ClubId   int32                 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	Consumes []*ClubDayConsumeInfo `protobuf:"bytes,2,rep,name=consumes" json:"consumes,omitempty"`
}

func (m *CLubDaysConsumeResp) Reset()                    { *m = CLubDaysConsumeResp{} }
func (m *CLubDaysConsumeResp) String() string            { return proto.CompactTextString(m) }
func (*CLubDaysConsumeResp) ProtoMessage()               {}
func (*CLubDaysConsumeResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{59} }

func (m *CLubDaysConsumeResp) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *CLubDaysConsumeResp) GetConsumes() []*ClubDayConsumeInfo {
	if m != nil {
		return m.Consumes
	}
	return nil
}

type ClubDayConsumeInfo struct {
	Date        string `protobuf:"bytes,1,opt,name=date" json:"date,omitempty"`
	GameNum     int32  `protobuf:"varint,2,opt,name=gameNum" json:"gameNum,omitempty"`
	ConsumeCard int32  `protobuf:"varint,3,opt,name=consumeCard" json:"consumeCard,omitempty"`
	GameCount   int32  `protobuf:"varint,4,opt,name=gameCount" json:"gameCount,omitempty"`
	PayCardType int32  `protobuf:"varint,5,opt,name=payCardType" json:"payCardType,omitempty"`
}

func (m *ClubDayConsumeInfo) Reset()                    { *m = ClubDayConsumeInfo{} }
func (m *ClubDayConsumeInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubDayConsumeInfo) ProtoMessage()               {}
func (*ClubDayConsumeInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{60} }

func (m *ClubDayConsumeInfo) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *ClubDayConsumeInfo) GetGameNum() int32 {
	if m != nil {
		return m.GameNum
	}
	return 0
}

func (m *ClubDayConsumeInfo) GetConsumeCard() int32 {
	if m != nil {
		return m.ConsumeCard
	}
	return 0
}

func (m *ClubDayConsumeInfo) GetGameCount() int32 {
	if m != nil {
		return m.GameCount
	}
	return 0
}

func (m *ClubDayConsumeInfo) GetPayCardType() int32 {
	if m != nil {
		return m.PayCardType
	}
	return 0
}

// 获取俱乐部包间信息
// @api:2051,@type:req
type ClubRoomListReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *ClubRoomListReq) Reset()                    { *m = ClubRoomListReq{} }
func (m *ClubRoomListReq) String() string            { return proto.CompactTextString(m) }
func (*ClubRoomListReq) ProtoMessage()               {}
func (*ClubRoomListReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{61} }

func (m *ClubRoomListReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// @api:2051,@type:resp
type ClubRoomListResp struct {
	ClubId int32           `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	Mode   int32           `protobuf:"varint,2,opt,name=mode" json:"mode,omitempty"`
	List   []*ClubRoomInfo `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
	Card   int32           `protobuf:"varint,4,opt,name=card" json:"card,omitempty"`
}

func (m *ClubRoomListResp) Reset()                    { *m = ClubRoomListResp{} }
func (m *ClubRoomListResp) String() string            { return proto.CompactTextString(m) }
func (*ClubRoomListResp) ProtoMessage()               {}
func (*ClubRoomListResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{62} }

func (m *ClubRoomListResp) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ClubRoomListResp) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *ClubRoomListResp) GetList() []*ClubRoomInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ClubRoomListResp) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

// 加入俱乐部包间的桌子
// @api:2052,@type:req
type JoinClubDeskReq struct {
	ClubId    int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	RoomUid   int32 `protobuf:"varint,2,opt,name=roomUid" json:"roomUid,omitempty"`
	DeskIndex int32 `protobuf:"varint,3,opt,name=deskIndex" json:"deskIndex,omitempty"`
	OpenGps   bool  `protobuf:"varint,4,opt,name=openGps" json:"openGps,omitempty"`
}

func (m *JoinClubDeskReq) Reset()                    { *m = JoinClubDeskReq{} }
func (m *JoinClubDeskReq) String() string            { return proto.CompactTextString(m) }
func (*JoinClubDeskReq) ProtoMessage()               {}
func (*JoinClubDeskReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{63} }

func (m *JoinClubDeskReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *JoinClubDeskReq) GetRoomUid() int32 {
	if m != nil {
		return m.RoomUid
	}
	return 0
}

func (m *JoinClubDeskReq) GetDeskIndex() int32 {
	if m != nil {
		return m.DeskIndex
	}
	return 0
}

func (m *JoinClubDeskReq) GetOpenGps() bool {
	if m != nil {
		return m.OpenGps
	}
	return false
}

// @api:2052,@type:resp
type JoinClubDeskResp struct {
	// Types that are valid to be assigned to Msg:
	//	*JoinClubDeskResp_Create
	//	*JoinClubDeskResp_Join
	Msg isJoinClubDeskResp_Msg `protobuf_oneof:"msg"`
}

func (m *JoinClubDeskResp) Reset()                    { *m = JoinClubDeskResp{} }
func (m *JoinClubDeskResp) String() string            { return proto.CompactTextString(m) }
func (*JoinClubDeskResp) ProtoMessage()               {}
func (*JoinClubDeskResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{64} }

type isJoinClubDeskResp_Msg interface {
	isJoinClubDeskResp_Msg()
}

type JoinClubDeskResp_Create struct {
	Create *CreateRoomResp `protobuf:"bytes,1,opt,name=create,oneof"`
}
type JoinClubDeskResp_Join struct {
	Join *JoinRoomResp `protobuf:"bytes,2,opt,name=join,oneof"`
}

func (*JoinClubDeskResp_Create) isJoinClubDeskResp_Msg() {}
func (*JoinClubDeskResp_Join) isJoinClubDeskResp_Msg()   {}

func (m *JoinClubDeskResp) GetMsg() isJoinClubDeskResp_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *JoinClubDeskResp) GetCreate() *CreateRoomResp {
	if x, ok := m.GetMsg().(*JoinClubDeskResp_Create); ok {
		return x.Create
	}
	return nil
}

func (m *JoinClubDeskResp) GetJoin() *JoinRoomResp {
	if x, ok := m.GetMsg().(*JoinClubDeskResp_Join); ok {
		return x.Join
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*JoinClubDeskResp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _JoinClubDeskResp_OneofMarshaler, _JoinClubDeskResp_OneofUnmarshaler, _JoinClubDeskResp_OneofSizer, []interface{}{
		(*JoinClubDeskResp_Create)(nil),
		(*JoinClubDeskResp_Join)(nil),
	}
}

func _JoinClubDeskResp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*JoinClubDeskResp)
	// msg
	switch x := m.Msg.(type) {
	case *JoinClubDeskResp_Create:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Create); err != nil {
			return err
		}
	case *JoinClubDeskResp_Join:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Join); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("JoinClubDeskResp.Msg has unexpected type %T", x)
	}
	return nil
}

func _JoinClubDeskResp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*JoinClubDeskResp)
	switch tag {
	case 1: // msg.create
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateRoomResp)
		err := b.DecodeMessage(msg)
		m.Msg = &JoinClubDeskResp_Create{msg}
		return true, err
	case 2: // msg.join
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JoinRoomResp)
		err := b.DecodeMessage(msg)
		m.Msg = &JoinClubDeskResp_Join{msg}
		return true, err
	default:
		return false, nil
	}
}

func _JoinClubDeskResp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*JoinClubDeskResp)
	// msg
	switch x := m.Msg.(type) {
	case *JoinClubDeskResp_Create:
		s := proto.Size(x.Create)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *JoinClubDeskResp_Join:
		s := proto.Size(x.Join)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 修改包间的规则
// @api:2053,@type:req
type ModifyClubRoomRuleReq struct {
	ClubId           int32             `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	RoomUid          int32             `protobuf:"varint,2,opt,name=roomUid" json:"roomUid,omitempty"`
	Rule             []int32           `protobuf:"varint,3,rep,packed,name=rule" json:"rule,omitempty"`
	PlayNum          int32             `protobuf:"varint,4,opt,name=playNum" json:"playNum,omitempty"`
	GameType         GAME              `protobuf:"varint,5,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	GameNum          int32             `protobuf:"varint,6,opt,name=gameNum" json:"gameNum,omitempty"`
	MaxWinSco        int32             `protobuf:"varint,7,opt,name=maxWinSco" json:"maxWinSco,omitempty"`
	Base             int32             `protobuf:"varint,8,opt,name=base" json:"base,omitempty"`
	ExpendSpeciThing *ExpendSpeciThing `protobuf:"bytes,9,opt,name=expendSpeciThing" json:"expendSpeciThing,omitempty"`
	Origin           int32             `protobuf:"varint,10,opt,name=origin" json:"origin,omitempty"`
}

func (m *ModifyClubRoomRuleReq) Reset()                    { *m = ModifyClubRoomRuleReq{} }
func (m *ModifyClubRoomRuleReq) String() string            { return proto.CompactTextString(m) }
func (*ModifyClubRoomRuleReq) ProtoMessage()               {}
func (*ModifyClubRoomRuleReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{65} }

func (m *ModifyClubRoomRuleReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ModifyClubRoomRuleReq) GetRoomUid() int32 {
	if m != nil {
		return m.RoomUid
	}
	return 0
}

func (m *ModifyClubRoomRuleReq) GetRule() []int32 {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *ModifyClubRoomRuleReq) GetPlayNum() int32 {
	if m != nil {
		return m.PlayNum
	}
	return 0
}

func (m *ModifyClubRoomRuleReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *ModifyClubRoomRuleReq) GetGameNum() int32 {
	if m != nil {
		return m.GameNum
	}
	return 0
}

func (m *ModifyClubRoomRuleReq) GetMaxWinSco() int32 {
	if m != nil {
		return m.MaxWinSco
	}
	return 0
}

func (m *ModifyClubRoomRuleReq) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *ModifyClubRoomRuleReq) GetExpendSpeciThing() *ExpendSpeciThing {
	if m != nil {
		return m.ExpendSpeciThing
	}
	return nil
}

func (m *ModifyClubRoomRuleReq) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

// @api:2053,@type:resp
type ModifyClubRoomRuleResp struct {
	List []*ClubRoomInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ModifyClubRoomRuleResp) Reset()                    { *m = ModifyClubRoomRuleResp{} }
func (m *ModifyClubRoomRuleResp) String() string            { return proto.CompactTextString(m) }
func (*ModifyClubRoomRuleResp) ProtoMessage()               {}
func (*ModifyClubRoomRuleResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{66} }

func (m *ModifyClubRoomRuleResp) GetList() []*ClubRoomInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 修改俱乐部房间的描述
// @api:2054,@type:req
type ModifyClubRoomDecReq struct {
	ClubId  int32  `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	RoomUid int32  `protobuf:"varint,2,opt,name=roomUid" json:"roomUid,omitempty"`
	Dec     string `protobuf:"bytes,3,opt,name=dec" json:"dec,omitempty"`
}

func (m *ModifyClubRoomDecReq) Reset()                    { *m = ModifyClubRoomDecReq{} }
func (m *ModifyClubRoomDecReq) String() string            { return proto.CompactTextString(m) }
func (*ModifyClubRoomDecReq) ProtoMessage()               {}
func (*ModifyClubRoomDecReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{67} }

func (m *ModifyClubRoomDecReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ModifyClubRoomDecReq) GetRoomUid() int32 {
	if m != nil {
		return m.RoomUid
	}
	return 0
}

func (m *ModifyClubRoomDecReq) GetDec() string {
	if m != nil {
		return m.Dec
	}
	return ""
}

// 修改包间的规则
// @api:2055,@type:req
type ClubRoomDeskInfoReq struct {
	ClubId    int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	RoomIndex int32 `protobuf:"varint,2,opt,name=roomIndex" json:"roomIndex,omitempty"`
}

func (m *ClubRoomDeskInfoReq) Reset()                    { *m = ClubRoomDeskInfoReq{} }
func (m *ClubRoomDeskInfoReq) String() string            { return proto.CompactTextString(m) }
func (*ClubRoomDeskInfoReq) ProtoMessage()               {}
func (*ClubRoomDeskInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{68} }

func (m *ClubRoomDeskInfoReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ClubRoomDeskInfoReq) GetRoomIndex() int32 {
	if m != nil {
		return m.RoomIndex
	}
	return 0
}

// @api:2055,@type:resp
type ClubRoomDeskInfoResp struct {
	List []*ClubRoomDeskInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ClubRoomDeskInfoResp) Reset()                    { *m = ClubRoomDeskInfoResp{} }
func (m *ClubRoomDeskInfoResp) String() string            { return proto.CompactTextString(m) }
func (*ClubRoomDeskInfoResp) ProtoMessage()               {}
func (*ClubRoomDeskInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{69} }

func (m *ClubRoomDeskInfoResp) GetList() []*ClubRoomDeskInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 拉取房间列表
// @api:1004,@type:req
type GetRoomListReq struct {
	GameType GAME  `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	ClubId   int32 `protobuf:"varint,2,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *GetRoomListReq) Reset()                    { *m = GetRoomListReq{} }
func (m *GetRoomListReq) String() string            { return proto.CompactTextString(m) }
func (*GetRoomListReq) ProtoMessage()               {}
func (*GetRoomListReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{70} }

func (m *GetRoomListReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *GetRoomListReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// @api:1004,@type:resp
type GetRoomListResp struct {
	GameType GAME        `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	List     []*RoomInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	IsFresh  bool        `protobuf:"varint,3,opt,name=isFresh" json:"isFresh,omitempty"`
	ClubId   int32       `protobuf:"varint,4,opt,name=clubId" json:"clubId,omitempty"`
}

func (m *GetRoomListResp) Reset()                    { *m = GetRoomListResp{} }
func (m *GetRoomListResp) String() string            { return proto.CompactTextString(m) }
func (*GetRoomListResp) ProtoMessage()               {}
func (*GetRoomListResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{71} }

func (m *GetRoomListResp) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *GetRoomListResp) GetList() []*RoomInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GetRoomListResp) GetIsFresh() bool {
	if m != nil {
		return m.IsFresh
	}
	return false
}

func (m *GetRoomListResp) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

// @api:2029,@type:req
type ExchangeReq struct {
	Type   int32 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Amount int32 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *ExchangeReq) Reset()                    { *m = ExchangeReq{} }
func (m *ExchangeReq) String() string            { return proto.CompactTextString(m) }
func (*ExchangeReq) ProtoMessage()               {}
func (*ExchangeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{72} }

func (m *ExchangeReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ExchangeReq) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// @api:2018,@type:req
type WithDrawReq struct {
	Passwd int32 `protobuf:"varint,1,opt,name=passwd" json:"passwd,omitempty"`
	Cnt    int64 `protobuf:"varint,2,opt,name=cnt" json:"cnt,omitempty"`
}

func (m *WithDrawReq) Reset()                    { *m = WithDrawReq{} }
func (m *WithDrawReq) String() string            { return proto.CompactTextString(m) }
func (*WithDrawReq) ProtoMessage()               {}
func (*WithDrawReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{73} }

func (m *WithDrawReq) GetPasswd() int32 {
	if m != nil {
		return m.Passwd
	}
	return 0
}

func (m *WithDrawReq) GetCnt() int64 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

// @api:2019,@type:req
type DepositReq struct {
	Passwd int32 `protobuf:"varint,1,opt,name=passwd" json:"passwd,omitempty"`
	Cnt    int64 `protobuf:"varint,2,opt,name=cnt" json:"cnt,omitempty"`
}

func (m *DepositReq) Reset()                    { *m = DepositReq{} }
func (m *DepositReq) String() string            { return proto.CompactTextString(m) }
func (*DepositReq) ProtoMessage()               {}
func (*DepositReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{74} }

func (m *DepositReq) GetPasswd() int32 {
	if m != nil {
		return m.Passwd
	}
	return 0
}

func (m *DepositReq) GetCnt() int64 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

// @api:2021,@type:req
type SetBankPasswdReq struct {
	Old int32 `protobuf:"varint,1,opt,name=old" json:"old,omitempty"`
	New int32 `protobuf:"varint,2,opt,name=new" json:"new,omitempty"`
}

func (m *SetBankPasswdReq) Reset()                    { *m = SetBankPasswdReq{} }
func (m *SetBankPasswdReq) String() string            { return proto.CompactTextString(m) }
func (*SetBankPasswdReq) ProtoMessage()               {}
func (*SetBankPasswdReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{75} }

func (m *SetBankPasswdReq) GetOld() int32 {
	if m != nil {
		return m.Old
	}
	return 0
}

func (m *SetBankPasswdReq) GetNew() int32 {
	if m != nil {
		return m.New
	}
	return 0
}

// @api:2020,@type:resp
type BankUpdateNtf struct {
	Cnt int64 `protobuf:"varint,1,opt,name=cnt" json:"cnt,omitempty"`
}

func (m *BankUpdateNtf) Reset()                    { *m = BankUpdateNtf{} }
func (m *BankUpdateNtf) String() string            { return proto.CompactTextString(m) }
func (*BankUpdateNtf) ProtoMessage()               {}
func (*BankUpdateNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{76} }

func (m *BankUpdateNtf) GetCnt() int64 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

// @api:2022,@type:req
type VerifyBankPasswdReq struct {
	Passwd int32 `protobuf:"varint,1,opt,name=passwd" json:"passwd,omitempty"`
}

func (m *VerifyBankPasswdReq) Reset()                    { *m = VerifyBankPasswdReq{} }
func (m *VerifyBankPasswdReq) String() string            { return proto.CompactTextString(m) }
func (*VerifyBankPasswdReq) ProtoMessage()               {}
func (*VerifyBankPasswdReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{77} }

func (m *VerifyBankPasswdReq) GetPasswd() int32 {
	if m != nil {
		return m.Passwd
	}
	return 0
}

// @api:2025,@type:req
type TransferReq struct {
	Uid    int64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Gold   int64 `protobuf:"varint,2,opt,name=gold" json:"gold,omitempty"`
	Passwd int32 `protobuf:"varint,3,opt,name=passwd" json:"passwd,omitempty"`
	Card   int32 `protobuf:"varint,4,opt,name=card" json:"card,omitempty"`
}

func (m *TransferReq) Reset()                    { *m = TransferReq{} }
func (m *TransferReq) String() string            { return proto.CompactTextString(m) }
func (*TransferReq) ProtoMessage()               {}
func (*TransferReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{78} }

func (m *TransferReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *TransferReq) GetGold() int64 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *TransferReq) GetPasswd() int32 {
	if m != nil {
		return m.Passwd
	}
	return 0
}

func (m *TransferReq) GetCard() int32 {
	if m != nil {
		return m.Card
	}
	return 0
}

// @api:2026,@type:req
type ShareReq struct {
}

func (m *ShareReq) Reset()                    { *m = ShareReq{} }
func (m *ShareReq) String() string            { return proto.CompactTextString(m) }
func (*ShareReq) ProtoMessage()               {}
func (*ShareReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{79} }

// @api:2028,@type:req
type CloseAccountReq struct {
}

func (m *CloseAccountReq) Reset()                    { *m = CloseAccountReq{} }
func (m *CloseAccountReq) String() string            { return proto.CompactTextString(m) }
func (*CloseAccountReq) ProtoMessage()               {}
func (*CloseAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{80} }

// @api:2028,@type:resp
type CloseAccountResp struct {
}

func (m *CloseAccountResp) Reset()                    { *m = CloseAccountResp{} }
func (m *CloseAccountResp) String() string            { return proto.CompactTextString(m) }
func (*CloseAccountResp) ProtoMessage()               {}
func (*CloseAccountResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{81} }

// @api:2100, @type:req
type SendPlayerLocation struct {
	Longitude string `protobuf:"bytes,1,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  string `protobuf:"bytes,2,opt,name=latitude" json:"latitude,omitempty"`
}

func (m *SendPlayerLocation) Reset()                    { *m = SendPlayerLocation{} }
func (m *SendPlayerLocation) String() string            { return proto.CompactTextString(m) }
func (*SendPlayerLocation) ProtoMessage()               {}
func (*SendPlayerLocation) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{82} }

func (m *SendPlayerLocation) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *SendPlayerLocation) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

// @api:1017,@type:resp
type MJPlayerResultListNtf struct {
	List []*MJPlayerResultInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *MJPlayerResultListNtf) Reset()                    { *m = MJPlayerResultListNtf{} }
func (m *MJPlayerResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*MJPlayerResultListNtf) ProtoMessage()               {}
func (*MJPlayerResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{83} }

func (m *MJPlayerResultListNtf) GetList() []*MJPlayerResultInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// @api:1024,@type:resp
type BigTwoPlayerResultListNtf struct {
	Huer        int64               `protobuf:"varint,1,opt,name=huer" json:"huer,omitempty"`
	Dianpaoer   int64               `protobuf:"varint,2,opt,name=dianpaoer" json:"dianpaoer,omitempty"`
	Remaincards []int32             `protobuf:"varint,3,rep,packed,name=remaincards" json:"remaincards,omitempty"`
	List        []*BigTwoResultInfo `protobuf:"bytes,4,rep,name=list" json:"list,omitempty"`
}

func (m *BigTwoPlayerResultListNtf) Reset()                    { *m = BigTwoPlayerResultListNtf{} }
func (m *BigTwoPlayerResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*BigTwoPlayerResultListNtf) ProtoMessage()               {}
func (*BigTwoPlayerResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{84} }

func (m *BigTwoPlayerResultListNtf) GetHuer() int64 {
	if m != nil {
		return m.Huer
	}
	return 0
}

func (m *BigTwoPlayerResultListNtf) GetDianpaoer() int64 {
	if m != nil {
		return m.Dianpaoer
	}
	return 0
}

func (m *BigTwoPlayerResultListNtf) GetRemaincards() []int32 {
	if m != nil {
		return m.Remaincards
	}
	return nil
}

func (m *BigTwoPlayerResultListNtf) GetList() []*BigTwoResultInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// @api:1025,@type:resp
type BigTwoPlayerEndResultListNtf struct {
	Num  int32                  `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
	List []*BigTwoEndResultInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *BigTwoPlayerEndResultListNtf) Reset()                    { *m = BigTwoPlayerEndResultListNtf{} }
func (m *BigTwoPlayerEndResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*BigTwoPlayerEndResultListNtf) ProtoMessage()               {}
func (*BigTwoPlayerEndResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{85} }

func (m *BigTwoPlayerEndResultListNtf) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *BigTwoPlayerEndResultListNtf) GetList() []*BigTwoEndResultInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// @api:1026,@type:req
type GetMultipleFightGradeReq struct {
	GameType GAME  `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Uid      int64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	ClubId   int32 `protobuf:"varint,3,opt,name=clubId" json:"clubId,omitempty"`
	Origin   int32 `protobuf:"varint,4,opt,name=origin" json:"origin,omitempty"`
}

func (m *GetMultipleFightGradeReq) Reset()                    { *m = GetMultipleFightGradeReq{} }
func (m *GetMultipleFightGradeReq) String() string            { return proto.CompactTextString(m) }
func (*GetMultipleFightGradeReq) ProtoMessage()               {}
func (*GetMultipleFightGradeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{86} }

func (m *GetMultipleFightGradeReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *GetMultipleFightGradeReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetMultipleFightGradeReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *GetMultipleFightGradeReq) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

// @api:1026,@type:resp
type GetMultipleFightGradeResp struct {
	List []*FightGradeInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *GetMultipleFightGradeResp) Reset()                    { *m = GetMultipleFightGradeResp{} }
func (m *GetMultipleFightGradeResp) String() string            { return proto.CompactTextString(m) }
func (*GetMultipleFightGradeResp) ProtoMessage()               {}
func (*GetMultipleFightGradeResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{87} }

func (m *GetMultipleFightGradeResp) GetList() []*FightGradeInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// @api:1027,@type:resp
type GamePlayerResultListNtf struct {
	Game GAME `protobuf:"varint,1,opt,name=game,enum=protocol.GAME" json:"game,omitempty"`
	// Types that are valid to be assigned to Reslut:
	//	*GamePlayerResultListNtf_Result
	Reslut isGamePlayerResultListNtf_Reslut `protobuf_oneof:"reslut"`
}

func (m *GamePlayerResultListNtf) Reset()                    { *m = GamePlayerResultListNtf{} }
func (m *GamePlayerResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*GamePlayerResultListNtf) ProtoMessage()               {}
func (*GamePlayerResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{88} }

type isGamePlayerResultListNtf_Reslut interface {
	isGamePlayerResultListNtf_Reslut()
}

type GamePlayerResultListNtf_Result struct {
	Result *HongZhongMahjongResultNtf `protobuf:"bytes,2,opt,name=result,oneof"`
}

func (*GamePlayerResultListNtf_Result) isGamePlayerResultListNtf_Reslut() {}

func (m *GamePlayerResultListNtf) GetReslut() isGamePlayerResultListNtf_Reslut {
	if m != nil {
		return m.Reslut
	}
	return nil
}

func (m *GamePlayerResultListNtf) GetGame() GAME {
	if m != nil {
		return m.Game
	}
	return GAME_GAME_UNUSED
}

func (m *GamePlayerResultListNtf) GetResult() *HongZhongMahjongResultNtf {
	if x, ok := m.GetReslut().(*GamePlayerResultListNtf_Result); ok {
		return x.Result
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GamePlayerResultListNtf) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GamePlayerResultListNtf_OneofMarshaler, _GamePlayerResultListNtf_OneofUnmarshaler, _GamePlayerResultListNtf_OneofSizer, []interface{}{
		(*GamePlayerResultListNtf_Result)(nil),
	}
}

func _GamePlayerResultListNtf_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GamePlayerResultListNtf)
	// reslut
	switch x := m.Reslut.(type) {
	case *GamePlayerResultListNtf_Result:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Result); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GamePlayerResultListNtf.Reslut has unexpected type %T", x)
	}
	return nil
}

func _GamePlayerResultListNtf_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GamePlayerResultListNtf)
	switch tag {
	case 2: // reslut.result
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HongZhongMahjongResultNtf)
		err := b.DecodeMessage(msg)
		m.Reslut = &GamePlayerResultListNtf_Result{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GamePlayerResultListNtf_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GamePlayerResultListNtf)
	// reslut
	switch x := m.Reslut.(type) {
	case *GamePlayerResultListNtf_Result:
		s := proto.Size(x.Result)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// @api:1030,@type:resp
type PdkPlayerResultListNtf struct {
	WinUid int64            `protobuf:"varint,1,opt,name=winUid" json:"winUid,omitempty"`
	Base   int32            `protobuf:"varint,2,opt,name=base" json:"base,omitempty"`
	Round  int32            `protobuf:"varint,3,opt,name=round" json:"round,omitempty"`
	Time   int64            `protobuf:"varint,4,opt,name=time" json:"time,omitempty"`
	List   []*PdkResultInfo `protobuf:"bytes,5,rep,name=list" json:"list,omitempty"`
}

func (m *PdkPlayerResultListNtf) Reset()                    { *m = PdkPlayerResultListNtf{} }
func (m *PdkPlayerResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*PdkPlayerResultListNtf) ProtoMessage()               {}
func (*PdkPlayerResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{89} }

func (m *PdkPlayerResultListNtf) GetWinUid() int64 {
	if m != nil {
		return m.WinUid
	}
	return 0
}

func (m *PdkPlayerResultListNtf) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *PdkPlayerResultListNtf) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *PdkPlayerResultListNtf) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *PdkPlayerResultListNtf) GetList() []*PdkResultInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 跑的快的结算结果
type PdkResultInfo struct {
	Uid        int64   `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Winlose    int32   `protobuf:"varint,2,opt,name=winlose" json:"winlose,omitempty"`
	Bombnum    int32   `protobuf:"varint,3,opt,name=bombnum" json:"bombnum,omitempty"`
	Totalscore int32   `protobuf:"varint,4,opt,name=totalscore" json:"totalscore,omitempty"`
	Bombscore  int32   `protobuf:"varint,5,opt,name=bombscore" json:"bombscore,omitempty"`
	Deskcards  []int32 `protobuf:"varint,6,rep,packed,name=deskcards" json:"deskcards,omitempty"`
	Handcards  []int32 `protobuf:"varint,7,rep,packed,name=handcards" json:"handcards,omitempty"`
}

func (m *PdkResultInfo) Reset()                    { *m = PdkResultInfo{} }
func (m *PdkResultInfo) String() string            { return proto.CompactTextString(m) }
func (*PdkResultInfo) ProtoMessage()               {}
func (*PdkResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{90} }

func (m *PdkResultInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *PdkResultInfo) GetWinlose() int32 {
	if m != nil {
		return m.Winlose
	}
	return 0
}

func (m *PdkResultInfo) GetBombnum() int32 {
	if m != nil {
		return m.Bombnum
	}
	return 0
}

func (m *PdkResultInfo) GetTotalscore() int32 {
	if m != nil {
		return m.Totalscore
	}
	return 0
}

func (m *PdkResultInfo) GetBombscore() int32 {
	if m != nil {
		return m.Bombscore
	}
	return 0
}

func (m *PdkResultInfo) GetDeskcards() []int32 {
	if m != nil {
		return m.Deskcards
	}
	return nil
}

func (m *PdkResultInfo) GetHandcards() []int32 {
	if m != nil {
		return m.Handcards
	}
	return nil
}

// @api:1031,@type:resp
type PdkPlayerEndResultListNtf struct {
	Num  int32               `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
	List []*PdkEndResultInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *PdkPlayerEndResultListNtf) Reset()                    { *m = PdkPlayerEndResultListNtf{} }
func (m *PdkPlayerEndResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*PdkPlayerEndResultListNtf) ProtoMessage()               {}
func (*PdkPlayerEndResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{91} }

func (m *PdkPlayerEndResultListNtf) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *PdkPlayerEndResultListNtf) GetList() []*PdkEndResultInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 跑的快游戏最终结算结果
type PdkEndResultInfo struct {
	Uid             int64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	TotalScore      int32 `protobuf:"varint,2,opt,name=totalScore" json:"totalScore,omitempty"`
	TotalRoomCard   int32 `protobuf:"varint,3,opt,name=totalRoomCard" json:"totalRoomCard,omitempty"`
	ConsumeRoomCard int32 `protobuf:"varint,4,opt,name=consumeRoomCard" json:"consumeRoomCard,omitempty"`
}

func (m *PdkEndResultInfo) Reset()                    { *m = PdkEndResultInfo{} }
func (m *PdkEndResultInfo) String() string            { return proto.CompactTextString(m) }
func (*PdkEndResultInfo) ProtoMessage()               {}
func (*PdkEndResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{92} }

func (m *PdkEndResultInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *PdkEndResultInfo) GetTotalScore() int32 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

func (m *PdkEndResultInfo) GetTotalRoomCard() int32 {
	if m != nil {
		return m.TotalRoomCard
	}
	return 0
}

func (m *PdkEndResultInfo) GetConsumeRoomCard() int32 {
	if m != nil {
		return m.ConsumeRoomCard
	}
	return 0
}

// @api:1035,@type:resp
type FiveDdzPlayerResultListNtf struct {
	WinType   int32            `protobuf:"varint,1,opt,name=winType" json:"winType,omitempty"`
	Base      int32            `protobuf:"varint,2,opt,name=base" json:"base,omitempty"`
	BaseScore int32            `protobuf:"varint,3,opt,name=baseScore" json:"baseScore,omitempty"`
	Round     int32            `protobuf:"varint,4,opt,name=round" json:"round,omitempty"`
	Time      int64            `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	List      []*DdzResultInfo `protobuf:"bytes,6,rep,name=list" json:"list,omitempty"`
}

func (m *FiveDdzPlayerResultListNtf) Reset()                    { *m = FiveDdzPlayerResultListNtf{} }
func (m *FiveDdzPlayerResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*FiveDdzPlayerResultListNtf) ProtoMessage()               {}
func (*FiveDdzPlayerResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{93} }

func (m *FiveDdzPlayerResultListNtf) GetWinType() int32 {
	if m != nil {
		return m.WinType
	}
	return 0
}

func (m *FiveDdzPlayerResultListNtf) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *FiveDdzPlayerResultListNtf) GetBaseScore() int32 {
	if m != nil {
		return m.BaseScore
	}
	return 0
}

func (m *FiveDdzPlayerResultListNtf) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *FiveDdzPlayerResultListNtf) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *FiveDdzPlayerResultListNtf) GetList() []*DdzResultInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 五人斗地主的结算结果
type DdzResultInfo struct {
	Uid        int64   `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Winlose    int32   `protobuf:"varint,2,opt,name=winlose" json:"winlose,omitempty"`
	Totalscore int32   `protobuf:"varint,3,opt,name=totalscore" json:"totalscore,omitempty"`
	Identity   int32   `protobuf:"varint,4,opt,name=identity" json:"identity,omitempty"`
	ScoreRate  int32   `protobuf:"varint,5,opt,name=scoreRate" json:"scoreRate,omitempty"`
	GengValue  int32   `protobuf:"varint,6,opt,name=gengValue" json:"gengValue,omitempty"`
	Banker     int32   `protobuf:"varint,7,opt,name=banker" json:"banker,omitempty"`
	Deskcards  []int32 `protobuf:"varint,8,rep,packed,name=deskcards" json:"deskcards,omitempty"`
	Handcards  []int32 `protobuf:"varint,9,rep,packed,name=handcards" json:"handcards,omitempty"`
}

func (m *DdzResultInfo) Reset()                    { *m = DdzResultInfo{} }
func (m *DdzResultInfo) String() string            { return proto.CompactTextString(m) }
func (*DdzResultInfo) ProtoMessage()               {}
func (*DdzResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{94} }

func (m *DdzResultInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DdzResultInfo) GetWinlose() int32 {
	if m != nil {
		return m.Winlose
	}
	return 0
}

func (m *DdzResultInfo) GetTotalscore() int32 {
	if m != nil {
		return m.Totalscore
	}
	return 0
}

func (m *DdzResultInfo) GetIdentity() int32 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *DdzResultInfo) GetScoreRate() int32 {
	if m != nil {
		return m.ScoreRate
	}
	return 0
}

func (m *DdzResultInfo) GetGengValue() int32 {
	if m != nil {
		return m.GengValue
	}
	return 0
}

func (m *DdzResultInfo) GetBanker() int32 {
	if m != nil {
		return m.Banker
	}
	return 0
}

func (m *DdzResultInfo) GetDeskcards() []int32 {
	if m != nil {
		return m.Deskcards
	}
	return nil
}

func (m *DdzResultInfo) GetHandcards() []int32 {
	if m != nil {
		return m.Handcards
	}
	return nil
}

// @api:1036,@type:resp
type DdzPlayerEndResultListNtf struct {
	Num  int32               `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
	List []*DdzEndResultInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *DdzPlayerEndResultListNtf) Reset()                    { *m = DdzPlayerEndResultListNtf{} }
func (m *DdzPlayerEndResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*DdzPlayerEndResultListNtf) ProtoMessage()               {}
func (*DdzPlayerEndResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{95} }

func (m *DdzPlayerEndResultListNtf) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *DdzPlayerEndResultListNtf) GetList() []*DdzEndResultInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 五人斗地主最终结算结果
type DdzEndResultInfo struct {
	Uid             int64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	TotalScore      int32 `protobuf:"varint,2,opt,name=totalScore" json:"totalScore,omitempty"`
	TotalRoomCard   int32 `protobuf:"varint,3,opt,name=totalRoomCard" json:"totalRoomCard,omitempty"`
	ConsumeRoomCard int32 `protobuf:"varint,4,opt,name=consumeRoomCard" json:"consumeRoomCard,omitempty"`
}

func (m *DdzEndResultInfo) Reset()                    { *m = DdzEndResultInfo{} }
func (m *DdzEndResultInfo) String() string            { return proto.CompactTextString(m) }
func (*DdzEndResultInfo) ProtoMessage()               {}
func (*DdzEndResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{96} }

func (m *DdzEndResultInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *DdzEndResultInfo) GetTotalScore() int32 {
	if m != nil {
		return m.TotalScore
	}
	return 0
}

func (m *DdzEndResultInfo) GetTotalRoomCard() int32 {
	if m != nil {
		return m.TotalRoomCard
	}
	return 0
}

func (m *DdzEndResultInfo) GetConsumeRoomCard() int32 {
	if m != nil {
		return m.ConsumeRoomCard
	}
	return 0
}

// 红中麻将的每局的结算结果
type HongZhongMahjongResultNtf struct {
	Remaincards  []int32                `protobuf:"varint,1,rep,packed,name=remaincards" json:"remaincards,omitempty"`
	AllPerResult []*PersonPerGameResult `protobuf:"bytes,2,rep,name=allPerResult" json:"allPerResult,omitempty"`
	GameNum      int32                  `protobuf:"varint,3,opt,name=gameNum" json:"gameNum,omitempty"`
	MaValue      []int32                `protobuf:"varint,4,rep,packed,name=maValue" json:"maValue,omitempty"`
}

func (m *HongZhongMahjongResultNtf) Reset()                    { *m = HongZhongMahjongResultNtf{} }
func (m *HongZhongMahjongResultNtf) String() string            { return proto.CompactTextString(m) }
func (*HongZhongMahjongResultNtf) ProtoMessage()               {}
func (*HongZhongMahjongResultNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{97} }

func (m *HongZhongMahjongResultNtf) GetRemaincards() []int32 {
	if m != nil {
		return m.Remaincards
	}
	return nil
}

func (m *HongZhongMahjongResultNtf) GetAllPerResult() []*PersonPerGameResult {
	if m != nil {
		return m.AllPerResult
	}
	return nil
}

func (m *HongZhongMahjongResultNtf) GetGameNum() int32 {
	if m != nil {
		return m.GameNum
	}
	return 0
}

func (m *HongZhongMahjongResultNtf) GetMaValue() []int32 {
	if m != nil {
		return m.MaValue
	}
	return nil
}

// 红中麻将每局每人的结算结果
type PersonPerGameResult struct {
	Uid        int64                        `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Mingtang   []int32                      `protobuf:"varint,2,rep,packed,name=mingtang" json:"mingtang,omitempty"`
	Hand       []int64                      `protobuf:"varint,3,rep,packed,name=hand" json:"hand,omitempty"`
	Fun        int32                        `protobuf:"varint,4,opt,name=fun" json:"fun,omitempty"`
	GuiNum     int32                        `protobuf:"varint,5,opt,name=guiNum" json:"guiNum,omitempty"`
	Win        int32                        `protobuf:"varint,6,opt,name=win" json:"win,omitempty"`
	Putout     []*HongZhongMahjongPutOut    `protobuf:"bytes,7,rep,name=putout" json:"putout,omitempty"`
	Details    []*HongZhongMahjongdetailWin `protobuf:"bytes,8,rep,name=details" json:"details,omitempty"`
	IsFengDing bool                         `protobuf:"varint,9,opt,name=isFengDing" json:"isFengDing,omitempty"`
}

func (m *PersonPerGameResult) Reset()                    { *m = PersonPerGameResult{} }
func (m *PersonPerGameResult) String() string            { return proto.CompactTextString(m) }
func (*PersonPerGameResult) ProtoMessage()               {}
func (*PersonPerGameResult) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{98} }

func (m *PersonPerGameResult) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *PersonPerGameResult) GetMingtang() []int32 {
	if m != nil {
		return m.Mingtang
	}
	return nil
}

func (m *PersonPerGameResult) GetHand() []int64 {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *PersonPerGameResult) GetFun() int32 {
	if m != nil {
		return m.Fun
	}
	return 0
}

func (m *PersonPerGameResult) GetGuiNum() int32 {
	if m != nil {
		return m.GuiNum
	}
	return 0
}

func (m *PersonPerGameResult) GetWin() int32 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *PersonPerGameResult) GetPutout() []*HongZhongMahjongPutOut {
	if m != nil {
		return m.Putout
	}
	return nil
}

func (m *PersonPerGameResult) GetDetails() []*HongZhongMahjongdetailWin {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *PersonPerGameResult) GetIsFengDing() bool {
	if m != nil {
		return m.IsFengDing
	}
	return false
}

type HongZhongMahjongPutOut struct {
	Cards []int32 `protobuf:"varint,1,rep,packed,name=cards" json:"cards,omitempty"`
}

func (m *HongZhongMahjongPutOut) Reset()                    { *m = HongZhongMahjongPutOut{} }
func (m *HongZhongMahjongPutOut) String() string            { return proto.CompactTextString(m) }
func (*HongZhongMahjongPutOut) ProtoMessage()               {}
func (*HongZhongMahjongPutOut) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{99} }

func (m *HongZhongMahjongPutOut) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 红中麻将输赢详情
type HongZhongMahjongdetailWin struct {
	Type     string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	WinValue int32  `protobuf:"varint,3,opt,name=winValue" json:"winValue,omitempty"`
}

func (m *HongZhongMahjongdetailWin) Reset()                    { *m = HongZhongMahjongdetailWin{} }
func (m *HongZhongMahjongdetailWin) String() string            { return proto.CompactTextString(m) }
func (*HongZhongMahjongdetailWin) ProtoMessage()               {}
func (*HongZhongMahjongdetailWin) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{100} }

func (m *HongZhongMahjongdetailWin) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *HongZhongMahjongdetailWin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HongZhongMahjongdetailWin) GetWinValue() int32 {
	if m != nil {
		return m.WinValue
	}
	return 0
}

// @api:1028,@type:resp
type GamePlayerEndResultListNtf struct {
	Num  int32                `protobuf:"varint,1,opt,name=num" json:"num,omitempty"`
	List []*GameEndResultInfo `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *GamePlayerEndResultListNtf) Reset()                    { *m = GamePlayerEndResultListNtf{} }
func (m *GamePlayerEndResultListNtf) String() string            { return proto.CompactTextString(m) }
func (*GamePlayerEndResultListNtf) ProtoMessage()               {}
func (*GamePlayerEndResultListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{101} }

func (m *GamePlayerEndResultListNtf) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *GamePlayerEndResultListNtf) GetList() []*GameEndResultInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 游戏最终结算结果 //后面都用这个
type GameEndResultInfo struct {
	Winlose          int32             `protobuf:"varint,1,opt,name=winlose" json:"winlose,omitempty"`
	TotalRoomCard    int32             `protobuf:"varint,2,opt,name=totalRoomCard" json:"totalRoomCard,omitempty"`
	ConsumeRoomCard  int32             `protobuf:"varint,3,opt,name=consumeRoomCard" json:"consumeRoomCard,omitempty"`
	Uid              int64             `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
	MahjongEndRecord *MahjongEndRecord `protobuf:"bytes,5,opt,name=mahjongEndRecord" json:"mahjongEndRecord,omitempty"`
}

func (m *GameEndResultInfo) Reset()                    { *m = GameEndResultInfo{} }
func (m *GameEndResultInfo) String() string            { return proto.CompactTextString(m) }
func (*GameEndResultInfo) ProtoMessage()               {}
func (*GameEndResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{102} }

func (m *GameEndResultInfo) GetWinlose() int32 {
	if m != nil {
		return m.Winlose
	}
	return 0
}

func (m *GameEndResultInfo) GetTotalRoomCard() int32 {
	if m != nil {
		return m.TotalRoomCard
	}
	return 0
}

func (m *GameEndResultInfo) GetConsumeRoomCard() int32 {
	if m != nil {
		return m.ConsumeRoomCard
	}
	return 0
}

func (m *GameEndResultInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GameEndResultInfo) GetMahjongEndRecord() *MahjongEndRecord {
	if m != nil {
		return m.MahjongEndRecord
	}
	return nil
}

// 麻将总结算记录
type MahjongEndRecord struct {
	ZimoCn     int32 `protobuf:"varint,1,opt,name=zimoCn" json:"zimoCn,omitempty"`
	JiepaoCn   int32 `protobuf:"varint,2,opt,name=jiepaoCn" json:"jiepaoCn,omitempty"`
	DianpaoCn  int32 `protobuf:"varint,3,opt,name=dianpaoCn" json:"dianpaoCn,omitempty"`
	AngangCn   int32 `protobuf:"varint,4,opt,name=angangCn" json:"angangCn,omitempty"`
	MinggangCn int32 `protobuf:"varint,5,opt,name=minggangCn" json:"minggangCn,omitempty"`
	ChajiaoCn  int32 `protobuf:"varint,6,opt,name=chajiaoCn" json:"chajiaoCn,omitempty"`
	WujiaoCn   int32 `protobuf:"varint,7,opt,name=wujiaoCn" json:"wujiaoCn,omitempty"`
	HuazuCn    int32 `protobuf:"varint,8,opt,name=huazuCn" json:"huazuCn,omitempty"`
	ChahuazuCn int32 `protobuf:"varint,9,opt,name=chahuazuCn" json:"chahuazuCn,omitempty"`
}

func (m *MahjongEndRecord) Reset()                    { *m = MahjongEndRecord{} }
func (m *MahjongEndRecord) String() string            { return proto.CompactTextString(m) }
func (*MahjongEndRecord) ProtoMessage()               {}
func (*MahjongEndRecord) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{103} }

func (m *MahjongEndRecord) GetZimoCn() int32 {
	if m != nil {
		return m.ZimoCn
	}
	return 0
}

func (m *MahjongEndRecord) GetJiepaoCn() int32 {
	if m != nil {
		return m.JiepaoCn
	}
	return 0
}

func (m *MahjongEndRecord) GetDianpaoCn() int32 {
	if m != nil {
		return m.DianpaoCn
	}
	return 0
}

func (m *MahjongEndRecord) GetAngangCn() int32 {
	if m != nil {
		return m.AngangCn
	}
	return 0
}

func (m *MahjongEndRecord) GetMinggangCn() int32 {
	if m != nil {
		return m.MinggangCn
	}
	return 0
}

func (m *MahjongEndRecord) GetChajiaoCn() int32 {
	if m != nil {
		return m.ChajiaoCn
	}
	return 0
}

func (m *MahjongEndRecord) GetWujiaoCn() int32 {
	if m != nil {
		return m.WujiaoCn
	}
	return 0
}

func (m *MahjongEndRecord) GetHuazuCn() int32 {
	if m != nil {
		return m.HuazuCn
	}
	return 0
}

func (m *MahjongEndRecord) GetChahuazuCn() int32 {
	if m != nil {
		return m.ChahuazuCn
	}
	return 0
}

// 大贰的结算结果
type BigTwoEndResultInfo struct {
	Winlose         int32 `protobuf:"varint,1,opt,name=winlose" json:"winlose,omitempty"`
	TotalRoomCard   int32 `protobuf:"varint,2,opt,name=totalRoomCard" json:"totalRoomCard,omitempty"`
	ConsumeRoomCard int32 `protobuf:"varint,3,opt,name=consumeRoomCard" json:"consumeRoomCard,omitempty"`
	Uid             int64 `protobuf:"varint,4,opt,name=uid" json:"uid,omitempty"`
}

func (m *BigTwoEndResultInfo) Reset()                    { *m = BigTwoEndResultInfo{} }
func (m *BigTwoEndResultInfo) String() string            { return proto.CompactTextString(m) }
func (*BigTwoEndResultInfo) ProtoMessage()               {}
func (*BigTwoEndResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{104} }

func (m *BigTwoEndResultInfo) GetWinlose() int32 {
	if m != nil {
		return m.Winlose
	}
	return 0
}

func (m *BigTwoEndResultInfo) GetTotalRoomCard() int32 {
	if m != nil {
		return m.TotalRoomCard
	}
	return 0
}

func (m *BigTwoEndResultInfo) GetConsumeRoomCard() int32 {
	if m != nil {
		return m.ConsumeRoomCard
	}
	return 0
}

func (m *BigTwoEndResultInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// 多次牌局的战绩
type MultipleFightGradeInfo struct {
	List []*FightGradeInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *MultipleFightGradeInfo) Reset()                    { *m = MultipleFightGradeInfo{} }
func (m *MultipleFightGradeInfo) String() string            { return proto.CompactTextString(m) }
func (*MultipleFightGradeInfo) ProtoMessage()               {}
func (*MultipleFightGradeInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{105} }

func (m *MultipleFightGradeInfo) GetList() []*FightGradeInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 战绩
type FightGradeInfo struct {
	Start       int64          `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	End         int64          `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
	RoomId      int32          `protobuf:"varint,3,opt,name=roomId" json:"roomId,omitempty"`
	Num         int32          `protobuf:"varint,4,opt,name=num" json:"num,omitempty"`
	TotalFight  []*PersonFight `protobuf:"bytes,5,rep,name=totalFight" json:"totalFight,omitempty"`
	DetailFight []*PersonFight `protobuf:"bytes,6,rep,name=detailFight" json:"detailFight,omitempty"`
	ReplayIds   []string       `protobuf:"bytes,7,rep,name=replayIds" json:"replayIds,omitempty"`
	ClubId      int32          `protobuf:"varint,8,opt,name=clubId" json:"clubId,omitempty"`
	GameType    GAME           `protobuf:"varint,9,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Origin      ORIGIN         `protobuf:"varint,10,opt,name=origin,enum=protocol.ORIGIN" json:"origin,omitempty"`
	Owner       bool           `protobuf:"varint,11,opt,name=owner" json:"owner,omitempty"`
	Maxwin      *MaxWin        `protobuf:"bytes,12,opt,name=maxwin" json:"maxwin,omitempty"`
	ClubRoomId  int32          `protobuf:"varint,13,opt,name=clubRoomId" json:"clubRoomId,omitempty"`
}

func (m *FightGradeInfo) Reset()                    { *m = FightGradeInfo{} }
func (m *FightGradeInfo) String() string            { return proto.CompactTextString(m) }
func (*FightGradeInfo) ProtoMessage()               {}
func (*FightGradeInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{106} }

func (m *FightGradeInfo) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *FightGradeInfo) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *FightGradeInfo) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *FightGradeInfo) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *FightGradeInfo) GetTotalFight() []*PersonFight {
	if m != nil {
		return m.TotalFight
	}
	return nil
}

func (m *FightGradeInfo) GetDetailFight() []*PersonFight {
	if m != nil {
		return m.DetailFight
	}
	return nil
}

func (m *FightGradeInfo) GetReplayIds() []string {
	if m != nil {
		return m.ReplayIds
	}
	return nil
}

func (m *FightGradeInfo) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *FightGradeInfo) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *FightGradeInfo) GetOrigin() ORIGIN {
	if m != nil {
		return m.Origin
	}
	return ORIGIN_SELF_SELECT
}

func (m *FightGradeInfo) GetOwner() bool {
	if m != nil {
		return m.Owner
	}
	return false
}

func (m *FightGradeInfo) GetMaxwin() *MaxWin {
	if m != nil {
		return m.Maxwin
	}
	return nil
}

func (m *FightGradeInfo) GetClubRoomId() int32 {
	if m != nil {
		return m.ClubRoomId
	}
	return 0
}

type MaxWin struct {
	// 	int32 gameType  = 1; //游戏类型
	//    int32 origin =2; //区域
	UserIds     []int64 `protobuf:"varint,1,rep,packed,name=userIds" json:"userIds,omitempty"`
	RoomType    string  `protobuf:"bytes,2,opt,name=roomType" json:"roomType,omitempty"`
	IsPerfet    bool    `protobuf:"varint,3,opt,name=isPerfet" json:"isPerfet,omitempty"`
	PayCardType int32   `protobuf:"varint,4,opt,name=payCardType" json:"payCardType,omitempty"`
}

func (m *MaxWin) Reset()                    { *m = MaxWin{} }
func (m *MaxWin) String() string            { return proto.CompactTextString(m) }
func (*MaxWin) ProtoMessage()               {}
func (*MaxWin) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{107} }

func (m *MaxWin) GetUserIds() []int64 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *MaxWin) GetRoomType() string {
	if m != nil {
		return m.RoomType
	}
	return ""
}

func (m *MaxWin) GetIsPerfet() bool {
	if m != nil {
		return m.IsPerfet
	}
	return false
}

func (m *MaxWin) GetPayCardType() int32 {
	if m != nil {
		return m.PayCardType
	}
	return 0
}

type PersonFight struct {
	Name  string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Fight []int32 `protobuf:"varint,2,rep,packed,name=fight" json:"fight,omitempty"`
	Uid   int64   `protobuf:"varint,3,opt,name=uid" json:"uid,omitempty"`
	Icon  string  `protobuf:"bytes,4,opt,name=icon" json:"icon,omitempty"`
}

func (m *PersonFight) Reset()                    { *m = PersonFight{} }
func (m *PersonFight) String() string            { return proto.CompactTextString(m) }
func (*PersonFight) ProtoMessage()               {}
func (*PersonFight) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{108} }

func (m *PersonFight) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PersonFight) GetFight() []int32 {
	if m != nil {
		return m.Fight
	}
	return nil
}

func (m *PersonFight) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *PersonFight) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

//
// 平胡 = 1 << (iota)
// 大对子
// 暗七对
// 清一色
// 将对
// 带幺
//
// 天胡 //(自摸)
// 地胡 //(自摸)
// 自摸
// 杠上花 //(自摸)
// 海底捞 //(自摸)
//
// 胡
// 金钩钓
// 杠上炮
// 抢杠
//
// 杠
// 下雨
// 刮风
// 呼叫转移
type MJPlayerResultInfo struct {
	Hu      int32                       `protobuf:"varint,1,opt,name=hu" json:"hu,omitempty"`
	HuInfo  int32                       `protobuf:"varint,2,opt,name=huInfo" json:"huInfo,omitempty"`
	Gen     int32                       `protobuf:"varint,3,opt,name=gen" json:"gen,omitempty"`
	Points  int32                       `protobuf:"varint,4,opt,name=points" json:"points,omitempty"`
	Money   int32                       `protobuf:"varint,5,opt,name=money" json:"money,omitempty"`
	Exclude int32                       `protobuf:"varint,6,opt,name=exclude" json:"exclude,omitempty"`
	Uid     int64                       `protobuf:"varint,7,opt,name=uid" json:"uid,omitempty"`
	Hand    []int32                     `protobuf:"varint,8,rep,packed,name=hand" json:"hand,omitempty"`
	Show    []int32                     `protobuf:"varint,9,rep,packed,name=show" json:"show,omitempty"`
	Details []*MJPlayerResultDetailInfo `protobuf:"bytes,10,rep,name=details" json:"details,omitempty"`
}

func (m *MJPlayerResultInfo) Reset()                    { *m = MJPlayerResultInfo{} }
func (m *MJPlayerResultInfo) String() string            { return proto.CompactTextString(m) }
func (*MJPlayerResultInfo) ProtoMessage()               {}
func (*MJPlayerResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{109} }

func (m *MJPlayerResultInfo) GetHu() int32 {
	if m != nil {
		return m.Hu
	}
	return 0
}

func (m *MJPlayerResultInfo) GetHuInfo() int32 {
	if m != nil {
		return m.HuInfo
	}
	return 0
}

func (m *MJPlayerResultInfo) GetGen() int32 {
	if m != nil {
		return m.Gen
	}
	return 0
}

func (m *MJPlayerResultInfo) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *MJPlayerResultInfo) GetMoney() int32 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *MJPlayerResultInfo) GetExclude() int32 {
	if m != nil {
		return m.Exclude
	}
	return 0
}

func (m *MJPlayerResultInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MJPlayerResultInfo) GetHand() []int32 {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *MJPlayerResultInfo) GetShow() []int32 {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *MJPlayerResultInfo) GetDetails() []*MJPlayerResultDetailInfo {
	if m != nil {
		return m.Details
	}
	return nil
}

type MJPlayerResultDetailInfo struct {
	Info   int32 `protobuf:"varint,1,opt,name=info" json:"info,omitempty"`
	Points int32 `protobuf:"varint,2,opt,name=points" json:"points,omitempty"`
	Uid    int64 `protobuf:"varint,3,opt,name=uid" json:"uid,omitempty"`
	Money  int32 `protobuf:"varint,4,opt,name=money" json:"money,omitempty"`
	Gen    int32 `protobuf:"varint,5,opt,name=gen" json:"gen,omitempty"`
}

func (m *MJPlayerResultDetailInfo) Reset()                    { *m = MJPlayerResultDetailInfo{} }
func (m *MJPlayerResultDetailInfo) String() string            { return proto.CompactTextString(m) }
func (*MJPlayerResultDetailInfo) ProtoMessage()               {}
func (*MJPlayerResultDetailInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{110} }

func (m *MJPlayerResultDetailInfo) GetInfo() int32 {
	if m != nil {
		return m.Info
	}
	return 0
}

func (m *MJPlayerResultDetailInfo) GetPoints() int32 {
	if m != nil {
		return m.Points
	}
	return 0
}

func (m *MJPlayerResultDetailInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *MJPlayerResultDetailInfo) GetMoney() int32 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *MJPlayerResultDetailInfo) GetGen() int32 {
	if m != nil {
		return m.Gen
	}
	return 0
}

// 大贰的结算结果
type BigTwoResultInfo struct {
	Winlose  int32          `protobuf:"varint,1,opt,name=winlose" json:"winlose,omitempty"`
	Base     int32          `protobuf:"varint,2,opt,name=base" json:"base,omitempty"`
	Hufan    int32          `protobuf:"varint,3,opt,name=hufan" json:"hufan,omitempty"`
	Huxi     int32          `protobuf:"varint,4,opt,name=huxi" json:"huxi,omitempty"`
	Uid      int64          `protobuf:"varint,5,opt,name=uid" json:"uid,omitempty"`
	Hucard   int32          `protobuf:"varint,6,opt,name=hucard" json:"hucard,omitempty"`
	Mingtang []int32        `protobuf:"varint,7,rep,packed,name=mingtang" json:"mingtang,omitempty"`
	Hand     []*BigTwoCards `protobuf:"bytes,8,rep,name=hand" json:"hand,omitempty"`
	Putout   []*BigTwoCards `protobuf:"bytes,9,rep,name=putout" json:"putout,omitempty"`
}

func (m *BigTwoResultInfo) Reset()                    { *m = BigTwoResultInfo{} }
func (m *BigTwoResultInfo) String() string            { return proto.CompactTextString(m) }
func (*BigTwoResultInfo) ProtoMessage()               {}
func (*BigTwoResultInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{111} }

func (m *BigTwoResultInfo) GetWinlose() int32 {
	if m != nil {
		return m.Winlose
	}
	return 0
}

func (m *BigTwoResultInfo) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *BigTwoResultInfo) GetHufan() int32 {
	if m != nil {
		return m.Hufan
	}
	return 0
}

func (m *BigTwoResultInfo) GetHuxi() int32 {
	if m != nil {
		return m.Huxi
	}
	return 0
}

func (m *BigTwoResultInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *BigTwoResultInfo) GetHucard() int32 {
	if m != nil {
		return m.Hucard
	}
	return 0
}

func (m *BigTwoResultInfo) GetMingtang() []int32 {
	if m != nil {
		return m.Mingtang
	}
	return nil
}

func (m *BigTwoResultInfo) GetHand() []*BigTwoCards {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *BigTwoResultInfo) GetPutout() []*BigTwoCards {
	if m != nil {
		return m.Putout
	}
	return nil
}

type BigTwoCards struct {
	Cards []int32 `protobuf:"varint,1,rep,packed,name=cards" json:"cards,omitempty"`
}

func (m *BigTwoCards) Reset()                    { *m = BigTwoCards{} }
func (m *BigTwoCards) String() string            { return proto.CompactTextString(m) }
func (*BigTwoCards) ProtoMessage()               {}
func (*BigTwoCards) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{112} }

func (m *BigTwoCards) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

type BigTwoInfo struct {
	Hand      []int32        `protobuf:"varint,1,rep,packed,name=hand" json:"hand,omitempty"`
	Nouse     []int32        `protobuf:"varint,2,rep,packed,name=nouse" json:"nouse,omitempty"`
	Putout    []*BigTwoCards `protobuf:"bytes,3,rep,name=putout" json:"putout,omitempty"`
	Op        int32          `protobuf:"varint,4,opt,name=op" json:"op,omitempty"`
	BustCards []int32        `protobuf:"varint,5,rep,packed,name=bustCards" json:"bustCards,omitempty"`
}

func (m *BigTwoInfo) Reset()                    { *m = BigTwoInfo{} }
func (m *BigTwoInfo) String() string            { return proto.CompactTextString(m) }
func (*BigTwoInfo) ProtoMessage()               {}
func (*BigTwoInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{113} }

func (m *BigTwoInfo) GetHand() []int32 {
	if m != nil {
		return m.Hand
	}
	return nil
}

func (m *BigTwoInfo) GetNouse() []int32 {
	if m != nil {
		return m.Nouse
	}
	return nil
}

func (m *BigTwoInfo) GetPutout() []*BigTwoCards {
	if m != nil {
		return m.Putout
	}
	return nil
}

func (m *BigTwoInfo) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *BigTwoInfo) GetBustCards() []int32 {
	if m != nil {
		return m.BustCards
	}
	return nil
}

type BigTwoCardInfo struct {
	Play  bool  `protobuf:"varint,1,opt,name=play" json:"play,omitempty"`
	Uid   int64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Value int32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *BigTwoCardInfo) Reset()                    { *m = BigTwoCardInfo{} }
func (m *BigTwoCardInfo) String() string            { return proto.CompactTextString(m) }
func (*BigTwoCardInfo) ProtoMessage()               {}
func (*BigTwoCardInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{114} }

func (m *BigTwoCardInfo) GetPlay() bool {
	if m != nil {
		return m.Play
	}
	return false
}

func (m *BigTwoCardInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *BigTwoCardInfo) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 牛牛:
// 0-wait(等待) 1-ready(准备) 2-deal1(发牌) 3-qiangzhuang(抢庄) 4-随机庄家 5-xiazhu(下注) 6-deal2(发牌2) 7-kaipai(开牌)
// 诈金花:
// 0-wait(等待) 1-ready(准备) 2-强制下注 3-发牌 4-闷牌 5-自由操作 6-结果
// 包剪锤：
// 0-wait(等待) 1-ready(准备) 2-开始游戏 3-玩家操作 4-结果
// 房间信息
type RoomInfo struct {
	GameType        GAME               `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Id              int64              `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Cnt             int32              `protobuf:"varint,3,opt,name=cnt" json:"cnt,omitempty"`
	GsId            int32              `protobuf:"varint,4,opt,name=gsId" json:"gsId,omitempty"`
	ClubId          int32              `protobuf:"varint,5,opt,name=clubId" json:"clubId,omitempty"`
	Type            int32              `protobuf:"varint,6,opt,name=type" json:"type,omitempty"`
	RoomId          int32              `protobuf:"varint,7,opt,name=roomId" json:"roomId,omitempty"`
	Base            int32              `protobuf:"varint,8,opt,name=base" json:"base,omitempty"`
	Limit           int32              `protobuf:"varint,9,opt,name=limit" json:"limit,omitempty"`
	Status          int32              `protobuf:"varint,10,opt,name=status" json:"status,omitempty"`
	End             int64              `protobuf:"varint,11,opt,name=end" json:"end,omitempty"`
	Now             int64              `protobuf:"varint,12,opt,name=now" json:"now,omitempty"`
	Dealer          int64              `protobuf:"varint,13,opt,name=dealer" json:"dealer,omitempty"`
	Start           int64              `protobuf:"varint,14,opt,name=start" json:"start,omitempty"`
	Total           int32              `protobuf:"varint,15,opt,name=total" json:"total,omitempty"`
	Round           int32              `protobuf:"varint,16,opt,name=round" json:"round,omitempty"`
	Bet             int32              `protobuf:"varint,17,opt,name=bet" json:"bet,omitempty"`
	CardNum         int32              `protobuf:"varint,18,opt,name=cardNum" json:"cardNum,omitempty"`
	Rule            int32              `protobuf:"varint,19,opt,name=rule" json:"rule,omitempty"`
	Power           int32              `protobuf:"varint,20,opt,name=power" json:"power,omitempty"`
	Owner           int64              `protobuf:"varint,21,opt,name=owner" json:"owner,omitempty"`
	CurGameNum      int32              `protobuf:"varint,22,opt,name=curGameNum" json:"curGameNum,omitempty"`
	GameNum         int32              `protobuf:"varint,23,opt,name=GameNum" json:"GameNum,omitempty"`
	CurPlayer       int64              `protobuf:"varint,24,opt,name=CurPlayer" json:"CurPlayer,omitempty"`
	NewRlue         []int32            `protobuf:"varint,25,rep,packed,name=NewRlue" json:"NewRlue,omitempty"`
	Origin          int32              `protobuf:"varint,26,opt,name=origin" json:"origin,omitempty"`
	Opcard          *BigTwoCardInfo    `protobuf:"bytes,27,opt,name=opcard" json:"opcard,omitempty"`
	ApplyStatus     []int64            `protobuf:"varint,28,rep,packed,name=applyStatus" json:"applyStatus,omitempty"`
	Clubdesk        *RoomClubDeskInfo  `protobuf:"bytes,29,opt,name=clubdesk" json:"clubdesk,omitempty"`
	Paodekuai       *PaoDeKuaiRoomInfo `protobuf:"bytes,30,opt,name=paodekuai" json:"paodekuai,omitempty"`
	Benjing         int32              `protobuf:"varint,31,opt,name=benjing" json:"benjing,omitempty"`
	ClubName        string             `protobuf:"bytes,32,opt,name=clubName" json:"clubName,omitempty"`
	Expand          []int64            `protobuf:"varint,33,rep,packed,name=expand" json:"expand,omitempty"`
	ExpendSpeciTing *ExpendSpeciThing  `protobuf:"bytes,41,opt,name=expendSpeciTing" json:"expendSpeciTing,omitempty"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{115} }

func (m *RoomInfo) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *RoomInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RoomInfo) GetCnt() int32 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

func (m *RoomInfo) GetGsId() int32 {
	if m != nil {
		return m.GsId
	}
	return 0
}

func (m *RoomInfo) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *RoomInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *RoomInfo) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *RoomInfo) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *RoomInfo) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RoomInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *RoomInfo) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *RoomInfo) GetNow() int64 {
	if m != nil {
		return m.Now
	}
	return 0
}

func (m *RoomInfo) GetDealer() int64 {
	if m != nil {
		return m.Dealer
	}
	return 0
}

func (m *RoomInfo) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RoomInfo) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *RoomInfo) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoomInfo) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

func (m *RoomInfo) GetCardNum() int32 {
	if m != nil {
		return m.CardNum
	}
	return 0
}

func (m *RoomInfo) GetRule() int32 {
	if m != nil {
		return m.Rule
	}
	return 0
}

func (m *RoomInfo) GetPower() int32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *RoomInfo) GetOwner() int64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *RoomInfo) GetCurGameNum() int32 {
	if m != nil {
		return m.CurGameNum
	}
	return 0
}

func (m *RoomInfo) GetGameNum() int32 {
	if m != nil {
		return m.GameNum
	}
	return 0
}

func (m *RoomInfo) GetCurPlayer() int64 {
	if m != nil {
		return m.CurPlayer
	}
	return 0
}

func (m *RoomInfo) GetNewRlue() []int32 {
	if m != nil {
		return m.NewRlue
	}
	return nil
}

func (m *RoomInfo) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

func (m *RoomInfo) GetOpcard() *BigTwoCardInfo {
	if m != nil {
		return m.Opcard
	}
	return nil
}

func (m *RoomInfo) GetApplyStatus() []int64 {
	if m != nil {
		return m.ApplyStatus
	}
	return nil
}

func (m *RoomInfo) GetClubdesk() *RoomClubDeskInfo {
	if m != nil {
		return m.Clubdesk
	}
	return nil
}

func (m *RoomInfo) GetPaodekuai() *PaoDeKuaiRoomInfo {
	if m != nil {
		return m.Paodekuai
	}
	return nil
}

func (m *RoomInfo) GetBenjing() int32 {
	if m != nil {
		return m.Benjing
	}
	return 0
}

func (m *RoomInfo) GetClubName() string {
	if m != nil {
		return m.ClubName
	}
	return ""
}

func (m *RoomInfo) GetExpand() []int64 {
	if m != nil {
		return m.Expand
	}
	return nil
}

func (m *RoomInfo) GetExpendSpeciTing() *ExpendSpeciThing {
	if m != nil {
		return m.ExpendSpeciTing
	}
	return nil
}

// 跑得快roomInfo
type PaoDeKuaiRoomInfo struct {
	CardRecord []int32 `protobuf:"varint,1,rep,packed,name=cardRecord" json:"cardRecord,omitempty"`
}

func (m *PaoDeKuaiRoomInfo) Reset()                    { *m = PaoDeKuaiRoomInfo{} }
func (m *PaoDeKuaiRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*PaoDeKuaiRoomInfo) ProtoMessage()               {}
func (*PaoDeKuaiRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{116} }

func (m *PaoDeKuaiRoomInfo) GetCardRecord() []int32 {
	if m != nil {
		return m.CardRecord
	}
	return nil
}

// 房间在俱乐部中的包间位置
type RoomClubDeskInfo struct {
	RoomUid   int32 `protobuf:"varint,1,opt,name=roomUid" json:"roomUid,omitempty"`
	DeskIndex int32 `protobuf:"varint,2,opt,name=deskIndex" json:"deskIndex,omitempty"`
}

func (m *RoomClubDeskInfo) Reset()                    { *m = RoomClubDeskInfo{} }
func (m *RoomClubDeskInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomClubDeskInfo) ProtoMessage()               {}
func (*RoomClubDeskInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{117} }

func (m *RoomClubDeskInfo) GetRoomUid() int32 {
	if m != nil {
		return m.RoomUid
	}
	return 0
}

func (m *RoomClubDeskInfo) GetDeskIndex() int32 {
	if m != nil {
		return m.DeskIndex
	}
	return 0
}

// 玩家信息
type Player struct {
	IsAuto      bool                `protobuf:"varint,1,opt,name=isAuto" json:"isAuto,omitempty"`
	IsView      bool                `protobuf:"varint,2,opt,name=isView" json:"isView,omitempty"`
	Hu          int32               `protobuf:"varint,3,opt,name=hu" json:"hu,omitempty"`
	Exclude     int32               `protobuf:"varint,4,opt,name=exclude" json:"exclude,omitempty"`
	Op          int32               `protobuf:"varint,5,opt,name=op" json:"op,omitempty"`
	HuType      int32               `protobuf:"varint,6,opt,name=huType" json:"huType,omitempty"`
	CardNum     int32               `protobuf:"varint,7,opt,name=cardNum" json:"cardNum,omitempty"`
	Status      int32               `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
	DeskId      int32               `protobuf:"varint,9,opt,name=deskId" json:"deskId,omitempty"`
	Result      int32               `protobuf:"varint,10,opt,name=result" json:"result,omitempty"`
	Reward      int32               `protobuf:"varint,11,opt,name=reward" json:"reward,omitempty"`
	Bet         int32               `protobuf:"varint,12,opt,name=bet" json:"bet,omitempty"`
	Power       int32               `protobuf:"varint,13,opt,name=power" json:"power,omitempty"`
	GVoiceId    int32               `protobuf:"varint,14,opt,name=gVoiceId" json:"gVoiceId,omitempty"`
	Start       int64               `protobuf:"varint,15,opt,name=start" json:"start,omitempty"`
	End         int64               `protobuf:"varint,16,opt,name=end" json:"end,omitempty"`
	Money       int64               `protobuf:"varint,17,opt,name=money" json:"money,omitempty"`
	Uid         int64               `protobuf:"varint,18,opt,name=uid" json:"uid,omitempty"`
	Icon        string              `protobuf:"bytes,19,opt,name=icon" json:"icon,omitempty"`
	Name        string              `protobuf:"bytes,20,opt,name=name" json:"name,omitempty"`
	Ip          string              `protobuf:"bytes,21,opt,name=ip" json:"ip,omitempty"`
	Cards       []int32             `protobuf:"varint,22,rep,packed,name=cards" json:"cards,omitempty"`
	Show        []int32             `protobuf:"varint,23,rep,packed,name=show" json:"show,omitempty"`
	Fold        []int32             `protobuf:"varint,24,rep,packed,name=fold" json:"fold,omitempty"`
	ClubList    []int32             `protobuf:"varint,25,rep,packed,name=clubList" json:"clubList,omitempty"`
	MjResult    *MJPlayerResultInfo `protobuf:"bytes,26,opt,name=mjResult" json:"mjResult,omitempty"`
	BigtwoInfo  *BigTwoInfo         `protobuf:"bytes,27,opt,name=bigtwoInfo" json:"bigtwoInfo,omitempty"`
	RoomCard    []int64             `protobuf:"varint,28,rep,packed,name=roomCard" json:"roomCard,omitempty"`
	Sex         int32               `protobuf:"varint,29,opt,name=sex" json:"sex,omitempty"`
	Gps         *Gps                `protobuf:"bytes,30,opt,name=gps" json:"gps,omitempty"`
	Piao        int32               `protobuf:"varint,31,opt,name=piao" json:"piao,omitempty"`
	Expand      []int64             `protobuf:"varint,32,rep,packed,name=expand" json:"expand,omitempty"`
	Online      bool                `protobuf:"varint,33,opt,name=online" json:"online,omitempty"`
	GVoiceToken string              `protobuf:"bytes,34,opt,name=gVoiceToken" json:"gVoiceToken,omitempty"`
}

func (m *Player) Reset()                    { *m = Player{} }
func (m *Player) String() string            { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()               {}
func (*Player) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{118} }

func (m *Player) GetIsAuto() bool {
	if m != nil {
		return m.IsAuto
	}
	return false
}

func (m *Player) GetIsView() bool {
	if m != nil {
		return m.IsView
	}
	return false
}

func (m *Player) GetHu() int32 {
	if m != nil {
		return m.Hu
	}
	return 0
}

func (m *Player) GetExclude() int32 {
	if m != nil {
		return m.Exclude
	}
	return 0
}

func (m *Player) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *Player) GetHuType() int32 {
	if m != nil {
		return m.HuType
	}
	return 0
}

func (m *Player) GetCardNum() int32 {
	if m != nil {
		return m.CardNum
	}
	return 0
}

func (m *Player) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Player) GetDeskId() int32 {
	if m != nil {
		return m.DeskId
	}
	return 0
}

func (m *Player) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *Player) GetReward() int32 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *Player) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

func (m *Player) GetPower() int32 {
	if m != nil {
		return m.Power
	}
	return 0
}

func (m *Player) GetGVoiceId() int32 {
	if m != nil {
		return m.GVoiceId
	}
	return 0
}

func (m *Player) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Player) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Player) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *Player) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Player) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Player) GetCards() []int32 {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *Player) GetShow() []int32 {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *Player) GetFold() []int32 {
	if m != nil {
		return m.Fold
	}
	return nil
}

func (m *Player) GetClubList() []int32 {
	if m != nil {
		return m.ClubList
	}
	return nil
}

func (m *Player) GetMjResult() *MJPlayerResultInfo {
	if m != nil {
		return m.MjResult
	}
	return nil
}

func (m *Player) GetBigtwoInfo() *BigTwoInfo {
	if m != nil {
		return m.BigtwoInfo
	}
	return nil
}

func (m *Player) GetRoomCard() []int64 {
	if m != nil {
		return m.RoomCard
	}
	return nil
}

func (m *Player) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Player) GetGps() *Gps {
	if m != nil {
		return m.Gps
	}
	return nil
}

func (m *Player) GetPiao() int32 {
	if m != nil {
		return m.Piao
	}
	return 0
}

func (m *Player) GetExpand() []int64 {
	if m != nil {
		return m.Expand
	}
	return nil
}

func (m *Player) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *Player) GetGVoiceToken() string {
	if m != nil {
		return m.GVoiceToken
	}
	return ""
}

// gps信息
type Gps struct {
	Longitude string `protobuf:"bytes,1,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  string `protobuf:"bytes,2,opt,name=latitude" json:"latitude,omitempty"`
}

func (m *Gps) Reset()                    { *m = Gps{} }
func (m *Gps) String() string            { return proto.CompactTextString(m) }
func (*Gps) ProtoMessage()               {}
func (*Gps) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{119} }

func (m *Gps) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *Gps) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

// 创建房间
// @api:1005,@type:req
type CreateRoomReq struct {
	IsView           bool              `protobuf:"varint,1,opt,name=isView" json:"isView,omitempty"`
	GameType         GAME              `protobuf:"varint,2,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Type             int32             `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Base             int32             `protobuf:"varint,4,opt,name=base" json:"base,omitempty"`
	GameNum          int32             `protobuf:"varint,5,opt,name=gameNum" json:"gameNum,omitempty"`
	Rule             int32             `protobuf:"varint,6,opt,name=rule" json:"rule,omitempty"`
	ClubId           int32             `protobuf:"varint,7,opt,name=clubId" json:"clubId,omitempty"`
	Origin           ORIGIN            `protobuf:"varint,8,opt,name=origin,enum=protocol.ORIGIN" json:"origin,omitempty"`
	TickectMode      int32             `protobuf:"varint,9,opt,name=tickectMode" json:"tickectMode,omitempty"`
	StartNum         int32             `protobuf:"varint,10,opt,name=startNum" json:"startNum,omitempty"`
	BigTwoRlue       []int32           `protobuf:"varint,11,rep,packed,name=bigTwoRlue" json:"bigTwoRlue,omitempty"`
	OpenGps          bool              `protobuf:"varint,12,opt,name=openGps" json:"openGps,omitempty"`
	ExpendSpeciThing *ExpendSpeciThing `protobuf:"bytes,13,opt,name=expendSpeciThing" json:"expendSpeciThing,omitempty"`
}

func (m *CreateRoomReq) Reset()                    { *m = CreateRoomReq{} }
func (m *CreateRoomReq) String() string            { return proto.CompactTextString(m) }
func (*CreateRoomReq) ProtoMessage()               {}
func (*CreateRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{120} }

func (m *CreateRoomReq) GetIsView() bool {
	if m != nil {
		return m.IsView
	}
	return false
}

func (m *CreateRoomReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *CreateRoomReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CreateRoomReq) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *CreateRoomReq) GetGameNum() int32 {
	if m != nil {
		return m.GameNum
	}
	return 0
}

func (m *CreateRoomReq) GetRule() int32 {
	if m != nil {
		return m.Rule
	}
	return 0
}

func (m *CreateRoomReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *CreateRoomReq) GetOrigin() ORIGIN {
	if m != nil {
		return m.Origin
	}
	return ORIGIN_SELF_SELECT
}

func (m *CreateRoomReq) GetTickectMode() int32 {
	if m != nil {
		return m.TickectMode
	}
	return 0
}

func (m *CreateRoomReq) GetStartNum() int32 {
	if m != nil {
		return m.StartNum
	}
	return 0
}

func (m *CreateRoomReq) GetBigTwoRlue() []int32 {
	if m != nil {
		return m.BigTwoRlue
	}
	return nil
}

func (m *CreateRoomReq) GetOpenGps() bool {
	if m != nil {
		return m.OpenGps
	}
	return false
}

func (m *CreateRoomReq) GetExpendSpeciThing() *ExpendSpeciThing {
	if m != nil {
		return m.ExpendSpeciThing
	}
	return nil
}

// 特殊规则
type ExpendSpeciThing struct {
	// Types that are valid to be assigned to ExpendPerGame:
	//	*ExpendSpeciThing_NingYuanSpeciRule
	//	*ExpendSpeciThing_Hold
	ExpendPerGame isExpendSpeciThing_ExpendPerGame `protobuf_oneof:"expendPerGame"`
}

func (m *ExpendSpeciThing) Reset()                    { *m = ExpendSpeciThing{} }
func (m *ExpendSpeciThing) String() string            { return proto.CompactTextString(m) }
func (*ExpendSpeciThing) ProtoMessage()               {}
func (*ExpendSpeciThing) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{121} }

type isExpendSpeciThing_ExpendPerGame interface {
	isExpendSpeciThing_ExpendPerGame()
}

type ExpendSpeciThing_NingYuanSpeciRule struct {
	NingYuanSpeciRule *NingYuanSpeciRule `protobuf:"bytes,1,opt,name=ningYuanSpeciRule,oneof"`
}
type ExpendSpeciThing_Hold struct {
	Hold *Hold `protobuf:"bytes,2,opt,name=hold,oneof"`
}

func (*ExpendSpeciThing_NingYuanSpeciRule) isExpendSpeciThing_ExpendPerGame() {}
func (*ExpendSpeciThing_Hold) isExpendSpeciThing_ExpendPerGame()              {}

func (m *ExpendSpeciThing) GetExpendPerGame() isExpendSpeciThing_ExpendPerGame {
	if m != nil {
		return m.ExpendPerGame
	}
	return nil
}

func (m *ExpendSpeciThing) GetNingYuanSpeciRule() *NingYuanSpeciRule {
	if x, ok := m.GetExpendPerGame().(*ExpendSpeciThing_NingYuanSpeciRule); ok {
		return x.NingYuanSpeciRule
	}
	return nil
}

func (m *ExpendSpeciThing) GetHold() *Hold {
	if x, ok := m.GetExpendPerGame().(*ExpendSpeciThing_Hold); ok {
		return x.Hold
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExpendSpeciThing) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExpendSpeciThing_OneofMarshaler, _ExpendSpeciThing_OneofUnmarshaler, _ExpendSpeciThing_OneofSizer, []interface{}{
		(*ExpendSpeciThing_NingYuanSpeciRule)(nil),
		(*ExpendSpeciThing_Hold)(nil),
	}
}

func _ExpendSpeciThing_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExpendSpeciThing)
	// expendPerGame
	switch x := m.ExpendPerGame.(type) {
	case *ExpendSpeciThing_NingYuanSpeciRule:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NingYuanSpeciRule); err != nil {
			return err
		}
	case *ExpendSpeciThing_Hold:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hold); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ExpendSpeciThing.ExpendPerGame has unexpected type %T", x)
	}
	return nil
}

func _ExpendSpeciThing_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExpendSpeciThing)
	switch tag {
	case 1: // expendPerGame.ningYuanSpeciRule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NingYuanSpeciRule)
		err := b.DecodeMessage(msg)
		m.ExpendPerGame = &ExpendSpeciThing_NingYuanSpeciRule{msg}
		return true, err
	case 2: // expendPerGame.hold
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Hold)
		err := b.DecodeMessage(msg)
		m.ExpendPerGame = &ExpendSpeciThing_Hold{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ExpendSpeciThing_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExpendSpeciThing)
	// expendPerGame
	switch x := m.ExpendPerGame.(type) {
	case *ExpendSpeciThing_NingYuanSpeciRule:
		s := proto.Size(x.NingYuanSpeciRule)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ExpendSpeciThing_Hold:
		s := proto.Size(x.Hold)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 宁远的特殊规则
type NingYuanSpeciRule struct {
	AddBeiStrip int32 `protobuf:"varint,1,opt,name=addBeiStrip" json:"addBeiStrip,omitempty"`
	AddFenStrip int32 `protobuf:"varint,2,opt,name=addFenStrip" json:"addFenStrip,omitempty"`
	AddFen      int32 `protobuf:"varint,3,opt,name=addFen" json:"addFen,omitempty"`
}

func (m *NingYuanSpeciRule) Reset()                    { *m = NingYuanSpeciRule{} }
func (m *NingYuanSpeciRule) String() string            { return proto.CompactTextString(m) }
func (*NingYuanSpeciRule) ProtoMessage()               {}
func (*NingYuanSpeciRule) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{122} }

func (m *NingYuanSpeciRule) GetAddBeiStrip() int32 {
	if m != nil {
		return m.AddBeiStrip
	}
	return 0
}

func (m *NingYuanSpeciRule) GetAddFenStrip() int32 {
	if m != nil {
		return m.AddFenStrip
	}
	return 0
}

func (m *NingYuanSpeciRule) GetAddFen() int32 {
	if m != nil {
		return m.AddFen
	}
	return 0
}

// 保留字段
type Hold struct {
}

func (m *Hold) Reset()                    { *m = Hold{} }
func (m *Hold) String() string            { return proto.CompactTextString(m) }
func (*Hold) ProtoMessage()               {}
func (*Hold) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{123} }

type RoomConfig struct {
	StartScore         int32   `protobuf:"varint,1,opt,name=StartScore" json:"StartScore,omitempty"`
	KickScore          int32   `protobuf:"varint,2,opt,name=KickScore" json:"KickScore,omitempty"`
	BottomScore        int32   `protobuf:"varint,3,opt,name=BottomScore" json:"BottomScore,omitempty"`
	GiveAwayStartScore int32   `protobuf:"varint,4,opt,name=GiveAwayStartScore" json:"GiveAwayStartScore,omitempty"`
	IsFixed            int32   `protobuf:"varint,5,opt,name=IsFixed" json:"IsFixed,omitempty"`
	IsScale            int32   `protobuf:"varint,6,opt,name=IsScale" json:"IsScale,omitempty"`
	FixedScore         int32   `protobuf:"varint,7,opt,name=FixedScore" json:"FixedScore,omitempty"`
	ScaleScore         float32 `protobuf:"fixed32,8,opt,name=ScaleScore" json:"ScaleScore,omitempty"`
	GiveOne            int32   `protobuf:"varint,9,opt,name=GiveOne" json:"GiveOne,omitempty"`
	GiveTwo            int32   `protobuf:"varint,10,opt,name=GiveTwo" json:"GiveTwo,omitempty"`
	GiveThree          int32   `protobuf:"varint,11,opt,name=GiveThree" json:"GiveThree,omitempty"`
	GuaranteedOne      int32   `protobuf:"varint,12,opt,name=GuaranteedOne" json:"GuaranteedOne,omitempty"`
	GuaranteedTwo      int32   `protobuf:"varint,13,opt,name=GuaranteedTwo" json:"GuaranteedTwo,omitempty"`
	GuaranteedThree    int32   `protobuf:"varint,14,opt,name=GuaranteedThree" json:"GuaranteedThree,omitempty"`
}

func (m *RoomConfig) Reset()                    { *m = RoomConfig{} }
func (m *RoomConfig) String() string            { return proto.CompactTextString(m) }
func (*RoomConfig) ProtoMessage()               {}
func (*RoomConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{124} }

func (m *RoomConfig) GetStartScore() int32 {
	if m != nil {
		return m.StartScore
	}
	return 0
}

func (m *RoomConfig) GetKickScore() int32 {
	if m != nil {
		return m.KickScore
	}
	return 0
}

func (m *RoomConfig) GetBottomScore() int32 {
	if m != nil {
		return m.BottomScore
	}
	return 0
}

func (m *RoomConfig) GetGiveAwayStartScore() int32 {
	if m != nil {
		return m.GiveAwayStartScore
	}
	return 0
}

func (m *RoomConfig) GetIsFixed() int32 {
	if m != nil {
		return m.IsFixed
	}
	return 0
}

func (m *RoomConfig) GetIsScale() int32 {
	if m != nil {
		return m.IsScale
	}
	return 0
}

func (m *RoomConfig) GetFixedScore() int32 {
	if m != nil {
		return m.FixedScore
	}
	return 0
}

func (m *RoomConfig) GetScaleScore() float32 {
	if m != nil {
		return m.ScaleScore
	}
	return 0
}

func (m *RoomConfig) GetGiveOne() int32 {
	if m != nil {
		return m.GiveOne
	}
	return 0
}

func (m *RoomConfig) GetGiveTwo() int32 {
	if m != nil {
		return m.GiveTwo
	}
	return 0
}

func (m *RoomConfig) GetGiveThree() int32 {
	if m != nil {
		return m.GiveThree
	}
	return 0
}

func (m *RoomConfig) GetGuaranteedOne() int32 {
	if m != nil {
		return m.GuaranteedOne
	}
	return 0
}

func (m *RoomConfig) GetGuaranteedTwo() int32 {
	if m != nil {
		return m.GuaranteedTwo
	}
	return 0
}

func (m *RoomConfig) GetGuaranteedThree() int32 {
	if m != nil {
		return m.GuaranteedThree
	}
	return 0
}

// @api:1005,@type:resp
type CreateRoomResp struct {
	Room *RoomInfo `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	One  *Player   `protobuf:"bytes,2,opt,name=one" json:"one,omitempty"`
}

func (m *CreateRoomResp) Reset()                    { *m = CreateRoomResp{} }
func (m *CreateRoomResp) String() string            { return proto.CompactTextString(m) }
func (*CreateRoomResp) ProtoMessage()               {}
func (*CreateRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{125} }

func (m *CreateRoomResp) GetRoom() *RoomInfo {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *CreateRoomResp) GetOne() *Player {
	if m != nil {
		return m.One
	}
	return nil
}

// 加入房间
// @api:1006,@type:req
type JoinRoomReq struct {
	GsId    int32 `protobuf:"varint,1,opt,name=gsId" json:"gsId,omitempty"`
	RoomId  int32 `protobuf:"varint,2,opt,name=roomId" json:"roomId,omitempty"`
	OpenGps bool  `protobuf:"varint,3,opt,name=openGps" json:"openGps,omitempty"`
}

func (m *JoinRoomReq) Reset()                    { *m = JoinRoomReq{} }
func (m *JoinRoomReq) String() string            { return proto.CompactTextString(m) }
func (*JoinRoomReq) ProtoMessage()               {}
func (*JoinRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{126} }

func (m *JoinRoomReq) GetGsId() int32 {
	if m != nil {
		return m.GsId
	}
	return 0
}

func (m *JoinRoomReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *JoinRoomReq) GetOpenGps() bool {
	if m != nil {
		return m.OpenGps
	}
	return false
}

// @api:1006,@type:resp
type JoinRoomResp struct {
	Room   *RoomInfo `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	One    *Player   `protobuf:"bytes,2,opt,name=one" json:"one,omitempty"`
	Others []*Player `protobuf:"bytes,3,rep,name=others" json:"others,omitempty"`
}

func (m *JoinRoomResp) Reset()                    { *m = JoinRoomResp{} }
func (m *JoinRoomResp) String() string            { return proto.CompactTextString(m) }
func (*JoinRoomResp) ProtoMessage()               {}
func (*JoinRoomResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{127} }

func (m *JoinRoomResp) GetRoom() *RoomInfo {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *JoinRoomResp) GetOne() *Player {
	if m != nil {
		return m.One
	}
	return nil
}

func (m *JoinRoomResp) GetOthers() []*Player {
	if m != nil {
		return m.Others
	}
	return nil
}

// 获取房间以及房间玩家的数据
// @api:1020,@type:req
type GetRoomDataReq struct {
}

func (m *GetRoomDataReq) Reset()                    { *m = GetRoomDataReq{} }
func (m *GetRoomDataReq) String() string            { return proto.CompactTextString(m) }
func (*GetRoomDataReq) ProtoMessage()               {}
func (*GetRoomDataReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{128} }

// @api:1020,@type:resp
type GetRoomDataResp struct {
	Room   *RoomInfo `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	One    *Player   `protobuf:"bytes,2,opt,name=one" json:"one,omitempty"`
	Others []*Player `protobuf:"bytes,3,rep,name=others" json:"others,omitempty"`
}

func (m *GetRoomDataResp) Reset()                    { *m = GetRoomDataResp{} }
func (m *GetRoomDataResp) String() string            { return proto.CompactTextString(m) }
func (*GetRoomDataResp) ProtoMessage()               {}
func (*GetRoomDataResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{129} }

func (m *GetRoomDataResp) GetRoom() *RoomInfo {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *GetRoomDataResp) GetOne() *Player {
	if m != nil {
		return m.One
	}
	return nil
}

func (m *GetRoomDataResp) GetOthers() []*Player {
	if m != nil {
		return m.Others
	}
	return nil
}

// 骂街
// @api:1018,@type:req
type TalkToAllReq struct {
	Id      int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type    int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Target  int64  `protobuf:"varint,4,opt,name=target" json:"target,omitempty"`
}

func (m *TalkToAllReq) Reset()                    { *m = TalkToAllReq{} }
func (m *TalkToAllReq) String() string            { return proto.CompactTextString(m) }
func (*TalkToAllReq) ProtoMessage()               {}
func (*TalkToAllReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{130} }

func (m *TalkToAllReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TalkToAllReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TalkToAllReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *TalkToAllReq) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

// @api:1018,@type:resp
type TalkToAllResp struct {
	Uid     int64  `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Id      int32  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Type    int32  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	Target  int64  `protobuf:"varint,5,opt,name=target" json:"target,omitempty"`
}

func (m *TalkToAllResp) Reset()                    { *m = TalkToAllResp{} }
func (m *TalkToAllResp) String() string            { return proto.CompactTextString(m) }
func (*TalkToAllResp) ProtoMessage()               {}
func (*TalkToAllResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{131} }

func (m *TalkToAllResp) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *TalkToAllResp) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TalkToAllResp) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TalkToAllResp) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *TalkToAllResp) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

// 退出房间
// @api:1007,@type:req
type QuitRoomReq struct {
}

func (m *QuitRoomReq) Reset()                    { *m = QuitRoomReq{} }
func (m *QuitRoomReq) String() string            { return proto.CompactTextString(m) }
func (*QuitRoomReq) ProtoMessage()               {}
func (*QuitRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{132} }

// 房间列表通知
// @api:1009,@type:resp
type RoomListNtf struct {
	GameType GAME        `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	ClubId   int32       `protobuf:"varint,2,opt,name=clubId" json:"clubId,omitempty"`
	List     []*RoomInfo `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
}

func (m *RoomListNtf) Reset()                    { *m = RoomListNtf{} }
func (m *RoomListNtf) String() string            { return proto.CompactTextString(m) }
func (*RoomListNtf) ProtoMessage()               {}
func (*RoomListNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{133} }

func (m *RoomListNtf) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *RoomListNtf) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *RoomListNtf) GetList() []*RoomInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 有人加入房间
// @api:1013,@type:resp
type JoinRoomNtf struct {
	Other *Player `protobuf:"bytes,1,opt,name=other" json:"other,omitempty"`
}

func (m *JoinRoomNtf) Reset()                    { *m = JoinRoomNtf{} }
func (m *JoinRoomNtf) String() string            { return proto.CompactTextString(m) }
func (*JoinRoomNtf) ProtoMessage()               {}
func (*JoinRoomNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{134} }

func (m *JoinRoomNtf) GetOther() *Player {
	if m != nil {
		return m.Other
	}
	return nil
}

// 有人离开房间
// @api:1014,@type:resp
type QuitRoomNtf struct {
	Uid   int64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Error ERROR `protobuf:"varint,2,opt,name=error,enum=protocol.ERROR" json:"error,omitempty"`
}

func (m *QuitRoomNtf) Reset()                    { *m = QuitRoomNtf{} }
func (m *QuitRoomNtf) String() string            { return proto.CompactTextString(m) }
func (*QuitRoomNtf) ProtoMessage()               {}
func (*QuitRoomNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{135} }

func (m *QuitRoomNtf) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *QuitRoomNtf) GetError() ERROR {
	if m != nil {
		return m.Error
	}
	return ERROR__
}

// 匹配
// @api:1008,@type:req
type MatchReq struct {
	GameType  GAME  `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	MatchType int32 `protobuf:"varint,2,opt,name=matchType" json:"matchType,omitempty"`
}

func (m *MatchReq) Reset()                    { *m = MatchReq{} }
func (m *MatchReq) String() string            { return proto.CompactTextString(m) }
func (*MatchReq) ProtoMessage()               {}
func (*MatchReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{136} }

func (m *MatchReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *MatchReq) GetMatchType() int32 {
	if m != nil {
		return m.MatchType
	}
	return 0
}

// @api:1008,@type:resp
type MatchResp struct {
	Room   *RoomInfo `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	One    *Player   `protobuf:"bytes,2,opt,name=one" json:"one,omitempty"`
	Others []*Player `protobuf:"bytes,3,rep,name=others" json:"others,omitempty"`
}

func (m *MatchResp) Reset()                    { *m = MatchResp{} }
func (m *MatchResp) String() string            { return proto.CompactTextString(m) }
func (*MatchResp) ProtoMessage()               {}
func (*MatchResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{137} }

func (m *MatchResp) GetRoom() *RoomInfo {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *MatchResp) GetOne() *Player {
	if m != nil {
		return m.One
	}
	return nil
}

func (m *MatchResp) GetOthers() []*Player {
	if m != nil {
		return m.Others
	}
	return nil
}

// 退出
// @api:2003,@type:req
type LogoutReq struct {
}

func (m *LogoutReq) Reset()                    { *m = LogoutReq{} }
func (m *LogoutReq) String() string            { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()               {}
func (*LogoutReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{138} }

// @api:2003,@type:resp
type LogoutResp struct {
}

func (m *LogoutResp) Reset()                    { *m = LogoutResp{} }
func (m *LogoutResp) String() string            { return proto.CompactTextString(m) }
func (*LogoutResp) ProtoMessage()               {}
func (*LogoutResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{139} }

// 通用回复
// @api:2001,@type:resp
type CommonResp struct {
	Api PROTO `protobuf:"varint,1,opt,name=api,enum=protocol.PROTO" json:"api,omitempty"`
	Err ERROR `protobuf:"varint,2,opt,name=err,enum=protocol.ERROR" json:"err,omitempty"`
}

func (m *CommonResp) Reset()                    { *m = CommonResp{} }
func (m *CommonResp) String() string            { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()               {}
func (*CommonResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{140} }

func (m *CommonResp) GetApi() PROTO {
	if m != nil {
		return m.Api
	}
	return PROTO_TEST_GATE
}

func (m *CommonResp) GetErr() ERROR {
	if m != nil {
		return m.Err
	}
	return ERROR__
}

// 心跳包
// @api:2000,@type:req
type HeartReq struct {
}

func (m *HeartReq) Reset()                    { *m = HeartReq{} }
func (m *HeartReq) String() string            { return proto.CompactTextString(m) }
func (*HeartReq) ProtoMessage()               {}
func (*HeartReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{141} }

// @api:2000,@type:resp
type HeartResp struct {
}

func (m *HeartResp) Reset()                    { *m = HeartResp{} }
func (m *HeartResp) String() string            { return proto.CompactTextString(m) }
func (*HeartResp) ProtoMessage()               {}
func (*HeartResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{142} }

// 绑定
// @api:2030,@type:req
type BindReq struct {
	Platform     PLATFORM `protobuf:"varint,1,opt,name=platform,enum=protocol.PLATFORM" json:"platform,omitempty"`
	Code         string   `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Account      string   `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	Pwd          string   `protobuf:"bytes,4,opt,name=pwd" json:"pwd,omitempty"`
	Token        string   `protobuf:"bytes,5,opt,name=token" json:"token,omitempty"`
	RefreshToken string   `protobuf:"bytes,6,opt,name=refreshToken" json:"refreshToken,omitempty"`
}

func (m *BindReq) Reset()                    { *m = BindReq{} }
func (m *BindReq) String() string            { return proto.CompactTextString(m) }
func (*BindReq) ProtoMessage()               {}
func (*BindReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{143} }

func (m *BindReq) GetPlatform() PLATFORM {
	if m != nil {
		return m.Platform
	}
	return PLATFORM_PLATFORM_UNUSED
}

func (m *BindReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *BindReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *BindReq) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

func (m *BindReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *BindReq) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

// 货币更新
// @api:1012,@type:resp
type MoneyUpdateNtf struct {
	List []*MoneyInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *MoneyUpdateNtf) Reset()                    { *m = MoneyUpdateNtf{} }
func (m *MoneyUpdateNtf) String() string            { return proto.CompactTextString(m) }
func (*MoneyUpdateNtf) ProtoMessage()               {}
func (*MoneyUpdateNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{144} }

func (m *MoneyUpdateNtf) GetList() []*MoneyInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// @api:1021,@type:req
type GetPlayerScoreReq struct {
}

func (m *GetPlayerScoreReq) Reset()                    { *m = GetPlayerScoreReq{} }
func (m *GetPlayerScoreReq) String() string            { return proto.CompactTextString(m) }
func (*GetPlayerScoreReq) ProtoMessage()               {}
func (*GetPlayerScoreReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{145} }

// @api:1021,@type:resp
type GetPlayerScoreResp struct {
	List []*ScoreInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *GetPlayerScoreResp) Reset()                    { *m = GetPlayerScoreResp{} }
func (m *GetPlayerScoreResp) String() string            { return proto.CompactTextString(m) }
func (*GetPlayerScoreResp) ProtoMessage()               {}
func (*GetPlayerScoreResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{146} }

func (m *GetPlayerScoreResp) GetList() []*ScoreInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type ScoreInfo struct {
	Values []int32 `protobuf:"varint,1,rep,packed,name=values" json:"values,omitempty"`
	Total  int32   `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	Uid    int64   `protobuf:"varint,3,opt,name=uid" json:"uid,omitempty"`
	Name   string  `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Icon   string  `protobuf:"bytes,5,opt,name=icon" json:"icon,omitempty"`
}

func (m *ScoreInfo) Reset()                    { *m = ScoreInfo{} }
func (m *ScoreInfo) String() string            { return proto.CompactTextString(m) }
func (*ScoreInfo) ProtoMessage()               {}
func (*ScoreInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{147} }

func (m *ScoreInfo) GetValues() []int32 {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *ScoreInfo) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ScoreInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ScoreInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScoreInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

// 货币信息
type MoneyInfo struct {
	Type   int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Value  int64  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Origin ORIGIN `protobuf:"varint,3,opt,name=origin,enum=protocol.ORIGIN" json:"origin,omitempty"`
}

func (m *MoneyInfo) Reset()                    { *m = MoneyInfo{} }
func (m *MoneyInfo) String() string            { return proto.CompactTextString(m) }
func (*MoneyInfo) ProtoMessage()               {}
func (*MoneyInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{148} }

func (m *MoneyInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MoneyInfo) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *MoneyInfo) GetOrigin() ORIGIN {
	if m != nil {
		return m.Origin
	}
	return ORIGIN_SELF_SELECT
}

// 游戏内货币更新
// @api:1019,@type:resp
type GameMoneyUpdateNtf struct {
	Value int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Uid   int64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *GameMoneyUpdateNtf) Reset()                    { *m = GameMoneyUpdateNtf{} }
func (m *GameMoneyUpdateNtf) String() string            { return proto.CompactTextString(m) }
func (*GameMoneyUpdateNtf) ProtoMessage()               {}
func (*GameMoneyUpdateNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{149} }

func (m *GameMoneyUpdateNtf) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *GameMoneyUpdateNtf) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// 玩家分享总人数获赠的金币
// @api:1022,@type:resp
type ShareNumNtf struct {
	Total   int32 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Achieve int32 `protobuf:"varint,2,opt,name=achieve" json:"achieve,omitempty"`
	CanOpen int32 `protobuf:"varint,3,opt,name=canOpen" json:"canOpen,omitempty"`
}

func (m *ShareNumNtf) Reset()                    { *m = ShareNumNtf{} }
func (m *ShareNumNtf) String() string            { return proto.CompactTextString(m) }
func (*ShareNumNtf) ProtoMessage()               {}
func (*ShareNumNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{150} }

func (m *ShareNumNtf) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ShareNumNtf) GetAchieve() int32 {
	if m != nil {
		return m.Achieve
	}
	return 0
}

func (m *ShareNumNtf) GetCanOpen() int32 {
	if m != nil {
		return m.CanOpen
	}
	return 0
}

// 获取比赛场玩家列表
type PlayFieldClubMemberReq struct {
	ClubId int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
}

func (m *PlayFieldClubMemberReq) Reset()                    { *m = PlayFieldClubMemberReq{} }
func (m *PlayFieldClubMemberReq) String() string            { return proto.CompactTextString(m) }
func (*PlayFieldClubMemberReq) ProtoMessage()               {}
func (*PlayFieldClubMemberReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{151} }

func (m *PlayFieldClubMemberReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *PlayFieldClubMemberReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type PlayFieldClubMemberResp struct {
	ClubId int32                 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	List   []*ClubMemberInfoTree `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *PlayFieldClubMemberResp) Reset()                    { *m = PlayFieldClubMemberResp{} }
func (m *PlayFieldClubMemberResp) String() string            { return proto.CompactTextString(m) }
func (*PlayFieldClubMemberResp) ProtoMessage()               {}
func (*PlayFieldClubMemberResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{152} }

func (m *PlayFieldClubMemberResp) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *PlayFieldClubMemberResp) GetList() []*ClubMemberInfoTree {
	if m != nil {
		return m.List
	}
	return nil
}

type ClubMemberInfoTree struct {
	Title      CLUB_TITLE            `protobuf:"varint,1,opt,name=title,enum=protocol.CLUB_TITLE" json:"title,omitempty"`
	Id         int64                 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	SuperiorId int64                 `protobuf:"varint,3,opt,name=superiorId" json:"superiorId,omitempty"`
	Integral   int64                 `protobuf:"varint,4,opt,name=integral" json:"integral,omitempty"`
	Grade      int32                 `protobuf:"varint,5,opt,name=grade" json:"grade,omitempty"`
	Proportion float32               `protobuf:"fixed32,6,opt,name=proportion" json:"proportion,omitempty"`
	List       []*ClubMemberInfoTree `protobuf:"bytes,7,rep,name=list" json:"list,omitempty"`
}

func (m *ClubMemberInfoTree) Reset()                    { *m = ClubMemberInfoTree{} }
func (m *ClubMemberInfoTree) String() string            { return proto.CompactTextString(m) }
func (*ClubMemberInfoTree) ProtoMessage()               {}
func (*ClubMemberInfoTree) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{153} }

func (m *ClubMemberInfoTree) GetTitle() CLUB_TITLE {
	if m != nil {
		return m.Title
	}
	return CLUB_TITLE_CLUB_TITLE_MEMBER
}

func (m *ClubMemberInfoTree) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ClubMemberInfoTree) GetSuperiorId() int64 {
	if m != nil {
		return m.SuperiorId
	}
	return 0
}

func (m *ClubMemberInfoTree) GetIntegral() int64 {
	if m != nil {
		return m.Integral
	}
	return 0
}

func (m *ClubMemberInfoTree) GetGrade() int32 {
	if m != nil {
		return m.Grade
	}
	return 0
}

func (m *ClubMemberInfoTree) GetProportion() float32 {
	if m != nil {
		return m.Proportion
	}
	return 0
}

func (m *ClubMemberInfoTree) GetList() []*ClubMemberInfoTree {
	if m != nil {
		return m.List
	}
	return nil
}

// 修改分成比例
type SetProportionReq struct {
	ClubId     int32   `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	UserId     int64   `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Target     int64   `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
	Proportion float32 `protobuf:"fixed32,4,opt,name=proportion" json:"proportion,omitempty"`
}

func (m *SetProportionReq) Reset()                    { *m = SetProportionReq{} }
func (m *SetProportionReq) String() string            { return proto.CompactTextString(m) }
func (*SetProportionReq) ProtoMessage()               {}
func (*SetProportionReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{154} }

func (m *SetProportionReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *SetProportionReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SetProportionReq) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *SetProportionReq) GetProportion() float32 {
	if m != nil {
		return m.Proportion
	}
	return 0
}

// 修改积分
type SetIntegralReq struct {
	ClubId   int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	UserId   int64 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Target   int64 `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
	Integral int64 `protobuf:"varint,4,opt,name=integral" json:"integral,omitempty"`
}

func (m *SetIntegralReq) Reset()                    { *m = SetIntegralReq{} }
func (m *SetIntegralReq) String() string            { return proto.CompactTextString(m) }
func (*SetIntegralReq) ProtoMessage()               {}
func (*SetIntegralReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{155} }

func (m *SetIntegralReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *SetIntegralReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SetIntegralReq) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *SetIntegralReq) GetIntegral() int64 {
	if m != nil {
		return m.Integral
	}
	return 0
}

// 修改茶馆分成模式
type SetClubModeReq struct {
	ClubId        int32 `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	SplitModeType int32 `protobuf:"varint,2,opt,name=splitModeType" json:"splitModeType,omitempty"`
	UserId        int64 `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
}

func (m *SetClubModeReq) Reset()                    { *m = SetClubModeReq{} }
func (m *SetClubModeReq) String() string            { return proto.CompactTextString(m) }
func (*SetClubModeReq) ProtoMessage()               {}
func (*SetClubModeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{156} }

func (m *SetClubModeReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *SetClubModeReq) GetSplitModeType() int32 {
	if m != nil {
		return m.SplitModeType
	}
	return 0
}

func (m *SetClubModeReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 比赛场设置权限
type PlayFieldPermissionReq struct {
	ClubId   int32  `protobuf:"varint,1,opt,name=clubId" json:"clubId,omitempty"`
	UserId   int64  `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Target   int64  `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
	NewLevel uint32 `protobuf:"varint,4,opt,name=newLevel" json:"newLevel,omitempty"`
}

func (m *PlayFieldPermissionReq) Reset()                    { *m = PlayFieldPermissionReq{} }
func (m *PlayFieldPermissionReq) String() string            { return proto.CompactTextString(m) }
func (*PlayFieldPermissionReq) ProtoMessage()               {}
func (*PlayFieldPermissionReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{157} }

func (m *PlayFieldPermissionReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *PlayFieldPermissionReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PlayFieldPermissionReq) GetTarget() int64 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *PlayFieldPermissionReq) GetNewLevel() uint32 {
	if m != nil {
		return m.NewLevel
	}
	return 0
}

// 绑定实时语音ID
// @api:1023,@type:req
type BindPlayerGVoiceIDReq struct {
	GVoiceId int32 `protobuf:"varint,1,opt,name=gVoiceId" json:"gVoiceId,omitempty"`
}

func (m *BindPlayerGVoiceIDReq) Reset()                    { *m = BindPlayerGVoiceIDReq{} }
func (m *BindPlayerGVoiceIDReq) String() string            { return proto.CompactTextString(m) }
func (*BindPlayerGVoiceIDReq) ProtoMessage()               {}
func (*BindPlayerGVoiceIDReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{158} }

func (m *BindPlayerGVoiceIDReq) GetGVoiceId() int32 {
	if m != nil {
		return m.GVoiceId
	}
	return 0
}

// @api:1023,@type:resp
type BindPlayerGVoiceIDResp struct {
	Uid      int64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	GVoiceId int32 `protobuf:"varint,2,opt,name=gVoiceId" json:"gVoiceId,omitempty"`
}

func (m *BindPlayerGVoiceIDResp) Reset()                    { *m = BindPlayerGVoiceIDResp{} }
func (m *BindPlayerGVoiceIDResp) String() string            { return proto.CompactTextString(m) }
func (*BindPlayerGVoiceIDResp) ProtoMessage()               {}
func (*BindPlayerGVoiceIDResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{159} }

func (m *BindPlayerGVoiceIDResp) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *BindPlayerGVoiceIDResp) GetGVoiceId() int32 {
	if m != nil {
		return m.GVoiceId
	}
	return 0
}

// @api:1029,@type:req
type SetGpsInfoReq struct {
	Gps *Gps  `protobuf:"bytes,1,opt,name=gps" json:"gps,omitempty"`
	Uid int64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *SetGpsInfoReq) Reset()                    { *m = SetGpsInfoReq{} }
func (m *SetGpsInfoReq) String() string            { return proto.CompactTextString(m) }
func (*SetGpsInfoReq) ProtoMessage()               {}
func (*SetGpsInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{160} }

func (m *SetGpsInfoReq) GetGps() *Gps {
	if m != nil {
		return m.Gps
	}
	return nil
}

func (m *SetGpsInfoReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// @api:1029,@type:resp
type SetGpsInfoResp struct {
	Gps *Gps  `protobuf:"bytes,1,opt,name=gps" json:"gps,omitempty"`
	Uid int64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *SetGpsInfoResp) Reset()                    { *m = SetGpsInfoResp{} }
func (m *SetGpsInfoResp) String() string            { return proto.CompactTextString(m) }
func (*SetGpsInfoResp) ProtoMessage()               {}
func (*SetGpsInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{161} }

func (m *SetGpsInfoResp) GetGps() *Gps {
	if m != nil {
		return m.Gps
	}
	return nil
}

func (m *SetGpsInfoResp) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// @api:1032,@type:req
type GetClubMaxWinReq struct {
	GameType    GAME  `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Uid         int64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	ClubId      int32 `protobuf:"varint,3,opt,name=clubId" json:"clubId,omitempty"`
	Date        int64 `protobuf:"varint,4,opt,name=date" json:"date,omitempty"`
	Page        int32 `protobuf:"varint,5,opt,name=page" json:"page,omitempty"`
	PayCardType int32 `protobuf:"varint,6,opt,name=payCardType" json:"payCardType,omitempty"`
	Origin      int32 `protobuf:"varint,7,opt,name=origin" json:"origin,omitempty"`
}

func (m *GetClubMaxWinReq) Reset()                    { *m = GetClubMaxWinReq{} }
func (m *GetClubMaxWinReq) String() string            { return proto.CompactTextString(m) }
func (*GetClubMaxWinReq) ProtoMessage()               {}
func (*GetClubMaxWinReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{162} }

func (m *GetClubMaxWinReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *GetClubMaxWinReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetClubMaxWinReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *GetClubMaxWinReq) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *GetClubMaxWinReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetClubMaxWinReq) GetPayCardType() int32 {
	if m != nil {
		return m.PayCardType
	}
	return 0
}

func (m *GetClubMaxWinReq) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

// @api:1032,@type:resp
type GetClubMaxWinResp struct {
	List           []*ClubMaxWinInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	CurPage        int32             `protobuf:"varint,2,opt,name=curPage" json:"curPage,omitempty"`
	TotoalPage     int32             `protobuf:"varint,3,opt,name=totoalPage" json:"totoalPage,omitempty"`
	AllWinCn       int32             `protobuf:"varint,4,opt,name=allWinCn" json:"allWinCn,omitempty"`
	AllWinPoint    int32             `protobuf:"varint,5,opt,name=allWinPoint" json:"allWinPoint,omitempty"`
	AllGames       int32             `protobuf:"varint,6,opt,name=allGames" json:"allGames,omitempty"`
	AllPerfetGames int32             `protobuf:"varint,7,opt,name=allPerfetGames" json:"allPerfetGames,omitempty"`
	Timesteamp     int64             `protobuf:"varint,8,opt,name=timesteamp" json:"timesteamp,omitempty"`
}

func (m *GetClubMaxWinResp) Reset()                    { *m = GetClubMaxWinResp{} }
func (m *GetClubMaxWinResp) String() string            { return proto.CompactTextString(m) }
func (*GetClubMaxWinResp) ProtoMessage()               {}
func (*GetClubMaxWinResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{163} }

func (m *GetClubMaxWinResp) GetList() []*ClubMaxWinInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GetClubMaxWinResp) GetCurPage() int32 {
	if m != nil {
		return m.CurPage
	}
	return 0
}

func (m *GetClubMaxWinResp) GetTotoalPage() int32 {
	if m != nil {
		return m.TotoalPage
	}
	return 0
}

func (m *GetClubMaxWinResp) GetAllWinCn() int32 {
	if m != nil {
		return m.AllWinCn
	}
	return 0
}

func (m *GetClubMaxWinResp) GetAllWinPoint() int32 {
	if m != nil {
		return m.AllWinPoint
	}
	return 0
}

func (m *GetClubMaxWinResp) GetAllGames() int32 {
	if m != nil {
		return m.AllGames
	}
	return 0
}

func (m *GetClubMaxWinResp) GetAllPerfetGames() int32 {
	if m != nil {
		return m.AllPerfetGames
	}
	return 0
}

func (m *GetClubMaxWinResp) GetTimesteamp() int64 {
	if m != nil {
		return m.Timesteamp
	}
	return 0
}

type ClubMaxWinInfo struct {
	Game        string `protobuf:"bytes,1,opt,name=game" json:"game,omitempty"`
	Uid         int64  `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	MaxCn       int32  `protobuf:"varint,4,opt,name=maxCn" json:"maxCn,omitempty"`
	Win         int32  `protobuf:"varint,5,opt,name=win" json:"win,omitempty"`
	RoomType    string `protobuf:"bytes,6,opt,name=roomType" json:"roomType,omitempty"`
	TotalGames  int32  `protobuf:"varint,7,opt,name=totalGames" json:"totalGames,omitempty"`
	PerfetGames int32  `protobuf:"varint,8,opt,name=perfetGames" json:"perfetGames,omitempty"`
	GameType    int32  `protobuf:"varint,9,opt,name=gameType" json:"gameType,omitempty"`
	PayCardType int32  `protobuf:"varint,10,opt,name=payCardType" json:"payCardType,omitempty"`
	Origin      int32  `protobuf:"varint,11,opt,name=origin" json:"origin,omitempty"`
}

func (m *ClubMaxWinInfo) Reset()                    { *m = ClubMaxWinInfo{} }
func (m *ClubMaxWinInfo) String() string            { return proto.CompactTextString(m) }
func (*ClubMaxWinInfo) ProtoMessage()               {}
func (*ClubMaxWinInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{164} }

func (m *ClubMaxWinInfo) GetGame() string {
	if m != nil {
		return m.Game
	}
	return ""
}

func (m *ClubMaxWinInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ClubMaxWinInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClubMaxWinInfo) GetMaxCn() int32 {
	if m != nil {
		return m.MaxCn
	}
	return 0
}

func (m *ClubMaxWinInfo) GetWin() int32 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *ClubMaxWinInfo) GetRoomType() string {
	if m != nil {
		return m.RoomType
	}
	return ""
}

func (m *ClubMaxWinInfo) GetTotalGames() int32 {
	if m != nil {
		return m.TotalGames
	}
	return 0
}

func (m *ClubMaxWinInfo) GetPerfetGames() int32 {
	if m != nil {
		return m.PerfetGames
	}
	return 0
}

func (m *ClubMaxWinInfo) GetGameType() int32 {
	if m != nil {
		return m.GameType
	}
	return 0
}

func (m *ClubMaxWinInfo) GetPayCardType() int32 {
	if m != nil {
		return m.PayCardType
	}
	return 0
}

func (m *ClubMaxWinInfo) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

// @api:1033,@type:req
type GetClubMaxFightReq struct {
	GameType GAME   `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Uid      int64  `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
	ClubId   int32  `protobuf:"varint,3,opt,name=clubId" json:"clubId,omitempty"`
	Date     int64  `protobuf:"varint,4,opt,name=date" json:"date,omitempty"`
	Page     int32  `protobuf:"varint,5,opt,name=page" json:"page,omitempty"`
	RoomType string `protobuf:"bytes,6,opt,name=roomType" json:"roomType,omitempty"`
	Origin   int32  `protobuf:"varint,7,opt,name=origin" json:"origin,omitempty"`
}

func (m *GetClubMaxFightReq) Reset()                    { *m = GetClubMaxFightReq{} }
func (m *GetClubMaxFightReq) String() string            { return proto.CompactTextString(m) }
func (*GetClubMaxFightReq) ProtoMessage()               {}
func (*GetClubMaxFightReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{165} }

func (m *GetClubMaxFightReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *GetClubMaxFightReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetClubMaxFightReq) GetClubId() int32 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *GetClubMaxFightReq) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *GetClubMaxFightReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetClubMaxFightReq) GetRoomType() string {
	if m != nil {
		return m.RoomType
	}
	return ""
}

func (m *GetClubMaxFightReq) GetOrigin() int32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

// @api:1033,@type:resp
type GetClubMaxFightResp struct {
	List       []*FightGradeInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	CurPage    int32             `protobuf:"varint,2,opt,name=curPage" json:"curPage,omitempty"`
	TotoalPage int32             `protobuf:"varint,3,opt,name=totoalPage" json:"totoalPage,omitempty"`
}

func (m *GetClubMaxFightResp) Reset()                    { *m = GetClubMaxFightResp{} }
func (m *GetClubMaxFightResp) String() string            { return proto.CompactTextString(m) }
func (*GetClubMaxFightResp) ProtoMessage()               {}
func (*GetClubMaxFightResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{166} }

func (m *GetClubMaxFightResp) GetList() []*FightGradeInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *GetClubMaxFightResp) GetCurPage() int32 {
	if m != nil {
		return m.CurPage
	}
	return 0
}

func (m *GetClubMaxFightResp) GetTotoalPage() int32 {
	if m != nil {
		return m.TotoalPage
	}
	return 0
}

// @api:1034,@type:req
type GetRoomInfoReq struct {
	RoomId int32 `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
}

func (m *GetRoomInfoReq) Reset()                    { *m = GetRoomInfoReq{} }
func (m *GetRoomInfoReq) String() string            { return proto.CompactTextString(m) }
func (*GetRoomInfoReq) ProtoMessage()               {}
func (*GetRoomInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{167} }

func (m *GetRoomInfoReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

// @api:1034,@type:resp
type GetRoomInfoResp struct {
	Rules []int32 `protobuf:"varint,1,rep,packed,name=rules" json:"rules,omitempty"`
}

func (m *GetRoomInfoResp) Reset()                    { *m = GetRoomInfoResp{} }
func (m *GetRoomInfoResp) String() string            { return proto.CompactTextString(m) }
func (*GetRoomInfoResp) ProtoMessage()               {}
func (*GetRoomInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{168} }

func (m *GetRoomInfoResp) GetRules() []int32 {
	if m != nil {
		return m.Rules
	}
	return nil
}

// 牛牛:
// 0-wait(等待) 1-ready(准备) 2-deal1(发牌) 3-qiangzhuang(抢庄) 4-随机庄家 5-xiazhu(下注) 6-deal2(发牌2) 7-kaipai(开牌) 8-展示结果
// 诈金花:
// 0-wait(等待) 1-ready(准备) 2-强制下注 3-发牌 4-闷牌 5-自由操作 6-计算结果 7-结果 8-弃牌 9-比牌输
// 包剪锤：
// 0-wait(等待) 1-ready(准备) 2-开始游戏 3-玩家操作 4-结果
// 麻将
// 0-wait(等待) 1-ready(准备) 2-发牌 3-换三张1 4-换三张2 5-定缺1 6-定缺2 7-自由出牌 8-结束动画 9-查叫 10-结果 11-胡牌
// 三公：
// 0-wait(等待) 1-ready(准备) 2-抢庄 3-随机庄家 4-下注 5-发牌 6-开牌 7-展示结果
// 玩家当前状态
// @api:1015,@type:resp
type UserStatusNtf struct {
	Id       int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	GameType GAME  `protobuf:"varint,2,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Status   int32 `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	End      int64 `protobuf:"varint,4,opt,name=end" json:"end,omitempty"`
	Start    int64 `protobuf:"varint,5,opt,name=start" json:"start,omitempty"`
}

func (m *UserStatusNtf) Reset()                    { *m = UserStatusNtf{} }
func (m *UserStatusNtf) String() string            { return proto.CompactTextString(m) }
func (*UserStatusNtf) ProtoMessage()               {}
func (*UserStatusNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{169} }

func (m *UserStatusNtf) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserStatusNtf) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *UserStatusNtf) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UserStatusNtf) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *UserStatusNtf) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

// 牛牛:
// 0-wait(等待) 1-ready(准备) 2-deal1(发牌) 3-qiangzhuang(抢庄) 4-随机庄家 5-xiazhu(下注) 6-deal2(发牌2) 7-kaipai(开牌)
// 诈金花:
// 0-wait(等待) 1-ready(准备) 2-强制下注 3-发牌 4-闷牌 5-自由操作 6-计算结果 7-展示结果
// 包剪锤：
// 0-wait(等待) 1-ready(准备) 2-开始游戏 3-玩家操作 4-结果
// 麻将
// 0-wait(等待) 1-ready(准备) 2-发牌 3-换三张1 4-换三张2 5-定缺1 6-定缺2 7-自由出牌 8-结束动画 9-查叫 10-结果
// 三公：
// 0-wait(等待) 1-ready(准备) 2-抢庄 3-随机庄家 4-下注 5-发牌 6-开牌 7-计算结果 8-展示结果
// 游戏当前状态
// @api:1010,@type:resp
type GameStatusNtf struct {
	GameType GAME  `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Status   int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	End      int64 `protobuf:"varint,3,opt,name=end" json:"end,omitempty"`
	Start    int64 `protobuf:"varint,4,opt,name=start" json:"start,omitempty"`
	Oper     int64 `protobuf:"varint,5,opt,name=oper" json:"oper,omitempty"`
}

func (m *GameStatusNtf) Reset()                    { *m = GameStatusNtf{} }
func (m *GameStatusNtf) String() string            { return proto.CompactTextString(m) }
func (*GameStatusNtf) ProtoMessage()               {}
func (*GameStatusNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{170} }

func (m *GameStatusNtf) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *GameStatusNtf) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GameStatusNtf) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GameStatusNtf) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GameStatusNtf) GetOper() int64 {
	if m != nil {
		return m.Oper
	}
	return 0
}

// 通知玩家操作
// @api:1016,@type:resp
type UserOPNtf struct {
	Id       int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	GameType GAME  `protobuf:"varint,2,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Op       *OP   `protobuf:"bytes,3,opt,name=op" json:"op,omitempty"`
}

func (m *UserOPNtf) Reset()                    { *m = UserOPNtf{} }
func (m *UserOPNtf) String() string            { return proto.CompactTextString(m) }
func (*UserOPNtf) ProtoMessage()               {}
func (*UserOPNtf) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{171} }

func (m *UserOPNtf) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserOPNtf) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *UserOPNtf) GetOp() *OP {
	if m != nil {
		return m.Op
	}
	return nil
}

// 玩家操作
// @api:1011,@type:req
type UserOpReq struct {
	GameType GAME `protobuf:"varint,1,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Op       *OP  `protobuf:"bytes,2,opt,name=op" json:"op,omitempty"`
}

func (m *UserOpReq) Reset()                    { *m = UserOpReq{} }
func (m *UserOpReq) String() string            { return proto.CompactTextString(m) }
func (*UserOpReq) ProtoMessage()               {}
func (*UserOpReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{172} }

func (m *UserOpReq) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *UserOpReq) GetOp() *OP {
	if m != nil {
		return m.Op
	}
	return nil
}

// 请求跑马灯公告列表
// @api:1037,@type:req
type NoticeListReq struct {
}

func (m *NoticeListReq) Reset()                    { *m = NoticeListReq{} }
func (m *NoticeListReq) String() string            { return proto.CompactTextString(m) }
func (*NoticeListReq) ProtoMessage()               {}
func (*NoticeListReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{173} }

// 返回跑马灯公告列表
// @api:1037,@type:resp
type NoticeListResp struct {
}

func (m *NoticeListResp) Reset()                    { *m = NoticeListResp{} }
func (m *NoticeListResp) String() string            { return proto.CompactTextString(m) }
func (*NoticeListResp) ProtoMessage()               {}
func (*NoticeListResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{174} }

// itemType 1 请求返回 2 主推返回
// 跑马灯公告主推和请求返回
// @api:1038,@type:resp
type NoticeListPushResp struct {
	ItemType int32         `protobuf:"varint,1,opt,name=itemType" json:"itemType,omitempty"`
	List     []*NoticeItem `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
}

func (m *NoticeListPushResp) Reset()                    { *m = NoticeListPushResp{} }
func (m *NoticeListPushResp) String() string            { return proto.CompactTextString(m) }
func (*NoticeListPushResp) ProtoMessage()               {}
func (*NoticeListPushResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{175} }

func (m *NoticeListPushResp) GetItemType() int32 {
	if m != nil {
		return m.ItemType
	}
	return 0
}

func (m *NoticeListPushResp) GetList() []*NoticeItem {
	if m != nil {
		return m.List
	}
	return nil
}

// noticeType  播放地方 1 游戏外跑马灯 2 游戏里面跑马灯 3 游戏里面和外面都播放跑马灯
// playCount  播放次数  -1循环播放
// colorType颜色类型 1红色，2 橙色,3黄色，4绿色,5青色,6蓝色,7紫色
// gapTime间隔时间 单位秒
// content 播放内容
// url 链接
type NoticeItem struct {
	NoticeType int32  `protobuf:"varint,1,opt,name=noticeType" json:"noticeType,omitempty"`
	PlayCount  int32  `protobuf:"varint,2,opt,name=playCount" json:"playCount,omitempty"`
	ColorType  int32  `protobuf:"varint,3,opt,name=colorType" json:"colorType,omitempty"`
	GapTime    int32  `protobuf:"varint,4,opt,name=gapTime" json:"gapTime,omitempty"`
	Content    string `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	Url        string `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
}

func (m *NoticeItem) Reset()                    { *m = NoticeItem{} }
func (m *NoticeItem) String() string            { return proto.CompactTextString(m) }
func (*NoticeItem) ProtoMessage()               {}
func (*NoticeItem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{176} }

func (m *NoticeItem) GetNoticeType() int32 {
	if m != nil {
		return m.NoticeType
	}
	return 0
}

func (m *NoticeItem) GetPlayCount() int32 {
	if m != nil {
		return m.PlayCount
	}
	return 0
}

func (m *NoticeItem) GetColorType() int32 {
	if m != nil {
		return m.ColorType
	}
	return 0
}

func (m *NoticeItem) GetGapTime() int32 {
	if m != nil {
		return m.GapTime
	}
	return 0
}

func (m *NoticeItem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *NoticeItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// 红中麻将
// k = 1 << 0; 准备
// k = 1 << 1; 退出
// k = 1 << 2; 操作
// k = 1 << 3; 发牌 v[0]-v[12]/v[13] //其他玩家13张牌，庄家14张牌
// k = 1 << 4; 庄家
// k = 1 << 5; CAN换三张
// k = 1 << 6; 换三张v[0]-v[2]要换的三张牌
// k = 1 << 7; CAN定缺
// k = 1 << 8; 定缺 v[0] 0:条,1:筒，2:万
// k = 1 << 9; CAN打牌
// k = 1 << 10; 打牌 v[0] 打那张牌
// k = 1 << 11; CAN飞
// k = 1 << 12; 飞 v[0] 飞那张牌
// k = 1 << 13; CAN提
// k = 1 << 14; 提 v[0] 提那张牌
// k = 1 << 15; CAN碰
// k = 1 << 16; 碰 v[0] 碰那张牌
// k = 1 << 17; CAN胡
// k = 1 << 18; 胡 	//胡 v[0]谁出得牌 v[1]胡得牌 v[2]胡的类型(1-天胡(自摸),2-地胡(自摸),3-自摸,4-胡, 5-胡(一炮多响)) v[3](抢杠 == 1) v[4] - v[n-1]
// k = 1 << 19; CAN杠
// k = 1 << 20; 杠 //客户端发给服务器 v[0]代表杠哪一个 服务器发给客户端v[0]代表杠的类型,1:暗杠，2:明杠,3:点杠,v[1]杠的值
// k = 1 << 21, 过
// k = 1 << 22, 刮风
// k = 1 << 23, 下雨
// k = 1 << 24, 摸牌 v[0] 代表摸的牌
// k = 1 << 25, 点杠
// k = 1 << 26, 呼叫转移
// k = 1 << 27, 胡扣钱
// k = 1 << 28, 开始
// k = 1 << 29,	局数
// k = 1 << 30, 销毁
type OP struct {
	K int32   `protobuf:"varint,1,opt,name=k" json:"k,omitempty"`
	V []int64 `protobuf:"varint,2,rep,packed,name=v" json:"v,omitempty"`
}

func (m *OP) Reset()                    { *m = OP{} }
func (m *OP) String() string            { return proto.CompactTextString(m) }
func (*OP) ProtoMessage()               {}
func (*OP) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{177} }

func (m *OP) GetK() int32 {
	if m != nil {
		return m.K
	}
	return 0
}

func (m *OP) GetV() []int64 {
	if m != nil {
		return m.V
	}
	return nil
}

// gate 通信测试协议
type TEST_GATE_REQ struct {
	Start int64 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
}

func (m *TEST_GATE_REQ) Reset()                    { *m = TEST_GATE_REQ{} }
func (m *TEST_GATE_REQ) String() string            { return proto.CompactTextString(m) }
func (*TEST_GATE_REQ) ProtoMessage()               {}
func (*TEST_GATE_REQ) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{178} }

func (m *TEST_GATE_REQ) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

// gs 通信测试协议
type TEST_GS_REQ struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *TEST_GS_REQ) Reset()                    { *m = TEST_GS_REQ{} }
func (m *TEST_GS_REQ) String() string            { return proto.CompactTextString(m) }
func (*TEST_GS_REQ) ProtoMessage()               {}
func (*TEST_GS_REQ) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{179} }

func (m *TEST_GS_REQ) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type TEST_GS_RESP struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *TEST_GS_RESP) Reset()                    { *m = TEST_GS_RESP{} }
func (m *TEST_GS_RESP) String() string            { return proto.CompactTextString(m) }
func (*TEST_GS_RESP) ProtoMessage()               {}
func (*TEST_GS_RESP) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{180} }

func (m *TEST_GS_RESP) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientReq)(nil), "protocol.ClientReq")
	proto.RegisterType((*ClientResp)(nil), "protocol.ClientResp")
	proto.RegisterType((*LoginReq)(nil), "protocol.LoginReq")
	proto.RegisterType((*LoginResp)(nil), "protocol.LoginResp")
	proto.RegisterType((*ModifyUserInfo)(nil), "protocol.ModifyUserInfo")
	proto.RegisterType((*NoticeReq)(nil), "protocol.NoticeReq")
	proto.RegisterType((*NoticeResp)(nil), "protocol.NoticeResp")
	proto.RegisterType((*NoticeInfo)(nil), "protocol.NoticeInfo")
	proto.RegisterType((*RankingReq)(nil), "protocol.RankingReq")
	proto.RegisterType((*RankingResp)(nil), "protocol.RankingResp")
	proto.RegisterType((*RankingInfo)(nil), "protocol.RankingInfo")
	proto.RegisterType((*GetActionListReq)(nil), "protocol.GetActionListReq")
	proto.RegisterType((*GetActionListResp)(nil), "protocol.GetActionListResp")
	proto.RegisterType((*ActionInfo)(nil), "protocol.ActionInfo")
	proto.RegisterType((*ActionRankingReq)(nil), "protocol.ActionRankingReq")
	proto.RegisterType((*ActionRankingResp)(nil), "protocol.ActionRankingResp")
	proto.RegisterType((*DistributionReq)(nil), "protocol.DistributionReq")
	proto.RegisterType((*DistributionResp)(nil), "protocol.DistributionResp")
	proto.RegisterType((*Team)(nil), "protocol.Team")
	proto.RegisterType((*Pusher)(nil), "protocol.Pusher")
	proto.RegisterType((*Employ)(nil), "protocol.Employ")
	proto.RegisterType((*Achieve)(nil), "protocol.Achieve")
	proto.RegisterType((*GetTeamRewardReq)(nil), "protocol.GetTeamRewardReq")
	proto.RegisterType((*GetShareRewardReq)(nil), "protocol.GetShareRewardReq")
	proto.RegisterType((*ChargeReq)(nil), "protocol.ChargeReq")
	proto.RegisterType((*ChargeResp)(nil), "protocol.ChargeResp")
	proto.RegisterType((*GetShareRedPkgReq)(nil), "protocol.GetShareRedPkgReq")
	proto.RegisterType((*GetShareRedPkgResp)(nil), "protocol.GetShareRedPkgResp")
	proto.RegisterType((*CreateClubReq)(nil), "protocol.CreateClubReq")
	proto.RegisterType((*CreateClubResp)(nil), "protocol.CreateClubResp")
	proto.RegisterType((*ClubInfo)(nil), "protocol.ClubInfo")
	proto.RegisterType((*GetClubListReq)(nil), "protocol.GetClubListReq")
	proto.RegisterType((*GetClubListResp)(nil), "protocol.GetClubListResp")
	proto.RegisterType((*SearchClubReq)(nil), "protocol.SearchClubReq")
	proto.RegisterType((*SearchClubResp)(nil), "protocol.SearchClubResp")
	proto.RegisterType((*JoinClubReq)(nil), "protocol.JoinClubReq")
	proto.RegisterType((*ModifyClubInfoReq)(nil), "protocol.ModifyClubInfoReq")
	proto.RegisterType((*QuitClubReq)(nil), "protocol.QuitClubReq")
	proto.RegisterType((*DisbandClubReq)(nil), "protocol.DisbandClubReq")
	proto.RegisterType((*ClubApplicantInfo)(nil), "protocol.ClubApplicantInfo")
	proto.RegisterType((*GetClubApplyListReq)(nil), "protocol.GetClubApplyListReq")
	proto.RegisterType((*ClubApproveReq)(nil), "protocol.ClubApproveReq")
	proto.RegisterType((*ClubApproveResp)(nil), "protocol.ClubApproveResp")
	proto.RegisterType((*GetClubApplyListResp)(nil), "protocol.GetClubApplyListResp")
	proto.RegisterType((*ClubMemberInfo)(nil), "protocol.ClubMemberInfo")
	proto.RegisterType((*GetClubMembersListReq)(nil), "protocol.GetClubMembersListReq")
	proto.RegisterType((*GetClubMembersListResp)(nil), "protocol.GetClubMembersListResp")
	proto.RegisterType((*SetClubAdministratorReq)(nil), "protocol.SetClubAdministratorReq")
	proto.RegisterType((*DeleteClubMemberReq)(nil), "protocol.DeleteClubMemberReq")
	proto.RegisterType((*ModifyClubGameReq)(nil), "protocol.ModifyClubGameReq")
	proto.RegisterType((*CreateClubRoomReq)(nil), "protocol.CreateClubRoomReq")
	proto.RegisterType((*CreateClubRoomResp)(nil), "protocol.CreateClubRoomResp")
	proto.RegisterType((*RemoveClubRoomReq)(nil), "protocol.RemoveClubRoomReq")
	proto.RegisterType((*SetClubRoomModeReq)(nil), "protocol.SetClubRoomModeReq")
	proto.RegisterType((*SendClubChangesResp)(nil), "protocol.SendClubChangesResp")
	proto.RegisterType((*ClubRoomInfo)(nil), "protocol.ClubRoomInfo")
	proto.RegisterType((*ClubRoomDeskInfo)(nil), "protocol.ClubRoomDeskInfo")
	proto.RegisterType((*DeskPlayer)(nil), "protocol.DeskPlayer")
	proto.RegisterType((*CLubDaysConsumeReq)(nil), "protocol.CLubDaysConsumeReq")
	proto.RegisterType((*CLubDaysConsumeResp)(nil), "protocol.CLubDaysConsumeResp")
	proto.RegisterType((*ClubDayConsumeInfo)(nil), "protocol.clubDayConsumeInfo")
	proto.RegisterType((*ClubRoomListReq)(nil), "protocol.ClubRoomListReq")
	proto.RegisterType((*ClubRoomListResp)(nil), "protocol.ClubRoomListResp")
	proto.RegisterType((*JoinClubDeskReq)(nil), "protocol.JoinClubDeskReq")
	proto.RegisterType((*JoinClubDeskResp)(nil), "protocol.JoinClubDeskResp")
	proto.RegisterType((*ModifyClubRoomRuleReq)(nil), "protocol.ModifyClubRoomRuleReq")
	proto.RegisterType((*ModifyClubRoomRuleResp)(nil), "protocol.ModifyClubRoomRuleResp")
	proto.RegisterType((*ModifyClubRoomDecReq)(nil), "protocol.ModifyClubRoomDecReq")
	proto.RegisterType((*ClubRoomDeskInfoReq)(nil), "protocol.ClubRoomDeskInfoReq")
	proto.RegisterType((*ClubRoomDeskInfoResp)(nil), "protocol.ClubRoomDeskInfoResp")
	proto.RegisterType((*GetRoomListReq)(nil), "protocol.GetRoomListReq")
	proto.RegisterType((*GetRoomListResp)(nil), "protocol.GetRoomListResp")
	proto.RegisterType((*ExchangeReq)(nil), "protocol.ExchangeReq")
	proto.RegisterType((*WithDrawReq)(nil), "protocol.WithDrawReq")
	proto.RegisterType((*DepositReq)(nil), "protocol.DepositReq")
	proto.RegisterType((*SetBankPasswdReq)(nil), "protocol.SetBankPasswdReq")
	proto.RegisterType((*BankUpdateNtf)(nil), "protocol.BankUpdateNtf")
	proto.RegisterType((*VerifyBankPasswdReq)(nil), "protocol.VerifyBankPasswdReq")
	proto.RegisterType((*TransferReq)(nil), "protocol.TransferReq")
	proto.RegisterType((*ShareReq)(nil), "protocol.ShareReq")
	proto.RegisterType((*CloseAccountReq)(nil), "protocol.CloseAccountReq")
	proto.RegisterType((*CloseAccountResp)(nil), "protocol.CloseAccountResp")
	proto.RegisterType((*SendPlayerLocation)(nil), "protocol.SendPlayerLocation")
	proto.RegisterType((*MJPlayerResultListNtf)(nil), "protocol.MJPlayerResultListNtf")
	proto.RegisterType((*BigTwoPlayerResultListNtf)(nil), "protocol.BigTwoPlayerResultListNtf")
	proto.RegisterType((*BigTwoPlayerEndResultListNtf)(nil), "protocol.BigTwoPlayerEndResultListNtf")
	proto.RegisterType((*GetMultipleFightGradeReq)(nil), "protocol.GetMultipleFightGradeReq")
	proto.RegisterType((*GetMultipleFightGradeResp)(nil), "protocol.GetMultipleFightGradeResp")
	proto.RegisterType((*GamePlayerResultListNtf)(nil), "protocol.GamePlayerResultListNtf")
	proto.RegisterType((*PdkPlayerResultListNtf)(nil), "protocol.PdkPlayerResultListNtf")
	proto.RegisterType((*PdkResultInfo)(nil), "protocol.PdkResultInfo")
	proto.RegisterType((*PdkPlayerEndResultListNtf)(nil), "protocol.PdkPlayerEndResultListNtf")
	proto.RegisterType((*PdkEndResultInfo)(nil), "protocol.PdkEndResultInfo")
	proto.RegisterType((*FiveDdzPlayerResultListNtf)(nil), "protocol.FiveDdzPlayerResultListNtf")
	proto.RegisterType((*DdzResultInfo)(nil), "protocol.DdzResultInfo")
	proto.RegisterType((*DdzPlayerEndResultListNtf)(nil), "protocol.DdzPlayerEndResultListNtf")
	proto.RegisterType((*DdzEndResultInfo)(nil), "protocol.DdzEndResultInfo")
	proto.RegisterType((*HongZhongMahjongResultNtf)(nil), "protocol.HongZhongMahjongResultNtf")
	proto.RegisterType((*PersonPerGameResult)(nil), "protocol.PersonPerGameResult")
	proto.RegisterType((*HongZhongMahjongPutOut)(nil), "protocol.HongZhongMahjongPutOut")
	proto.RegisterType((*HongZhongMahjongdetailWin)(nil), "protocol.HongZhongMahjongdetailWin")
	proto.RegisterType((*GamePlayerEndResultListNtf)(nil), "protocol.GamePlayerEndResultListNtf")
	proto.RegisterType((*GameEndResultInfo)(nil), "protocol.GameEndResultInfo")
	proto.RegisterType((*MahjongEndRecord)(nil), "protocol.MahjongEndRecord")
	proto.RegisterType((*BigTwoEndResultInfo)(nil), "protocol.BigTwoEndResultInfo")
	proto.RegisterType((*MultipleFightGradeInfo)(nil), "protocol.MultipleFightGradeInfo")
	proto.RegisterType((*FightGradeInfo)(nil), "protocol.FightGradeInfo")
	proto.RegisterType((*MaxWin)(nil), "protocol.MaxWin")
	proto.RegisterType((*PersonFight)(nil), "protocol.PersonFight")
	proto.RegisterType((*MJPlayerResultInfo)(nil), "protocol.MJPlayerResultInfo")
	proto.RegisterType((*MJPlayerResultDetailInfo)(nil), "protocol.MJPlayerResultDetailInfo")
	proto.RegisterType((*BigTwoResultInfo)(nil), "protocol.BigTwoResultInfo")
	proto.RegisterType((*BigTwoCards)(nil), "protocol.BigTwoCards")
	proto.RegisterType((*BigTwoInfo)(nil), "protocol.BigTwoInfo")
	proto.RegisterType((*BigTwoCardInfo)(nil), "protocol.BigTwoCardInfo")
	proto.RegisterType((*RoomInfo)(nil), "protocol.RoomInfo")
	proto.RegisterType((*PaoDeKuaiRoomInfo)(nil), "protocol.PaoDeKuaiRoomInfo")
	proto.RegisterType((*RoomClubDeskInfo)(nil), "protocol.RoomClubDeskInfo")
	proto.RegisterType((*Player)(nil), "protocol.Player")
	proto.RegisterType((*Gps)(nil), "protocol.Gps")
	proto.RegisterType((*CreateRoomReq)(nil), "protocol.CreateRoomReq")
	proto.RegisterType((*ExpendSpeciThing)(nil), "protocol.ExpendSpeciThing")
	proto.RegisterType((*NingYuanSpeciRule)(nil), "protocol.NingYuanSpeciRule")
	proto.RegisterType((*Hold)(nil), "protocol.Hold")
	proto.RegisterType((*RoomConfig)(nil), "protocol.RoomConfig")
	proto.RegisterType((*CreateRoomResp)(nil), "protocol.CreateRoomResp")
	proto.RegisterType((*JoinRoomReq)(nil), "protocol.JoinRoomReq")
	proto.RegisterType((*JoinRoomResp)(nil), "protocol.JoinRoomResp")
	proto.RegisterType((*GetRoomDataReq)(nil), "protocol.GetRoomDataReq")
	proto.RegisterType((*GetRoomDataResp)(nil), "protocol.GetRoomDataResp")
	proto.RegisterType((*TalkToAllReq)(nil), "protocol.TalkToAllReq")
	proto.RegisterType((*TalkToAllResp)(nil), "protocol.TalkToAllResp")
	proto.RegisterType((*QuitRoomReq)(nil), "protocol.QuitRoomReq")
	proto.RegisterType((*RoomListNtf)(nil), "protocol.RoomListNtf")
	proto.RegisterType((*JoinRoomNtf)(nil), "protocol.JoinRoomNtf")
	proto.RegisterType((*QuitRoomNtf)(nil), "protocol.QuitRoomNtf")
	proto.RegisterType((*MatchReq)(nil), "protocol.MatchReq")
	proto.RegisterType((*MatchResp)(nil), "protocol.MatchResp")
	proto.RegisterType((*LogoutReq)(nil), "protocol.LogoutReq")
	proto.RegisterType((*LogoutResp)(nil), "protocol.LogoutResp")
	proto.RegisterType((*CommonResp)(nil), "protocol.CommonResp")
	proto.RegisterType((*HeartReq)(nil), "protocol.HeartReq")
	proto.RegisterType((*HeartResp)(nil), "protocol.HeartResp")
	proto.RegisterType((*BindReq)(nil), "protocol.BindReq")
	proto.RegisterType((*MoneyUpdateNtf)(nil), "protocol.MoneyUpdateNtf")
	proto.RegisterType((*GetPlayerScoreReq)(nil), "protocol.GetPlayerScoreReq")
	proto.RegisterType((*GetPlayerScoreResp)(nil), "protocol.GetPlayerScoreResp")
	proto.RegisterType((*ScoreInfo)(nil), "protocol.ScoreInfo")
	proto.RegisterType((*MoneyInfo)(nil), "protocol.MoneyInfo")
	proto.RegisterType((*GameMoneyUpdateNtf)(nil), "protocol.GameMoneyUpdateNtf")
	proto.RegisterType((*ShareNumNtf)(nil), "protocol.ShareNumNtf")
	proto.RegisterType((*PlayFieldClubMemberReq)(nil), "protocol.PlayFieldClubMemberReq")
	proto.RegisterType((*PlayFieldClubMemberResp)(nil), "protocol.PlayFieldClubMemberResp")
	proto.RegisterType((*ClubMemberInfoTree)(nil), "protocol.ClubMemberInfoTree")
	proto.RegisterType((*SetProportionReq)(nil), "protocol.SetProportionReq")
	proto.RegisterType((*SetIntegralReq)(nil), "protocol.SetIntegralReq")
	proto.RegisterType((*SetClubModeReq)(nil), "protocol.SetClubModeReq")
	proto.RegisterType((*PlayFieldPermissionReq)(nil), "protocol.PlayFieldPermissionReq")
	proto.RegisterType((*BindPlayerGVoiceIDReq)(nil), "protocol.BindPlayerGVoiceIDReq")
	proto.RegisterType((*BindPlayerGVoiceIDResp)(nil), "protocol.BindPlayerGVoiceIDResp")
	proto.RegisterType((*SetGpsInfoReq)(nil), "protocol.SetGpsInfoReq")
	proto.RegisterType((*SetGpsInfoResp)(nil), "protocol.SetGpsInfoResp")
	proto.RegisterType((*GetClubMaxWinReq)(nil), "protocol.GetClubMaxWinReq")
	proto.RegisterType((*GetClubMaxWinResp)(nil), "protocol.GetClubMaxWinResp")
	proto.RegisterType((*ClubMaxWinInfo)(nil), "protocol.ClubMaxWinInfo")
	proto.RegisterType((*GetClubMaxFightReq)(nil), "protocol.GetClubMaxFightReq")
	proto.RegisterType((*GetClubMaxFightResp)(nil), "protocol.GetClubMaxFightResp")
	proto.RegisterType((*GetRoomInfoReq)(nil), "protocol.GetRoomInfoReq")
	proto.RegisterType((*GetRoomInfoResp)(nil), "protocol.GetRoomInfoResp")
	proto.RegisterType((*UserStatusNtf)(nil), "protocol.UserStatusNtf")
	proto.RegisterType((*GameStatusNtf)(nil), "protocol.GameStatusNtf")
	proto.RegisterType((*UserOPNtf)(nil), "protocol.UserOPNtf")
	proto.RegisterType((*UserOpReq)(nil), "protocol.UserOpReq")
	proto.RegisterType((*NoticeListReq)(nil), "protocol.NoticeListReq")
	proto.RegisterType((*NoticeListResp)(nil), "protocol.NoticeListResp")
	proto.RegisterType((*NoticeListPushResp)(nil), "protocol.NoticeListPushResp")
	proto.RegisterType((*NoticeItem)(nil), "protocol.NoticeItem")
	proto.RegisterType((*OP)(nil), "protocol.OP")
	proto.RegisterType((*TEST_GATE_REQ)(nil), "protocol.TEST_GATE_REQ")
	proto.RegisterType((*TEST_GS_REQ)(nil), "protocol.TEST_GS_REQ")
	proto.RegisterType((*TEST_GS_RESP)(nil), "protocol.TEST_GS_RESP")
}

func init() { proto.RegisterFile("gate.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 6500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x7c, 0xdd, 0x73, 0x24, 0xc9,
	0x51, 0xb8, 0x7b, 0x7a, 0x66, 0x34, 0xca, 0x91, 0xb4, 0xda, 0x96, 0x56, 0x37, 0x27, 0xaf, 0xcf,
	0xba, 0xf2, 0x79, 0xad, 0xb3, 0x7f, 0x5e, 0xdf, 0x6f, 0x6d, 0x9f, 0xef, 0x08, 0x3b, 0xcc, 0xae,
	0xb4, 0xd2, 0xca, 0xb7, 0xd2, 0xca, 0xad, 0xd9, 0x3b, 0x70, 0x60, 0x96, 0xd6, 0x4c, 0x69, 0xa6,
	0x4f, 0x3d, 0xdd, 0x7d, 0xfd, 0xa1, 0x8f, 0xb3, 0xf9, 0x8a, 0x20, 0xb0, 0x81, 0x08, 0x08, 0xc0,
	0x01, 0x0f, 0x04, 0xc1, 0x03, 0x84, 0x5f, 0x20, 0x78, 0x00, 0x9e, 0x21, 0x78, 0xe1, 0x01, 0x1e,
	0x1c, 0x41, 0x10, 0x81, 0xff, 0x03, 0x5e, 0x79, 0xe0, 0x0f, 0x20, 0x32, 0xeb, 0xa3, 0xab, 0x7b,
	0x3e, 0xb4, 0xba, 0x3b, 0xe2, 0xfc, 0x34, 0x95, 0x59, 0xd5, 0xf5, 0x91, 0x99, 0x95, 0x99, 0x95,
	0x95, 0x35, 0x00, 0x03, 0x2f, 0xe3, 0x77, 0xe3, 0x24, 0xca, 0x22, 0xa7, 0x45, 0x3f, 0xbd, 0x28,
	0x58, 0x6f, 0xf7, 0xa2, 0x30, 0xcd, 0x04, 0x9a, 0x3d, 0x80, 0xf9, 0xad, 0xc0, 0xe7, 0x61, 0xe6,
	0xf2, 0xf7, 0x9c, 0x97, 0xc1, 0xf6, 0x62, 0xbf, 0x63, 0x6d, 0x58, 0x9b, 0x4b, 0xf7, 0x6e, 0xdc,
	0x55, 0x5f, 0xdc, 0x3d, 0x74, 0x9f, 0x74, 0x9f, 0xb8, 0x58, 0xe7, 0x38, 0x50, 0xef, 0x7b, 0x99,
	0xd7, 0xa9, 0x6d, 0x58, 0x9b, 0x0b, 0x2e, 0x95, 0xd9, 0x16, 0x80, 0xea, 0x23, 0x8d, 0x3f, 0x68,
	0x27, 0x3f, 0xac, 0x41, 0xeb, 0x71, 0x34, 0xf0, 0x43, 0x9c, 0x88, 0x03, 0xf5, 0x3c, 0xf7, 0xfb,
	0xd4, 0xc9, 0xbc, 0x4b, 0x65, 0xa7, 0x03, 0x73, 0x5e, 0xaf, 0x17, 0xe5, 0x61, 0x46, 0xdf, 0xcd,
	0xbb, 0x0a, 0x74, 0x96, 0xc1, 0x8e, 0xcf, 0xfb, 0x1d, 0x9b, 0xb0, 0x58, 0x74, 0xee, 0x42, 0x2b,
	0x0e, 0xbc, 0xec, 0x24, 0x4a, 0x46, 0x9d, 0x3a, 0x4d, 0xc4, 0x31, 0x26, 0xf2, 0xf8, 0x7e, 0x77,
	0xe7, 0x89, 0xbb, 0xef, 0xea, 0x36, 0xce, 0x2a, 0x34, 0xfc, 0xf4, 0x80, 0x9f, 0x77, 0x1a, 0x1b,
	0xd6, 0x66, 0xcb, 0x15, 0x00, 0xce, 0xa2, 0x17, 0xf5, 0x79, 0xa7, 0x29, 0x66, 0x81, 0x65, 0x6c,
	0x99, 0x45, 0xa7, 0x3c, 0xec, 0xcc, 0x11, 0x52, 0x00, 0x0e, 0x83, 0x85, 0x84, 0x9f, 0x24, 0x3c,
	0x1d, 0x76, 0xa9, 0xb2, 0x45, 0x95, 0x25, 0x1c, 0xce, 0xdf, 0x0f, 0xcf, 0xfc, 0x8c, 0x27, 0x9d,
	0xf9, 0x0d, 0x6b, 0xd3, 0x76, 0x15, 0xe8, 0x2c, 0x41, 0x2d, 0x4a, 0x3b, 0x40, 0xdf, 0xd4, 0xa2,
	0x94, 0xfd, 0x47, 0x1d, 0xe6, 0x25, 0x29, 0xd2, 0x18, 0x6b, 0x25, 0x25, 0x6c, 0xb7, 0xe6, 0xf7,
	0x71, 0x56, 0xa1, 0x37, 0xe2, 0x92, 0x08, 0x54, 0x46, 0xdc, 0x20, 0x0a, 0x04, 0x09, 0x6c, 0x97,
	0xca, 0x38, 0x5e, 0xdf, 0xf7, 0x46, 0x51, 0xd8, 0x27, 0x12, 0xd8, 0xae, 0x02, 0x9d, 0x75, 0x68,
	0x25, 0x51, 0x34, 0xea, 0x79, 0x49, 0xbf, 0xd3, 0xd8, 0xb0, 0x37, 0x6d, 0x57, 0xc3, 0xd4, 0x53,
	0xba, 0xd7, 0xa7, 0x35, 0x37, 0x5c, 0x2a, 0x3b, 0x6b, 0xd0, 0xc4, 0xfa, 0xbd, 0x3e, 0x2d, 0xba,
	0xe1, 0x4a, 0x48, 0x73, 0xa9, 0x65, 0x70, 0x69, 0x1d, 0x5a, 0xc7, 0x5e, 0x78, 0xba, 0x8b, 0xb3,
	0x11, 0xcb, 0xd4, 0x30, 0xb6, 0xf7, 0x7b, 0x51, 0x28, 0x57, 0x4a, 0x65, 0xe7, 0x36, 0xcc, 0xa7,
	0xfe, 0x20, 0xf4, 0xb2, 0x3c, 0xe1, 0x9d, 0x36, 0x55, 0x14, 0x88, 0x82, 0x2f, 0x0b, 0x26, 0x5f,
	0xd6, 0xa1, 0x95, 0x0e, 0xbd, 0x84, 0x6f, 0x85, 0x59, 0x67, 0x91, 0x66, 0xa4, 0x61, 0xe7, 0x25,
	0x00, 0x2a, 0x77, 0xa3, 0xcc, 0x0b, 0x3a, 0x4b, 0x54, 0x6b, 0x60, 0x90, 0x53, 0x04, 0xdd, 0xef,
	0x0d, 0x7d, 0x7e, 0xc6, 0x3b, 0x37, 0xa8, 0x45, 0x09, 0xe7, 0xbc, 0x02, 0x8b, 0x3d, 0x2f, 0x7c,
	0x12, 0xf3, 0xd0, 0xe5, 0xfd, 0xc3, 0xd3, 0x41, 0x67, 0x99, 0x1a, 0x95, 0x91, 0xd8, 0xca, 0x13,
	0x1f, 0xc8, 0x56, 0x37, 0x37, 0xac, 0xcd, 0x9a, 0x5b, 0x46, 0x12, 0xf7, 0xe2, 0x8e, 0x23, 0x78,
	0xeb, 0xc7, 0x34, 0x3f, 0x9e, 0x9c, 0xf1, 0xa4, 0xeb, 0x8f, 0x78, 0x67, 0x85, 0x28, 0x64, 0x60,
	0x50, 0x96, 0x53, 0x7e, 0xd1, 0x59, 0xa5, 0x11, 0xb1, 0xe8, 0x7c, 0x1a, 0xec, 0x41, 0x9c, 0x76,
	0x6e, 0x6d, 0x58, 0x9b, 0xed, 0x7b, 0x8b, 0x85, 0x18, 0xef, 0xc6, 0xa9, 0x8b, 0x35, 0xce, 0x1d,
	0x58, 0xea, 0x25, 0xdc, 0xcb, 0xf8, 0x56, 0x90, 0x1f, 0x1f, 0xf2, 0x64, 0xd4, 0x59, 0xdb, 0xb0,
	0x37, 0x1b, 0x6e, 0x05, 0xcb, 0x1e, 0xc0, 0xd2, 0x7e, 0xd4, 0xf7, 0x4f, 0x2e, 0x9f, 0xa6, 0x3c,
	0xd9, 0x0b, 0x4f, 0x22, 0x2d, 0x4a, 0x96, 0x21, 0x4a, 0x25, 0x86, 0xd4, 0x2a, 0x0c, 0x61, 0x6d,
	0x98, 0x3f, 0x88, 0x32, 0xbf, 0xc7, 0x5d, 0xfe, 0x1e, 0x7b, 0x1d, 0x40, 0x01, 0x69, 0xec, 0x6c,
	0x42, 0x3d, 0xf0, 0xd3, 0xac, 0x63, 0x6d, 0xd8, 0x9b, 0xed, 0x7b, 0xab, 0xc5, 0x44, 0x45, 0x1b,
	0x1c, 0xd0, 0xa5, 0x16, 0xec, 0x17, 0xd4, 0x77, 0x34, 0x09, 0xdc, 0x51, 0x7e, 0x16, 0xa8, 0x59,
	0x08, 0x00, 0xa5, 0xb7, 0x17, 0x85, 0x19, 0x2f, 0x76, 0xbb, 0x04, 0x91, 0xfb, 0x7d, 0x2f, 0xe3,
	0x19, 0xd2, 0x4f, 0xc8, 0xbb, 0x86, 0xd9, 0x02, 0x80, 0xeb, 0x85, 0xa7, 0x7e, 0x38, 0xc0, 0xf9,
	0xc5, 0xd0, 0xd6, 0x50, 0x1a, 0x93, 0xd8, 0xf0, 0xe0, 0x84, 0x44, 0x53, 0x6c, 0x27, 0x0d, 0xab,
	0x3a, 0x6c, 0x4e, 0xe3, 0x35, 0x5c, 0x0d, 0x3b, 0xaf, 0xca, 0x85, 0xd9, 0xb4, 0xb0, 0x5b, 0xc5,
	0xc2, 0x64, 0xe7, 0xc6, 0xca, 0x7e, 0x5d, 0x8f, 0x38, 0x95, 0xbe, 0x6b, 0xd0, 0xcc, 0x53, 0x9e,
	0xf8, 0x7d, 0x1a, 0xc7, 0x76, 0x25, 0x84, 0x6d, 0x77, 0x8d, 0x2d, 0x5c, 0xda, 0x30, 0xf5, 0x69,
	0x1b, 0xa6, 0x51, 0xe5, 0x8f, 0x03, 0xcb, 0xbb, 0x3c, 0xbb, 0xdf, 0xcb, 0xfc, 0x28, 0x7c, 0xec,
	0xa7, 0xa8, 0xd5, 0xd9, 0x37, 0xe0, 0x66, 0x05, 0x37, 0x8b, 0x5b, 0xa2, 0x9d, 0xb1, 0xa6, 0x7f,
	0xb7, 0x00, 0x0a, 0x24, 0x52, 0xca, 0x13, 0x90, 0xa0, 0x62, 0xc3, 0xd5, 0x30, 0xce, 0x37, 0xbb,
	0x8c, 0xb9, 0xa4, 0x20, 0x95, 0x91, 0xbd, 0x69, 0xe6, 0x25, 0x99, 0x5c, 0x98, 0x00, 0x50, 0xcc,
	0xb9, 0x56, 0x4c, 0x58, 0xc4, 0x76, 0xbd, 0x20, 0x4a, 0xc5, 0x9a, 0x6c, 0x57, 0x00, 0x85, 0x70,
	0x34, 0xa7, 0x08, 0xc7, 0x5c, 0x59, 0x38, 0x96, 0xc1, 0xf6, 0x47, 0x03, 0xa9, 0x91, 0xb0, 0x28,
	0x54, 0x88, 0x9b, 0x87, 0xa4, 0x8d, 0x1a, 0xae, 0x00, 0xd8, 0x5d, 0x58, 0x16, 0x6b, 0x2a, 0xc4,
	0x65, 0xd6, 0xca, 0xd8, 0x1f, 0x59, 0x70, 0xb3, 0xf2, 0x81, 0x90, 0xa8, 0xa9, 0xb4, 0x30, 0xa5,
	0xad, 0x36, 0x43, 0xda, 0xec, 0x29, 0xd2, 0x56, 0xbf, 0x5a, 0xda, 0x6e, 0xc2, 0x8d, 0x6d, 0x3f,
	0xcd, 0x12, 0xff, 0x38, 0xa7, 0x99, 0xf1, 0xf7, 0xd8, 0xbf, 0x59, 0xb0, 0x5c, 0xc6, 0xa5, 0xb1,
	0x21, 0x72, 0x56, 0x49, 0xe4, 0x18, 0xd4, 0x33, 0xee, 0x8d, 0x68, 0x7a, 0xed, 0x7b, 0x4b, 0xc5,
	0x50, 0x5d, 0xee, 0x8d, 0x5c, 0xaa, 0x73, 0x5e, 0x29, 0x09, 0xff, 0xb2, 0x61, 0x45, 0xf3, 0x74,
	0xc8, 0x13, 0x31, 0x13, 0x67, 0x13, 0x9a, 0x7c, 0x14, 0x07, 0xd1, 0x25, 0x71, 0xb4, 0xd4, 0xee,
	0x21, 0xe1, 0x5d, 0x59, 0xef, 0x7c, 0x01, 0xad, 0xb8, 0x50, 0xbd, 0x0d, 0x6a, 0x7a, 0xd3, 0x14,
	0x3d, 0xa1, 0x39, 0x55, 0x0b, 0x16, 0x42, 0x1d, 0xa7, 0x82, 0x3c, 0x8c, 0xce, 0x43, 0x9e, 0xc8,
	0xf9, 0x0b, 0x00, 0xa9, 0xe8, 0x87, 0xbd, 0x27, 0x54, 0x21, 0x29, 0xac, 0x60, 0x5c, 0x32, 0x4e,
	0x9f, 0x27, 0x52, 0xec, 0x24, 0x84, 0xbb, 0xc7, 0x0f, 0x7b, 0x5d, 0x51, 0x25, 0xa4, 0xaf, 0x40,
	0xb0, 0x33, 0x68, 0x8a, 0x65, 0xe1, 0xf7, 0x21, 0xbf, 0xc8, 0xf6, 0x34, 0xc9, 0x04, 0x44, 0x3b,
	0xda, 0x3f, 0x2d, 0x8c, 0xaf, 0x7f, 0xca, 0x9d, 0x0d, 0x68, 0x63, 0xad, 0xb2, 0x28, 0x62, 0x40,
	0x13, 0x85, 0x4a, 0x3f, 0x3a, 0x0f, 0x55, 0x03, 0x31, 0xac, 0x81, 0x61, 0x7d, 0x68, 0x0a, 0x32,
	0x61, 0xff, 0xe7, 0x9c, 0x9f, 0xd2, 0xa8, 0x96, 0x4b, 0x65, 0x9c, 0xb3, 0x77, 0xe6, 0xf9, 0x81,
	0x77, 0x1c, 0x88, 0x81, 0x2d, 0xb7, 0x40, 0x08, 0x87, 0x04, 0x6d, 0x9d, 0x4d, 0x35, 0x02, 0xa0,
	0x79, 0xf2, 0x8b, 0x8c, 0xc6, 0xb2, 0x5c, 0x2a, 0xb3, 0x5d, 0x98, 0x53, 0x13, 0x32, 0x87, 0xb1,
	0xe5, 0x30, 0x9a, 0xc8, 0x35, 0x93, 0xc8, 0xaa, 0x23, 0xa9, 0x96, 0xa8, 0x23, 0xa1, 0x64, 0x48,
	0x48, 0xf8, 0xb9, 0x97, 0xf4, 0x51, 0xf0, 0x56, 0x48, 0xc9, 0x1c, 0xa1, 0x19, 0x2d, 0x90, 0xdf,
	0x84, 0xf9, 0xad, 0xa1, 0x97, 0x0c, 0xb8, 0xdc, 0x5e, 0xda, 0x27, 0x93, 0x9b, 0x45, 0xfb, 0x5f,
	0x6b, 0xd0, 0xf4, 0x46, 0xda, 0xb5, 0x6b, 0xb8, 0x12, 0x62, 0xdb, 0x00, 0xaa, 0x03, 0xb1, 0xdd,
	0xa6, 0xf6, 0xb0, 0x0e, 0xad, 0x2c, 0x3a, 0xf4, 0x2e, 0x9f, 0x26, 0x81, 0x64, 0x8e, 0x86, 0xcb,
	0x73, 0x43, 0xab, 0x8c, 0x73, 0xfb, 0x39, 0x70, 0xaa, 0xc8, 0x34, 0x1e, 0x37, 0xea, 0xd6, 0x04,
	0xa3, 0xce, 0x7e, 0xc7, 0x82, 0xc5, 0x2d, 0x6d, 0x5c, 0xa5, 0xc3, 0x3a, 0xa6, 0xe9, 0xd1, 0xcb,
	0xe5, 0x69, 0x4f, 0xc9, 0x0a, 0x96, 0x91, 0x97, 0x03, 0x6f, 0xc4, 0xbb, 0x97, 0x31, 0x4f, 0xe5,
	0xd6, 0x2f, 0x10, 0x48, 0x86, 0x28, 0xf1, 0x07, 0xbe, 0xd0, 0xf8, 0x0d, 0x57, 0x42, 0xb8, 0xb8,
	0x5e, 0x90, 0x1f, 0x63, 0x23, 0xda, 0x35, 0x0d, 0x57, 0xc3, 0xec, 0x0d, 0x58, 0x32, 0xa7, 0x92,
	0xc6, 0xce, 0x1d, 0xa8, 0xfb, 0xe1, 0x49, 0x44, 0x73, 0x69, 0x9b, 0x8e, 0x2f, 0xb6, 0x10, 0xea,
	0x03, 0xeb, 0xd9, 0x4f, 0x6b, 0xd0, 0x52, 0x28, 0x1c, 0x1a, 0xbb, 0xd4, 0x8a, 0x4c, 0x42, 0x38,
	0xe1, 0x11, 0x1f, 0x1d, 0xf3, 0x64, 0x4b, 0x33, 0xa7, 0x40, 0xa0, 0x22, 0x46, 0x5f, 0x10, 0xeb,
	0xc4, 0x62, 0x14, 0x48, 0xaa, 0x31, 0x8e, 0x83, 0x4b, 0xac, 0xaa, 0x4b, 0xd5, 0x28, 0xe1, 0x32,
	0x11, 0x1a, 0x55, 0x22, 0x74, 0x60, 0x8e, 0x44, 0x4f, 0x3a, 0xa1, 0xb6, 0xab, 0x40, 0x4d, 0xe4,
	0xb9, 0x32, 0x91, 0xc9, 0x44, 0xb6, 0x0c, 0x13, 0xa9, 0x08, 0x3f, 0x5f, 0x26, 0x3c, 0x75, 0x73,
	0x80, 0x1d, 0x08, 0x07, 0xb4, 0x40, 0x18, 0x84, 0x6f, 0x57, 0x09, 0x8f, 0x8a, 0x99, 0x9c, 0xaa,
	0x85, 0x42, 0x51, 0x23, 0x5c, 0x62, 0xca, 0x62, 0x85, 0x29, 0xcb, 0xb0, 0xb4, 0xcb, 0x33, 0x24,
	0xae, 0x32, 0xc2, 0x6f, 0xc2, 0x8d, 0x12, 0x46, 0xf0, 0xc9, 0x30, 0xc1, 0x13, 0xf9, 0x44, 0x6a,
	0xfe, 0x73, 0xb0, 0x78, 0xc4, 0xbd, 0xa4, 0x37, 0x54, 0xc2, 0x36, 0x85, 0x57, 0x28, 0x0a, 0x66,
	0xc3, 0x6b, 0x88, 0xc2, 0x67, 0xa1, 0xfd, 0xad, 0xc8, 0x0f, 0xaf, 0x1a, 0xe0, 0x08, 0x6e, 0x0a,
	0x0f, 0x52, 0x7f, 0x3e, 0xbd, 0xf1, 0xb4, 0x73, 0x0a, 0x71, 0xc6, 0x2e, 0x38, 0x83, 0x63, 0x7f,
	0x3b, 0xf7, 0xb3, 0xab, 0xc6, 0xde, 0x84, 0xa5, 0x6d, 0x3f, 0x3d, 0xf6, 0xc2, 0xfe, 0x73, 0xcc,
	0x12, 0x9b, 0xdc, 0x8f, 0xe3, 0xc0, 0xef, 0x79, 0x61, 0xa6, 0xe4, 0x1b, 0xad, 0xde, 0x5e, 0xc9,
	0x06, 0x4e, 0x9f, 0x25, 0xc9, 0x94, 0x5d, 0xc8, 0x14, 0xfb, 0x22, 0xac, 0x48, 0xfe, 0x61, 0xbf,
	0x97, 0x92, 0xad, 0x53, 0xe7, 0xf0, 0x36, 0x2c, 0xc9, 0xb6, 0x49, 0x74, 0x46, 0xea, 0x6f, 0x15,
	0x1a, 0xde, 0x20, 0xe1, 0x42, 0x45, 0xb4, 0x5c, 0x01, 0x18, 0xdf, 0xd7, 0x4a, 0xc4, 0x43, 0xfb,
	0x85, 0x7a, 0x2f, 0xd3, 0xf6, 0x8b, 0x20, 0xb6, 0x05, 0x37, 0x4a, 0xfd, 0xa6, 0xb1, 0xf3, 0x1a,
	0x34, 0xc5, 0x86, 0x94, 0x5c, 0xee, 0x94, 0xb9, 0xbc, 0x4f, 0x75, 0xc4, 0x2c, 0xd9, 0x8e, 0x3d,
	0x83, 0xd5, 0xf1, 0xb5, 0x08, 0x3f, 0x61, 0x22, 0x27, 0xbf, 0x24, 0x05, 0xb5, 0x46, 0x82, 0xfa,
	0xc9, 0x72, 0xff, 0x25, 0x32, 0x4b, 0x89, 0xfd, 0x3b, 0x4b, 0x2c, 0xbf, 0x18, 0xdb, 0xf9, 0xbc,
	0xe9, 0xe5, 0x2f, 0x99, 0x0e, 0xe7, 0xd6, 0xe3, 0xa7, 0x0f, 0x9e, 0x75, 0xf7, 0xba, 0x8f, 0x1f,
	0x2a, 0xf7, 0xae, 0xe0, 0x55, 0xad, 0xc4, 0xab, 0xdb, 0x30, 0x1f, 0xe0, 0xb1, 0xb8, 0x5b, 0xb8,
	0xfe, 0x05, 0x42, 0x73, 0xb2, 0x3e, 0x81, 0x93, 0x0d, 0x43, 0x3b, 0xe0, 0x5e, 0x0f, 0x03, 0x3f,
	0x14, 0x3e, 0x65, 0xcb, 0x95, 0x10, 0xfb, 0x12, 0xdc, 0x92, 0x54, 0x11, 0xd3, 0x4e, 0xaf, 0xe2,
	0xf1, 0x2f, 0xc3, 0xda, 0xa4, 0x0f, 0x66, 0x10, 0xf2, 0xff, 0x95, 0x08, 0x39, 0x9d, 0x51, 0x82,
	0x8a, 0x39, 0xbc, 0x70, 0x24, 0xd9, 0xd4, 0x1f, 0xf9, 0x21, 0x7a, 0x75, 0x5e, 0x16, 0x25, 0x38,
	0xa5, 0x6b, 0x52, 0xf3, 0x5a, 0x22, 0xf6, 0x10, 0x56, 0xb6, 0x79, 0xc0, 0x85, 0x41, 0x11, 0x93,
	0x9a, 0xb5, 0xcd, 0x8b, 0x6e, 0x6a, 0xa5, 0x6e, 0xf6, 0x4c, 0x5d, 0xb1, 0xeb, 0x8d, 0xf8, 0xac,
	0x4e, 0x4a, 0x16, 0xa1, 0x56, 0xb1, 0x08, 0xec, 0xbf, 0x6a, 0x70, 0xd3, 0xb0, 0x71, 0x51, 0x34,
	0xba, 0x42, 0xef, 0x24, 0x39, 0x79, 0x4a, 0x78, 0x08, 0xa6, 0x32, 0xda, 0x94, 0x38, 0xf0, 0x2e,
	0x0f, 0xf2, 0x91, 0xb2, 0x53, 0x12, 0xc4, 0x1a, 0x1c, 0x08, 0x6b, 0x84, 0x99, 0x52, 0xa0, 0xf3,
	0x79, 0x68, 0xa9, 0x29, 0x90, 0xfc, 0x2c, 0x99, 0x1e, 0xf2, 0xee, 0xfd, 0xfd, 0x87, 0xae, 0xae,
	0x77, 0xbe, 0x02, 0x40, 0x86, 0x2f, 0x0a, 0x4f, 0xfc, 0x01, 0xc9, 0x55, 0xe9, 0x4c, 0xe5, 0xea,
	0x3a, 0xd7, 0x68, 0x47, 0xb6, 0xd5, 0xbb, 0x78, 0xc7, 0x0f, 0x8f, 0x7a, 0x91, 0x0c, 0xad, 0x14,
	0x08, 0x5c, 0xc7, 0xb1, 0x97, 0x72, 0xb2, 0x6c, 0x0d, 0x97, 0xca, 0xce, 0x0e, 0x2c, 0xf3, 0x8b,
	0x98, 0x87, 0xfd, 0xa3, 0x98, 0xf7, 0xfc, 0xee, 0xd0, 0x0f, 0x07, 0x64, 0xe5, 0xda, 0xf7, 0xd6,
	0x0d, 0x8f, 0xbb, 0xd2, 0xc2, 0x1d, 0xfb, 0xc6, 0xb0, 0x77, 0x60, 0xda, 0x3b, 0x76, 0x07, 0x9c,
	0x2a, 0xa1, 0xd3, 0x18, 0x0f, 0x55, 0x2a, 0x18, 0xd7, 0x70, 0xb1, 0x88, 0x47, 0x4a, 0x97, 0x8f,
	0xa2, 0xb3, 0xe7, 0x62, 0x88, 0xfc, 0xbc, 0x56, 0x7c, 0xfe, 0xf3, 0xe0, 0x48, 0xc9, 0xc6, 0x6f,
	0xf7, 0xa3, 0x3e, 0xbf, 0x82, 0xa1, 0xa3, 0xa8, 0xaf, 0x4f, 0x95, 0x58, 0x66, 0x7f, 0x69, 0xc1,
	0xca, 0x11, 0x17, 0xb6, 0x60, 0x6b, 0xe8, 0x85, 0x03, 0x9e, 0xd2, 0x54, 0xd5, 0x09, 0xd4, 0x32,
	0x4e, 0xa0, 0xd3, 0x36, 0x80, 0xea, 0xd7, 0x2e, 0xfa, 0x75, 0xee, 0x89, 0xd0, 0x18, 0xee, 0x42,
	0x79, 0x94, 0x59, 0x2b, 0xef, 0x52, 0x57, 0xd6, 0xba, 0xba, 0x1d, 0x9d, 0x46, 0xbd, 0xa4, 0x8f,
	0x22, 0x24, 0x9c, 0x19, 0x05, 0xb2, 0xff, 0xae, 0xc1, 0x82, 0xf9, 0x91, 0x96, 0x4d, 0x6b, 0xb2,
	0x6c, 0xd6, 0xa6, 0xca, 0xa6, 0x3d, 0x5d, 0x36, 0xeb, 0x57, 0xc8, 0xe6, 0xeb, 0xd0, 0xea, 0xf3,
	0xf4, 0x94, 0x96, 0xd4, 0x20, 0xc5, 0xb3, 0x3e, 0xbe, 0xa4, 0x6d, 0xd9, 0xc2, 0xd5, 0x6d, 0x91,
	0x6d, 0x7d, 0xde, 0x93, 0x07, 0x6f, 0x2c, 0x2a, 0x46, 0xce, 0x69, 0x46, 0x96, 0x25, 0xb8, 0x35,
	0x4d, 0x82, 0xe7, 0xaf, 0x90, 0x60, 0xf8, 0x50, 0x12, 0x5c, 0xf2, 0xd8, 0xd8, 0x8f, 0x2d, 0x58,
	0xae, 0x2e, 0x8a, 0x42, 0xaf, 0xe9, 0x11, 0x45, 0x21, 0x84, 0xf5, 0x55, 0x20, 0x45, 0x07, 0xc2,
	0x3e, 0xbf, 0x90, 0xa4, 0x17, 0x00, 0x49, 0x4c, 0x9e, 0x14, 0x74, 0x97, 0x90, 0x38, 0x64, 0x64,
	0x5e, 0x50, 0x68, 0x0b, 0x0d, 0x3b, 0x77, 0x05, 0x1b, 0x79, 0x92, 0x4a, 0x2a, 0x1b, 0xfb, 0x1f,
	0x27, 0x72, 0x48, 0x95, 0xae, 0x6a, 0xc4, 0xfa, 0x00, 0x05, 0x1a, 0x47, 0xa4, 0xd9, 0x6a, 0xd9,
	0x17, 0x10, 0x92, 0xf0, 0xc0, 0x70, 0x4f, 0x0e, 0xa4, 0x51, 0xdb, 0x33, 0xdc, 0x93, 0xbd, 0xb2,
	0x51, 0xab, 0x97, 0x8c, 0xda, 0xaf, 0x80, 0xb3, 0xf5, 0x38, 0x3f, 0xde, 0xf6, 0x2e, 0xd3, 0xad,
	0x28, 0x4c, 0xf3, 0xd9, 0x6a, 0x78, 0x19, 0xec, 0x6d, 0xef, 0x52, 0xed, 0xd4, 0x6d, 0xef, 0x12,
	0xcf, 0xb6, 0xb1, 0x77, 0xb9, 0xe5, 0x25, 0x7d, 0x92, 0x35, 0x41, 0x0e, 0x13, 0xc5, 0x06, 0xb0,
	0x32, 0x36, 0xc2, 0x0c, 0x13, 0xf8, 0x06, 0xb4, 0x7a, 0xa2, 0x59, 0x2a, 0xcd, 0xe0, 0xed, 0x82,
	0x4e, 0xd8, 0x66, 0xdb, 0xbb, 0x94, 0xfd, 0x08, 0x79, 0x54, 0xad, 0xd9, 0x5f, 0x59, 0xe0, 0x8c,
	0x37, 0x90, 0x77, 0x09, 0xfa, 0xe4, 0x85, 0x65, 0x73, 0xe3, 0xd4, 0xca, 0x1b, 0x67, 0x03, 0xda,
	0xb2, 0x43, 0x5c, 0x80, 0x5a, 0x8f, 0x81, 0x52, 0xa6, 0x68, 0x8b, 0x4e, 0xa3, 0xf5, 0xc2, 0x14,
	0x11, 0xa2, 0x4a, 0x8f, 0xc6, 0x38, 0x3d, 0x5e, 0x15, 0x1e, 0x1a, 0xca, 0xdf, 0x55, 0x0e, 0xc4,
	0xaf, 0x15, 0xa2, 0x7a, 0xa5, 0xeb, 0x30, 0x41, 0x09, 0x3a, 0x9f, 0x2f, 0xc5, 0x66, 0xa6, 0x29,
	0x2a, 0x11, 0xa1, 0x71, 0xa0, 0x4e, 0xf1, 0x7e, 0xb1, 0x22, 0x2a, 0xb3, 0xef, 0xc1, 0x0d, 0xe5,
	0xf5, 0xa3, 0xb8, 0xcd, 0x92, 0x0c, 0x79, 0xd0, 0x7b, 0xaa, 0xf5, 0xb8, 0x02, 0x91, 0x5e, 0x42,
	0x65, 0xe0, 0x2e, 0x92, 0x27, 0x5a, 0x8d, 0xa0, 0xc3, 0x5c, 0xcc, 0xc3, 0xdd, 0x38, 0x95, 0x82,
	0xa9, 0x40, 0xf6, 0x3d, 0x58, 0x2e, 0x0f, 0x9e, 0xc6, 0xce, 0x3d, 0x68, 0x8a, 0x98, 0xf5, 0x04,
	0x57, 0x96, 0xf0, 0xca, 0x24, 0x3d, 0xfa, 0x84, 0x2b, 0x5b, 0xa2, 0x4f, 0xf5, 0x6e, 0xe4, 0x87,
	0x32, 0x88, 0x65, 0x10, 0x01, 0x7b, 0x37, 0xda, 0x53, 0xab, 0x07, 0x0d, 0xb0, 0x47, 0xe9, 0x80,
	0xfd, 0xa4, 0x06, 0xb7, 0x0a, 0xef, 0x84, 0x5a, 0xe5, 0x01, 0xff, 0x60, 0x04, 0x50, 0x3a, 0xdd,
	0x9e, 0xac, 0xd3, 0xeb, 0x65, 0x9d, 0x7e, 0x1d, 0xaf, 0xc2, 0x10, 0xe3, 0x66, 0x59, 0x8c, 0x7f,
	0xf6, 0x3c, 0x87, 0x6d, 0x58, 0x9b, 0x44, 0xd0, 0x34, 0xd6, 0x52, 0x6a, 0x5d, 0x2d, 0xa5, 0xec,
	0x3b, 0xb0, 0x5a, 0xee, 0x65, 0x9b, 0xf7, 0x3e, 0x18, 0x57, 0xa4, 0xf5, 0xb2, 0xb5, 0xf5, 0x62,
	0x6f, 0xc1, 0xca, 0x98, 0xb5, 0x9b, 0xed, 0x92, 0x0a, 0x0b, 0x5f, 0x58, 0x87, 0x02, 0xc1, 0x76,
	0x60, 0x75, 0xbc, 0xb3, 0x34, 0x76, 0xee, 0x96, 0x16, 0x3b, 0xcb, 0xd0, 0x8a, 0x05, 0x77, 0x29,
	0x50, 0x60, 0x2a, 0x0b, 0x53, 0x40, 0xac, 0x2b, 0x04, 0x64, 0x8a, 0x67, 0xc3, 0xfe, 0xd4, 0xa2,
	0x68, 0x43, 0x49, 0xb1, 0x5c, 0xa7, 0xdf, 0x3b, 0xa5, 0x73, 0x8a, 0x53, 0x76, 0x64, 0x0d, 0xa5,
	0x42, 0x76, 0x75, 0x27, 0xe1, 0xe9, 0x90, 0x08, 0x4d, 0x76, 0x95, 0x40, 0x63, 0x66, 0xf5, 0xd2,
	0xcc, 0xde, 0x84, 0xf6, 0xc3, 0x8b, 0x1e, 0x39, 0x6c, 0x32, 0x6c, 0x36, 0xc9, 0x5d, 0x9b, 0x18,
	0x0b, 0xfc, 0x1a, 0xb4, 0xdf, 0xf1, 0xb3, 0xe1, 0x76, 0xe2, 0x9d, 0x4b, 0xbe, 0xc5, 0x5e, 0x9a,
	0x9e, 0x6b, 0xbe, 0x09, 0x08, 0x19, 0xdf, 0x0b, 0xd5, 0x61, 0x04, 0x8b, 0xec, 0x75, 0xb4, 0xb4,
	0x71, 0x94, 0xfa, 0xd9, 0x75, 0xbf, 0x5b, 0x3e, 0xe2, 0xd9, 0x03, 0x2f, 0x3c, 0x3d, 0xa4, 0x26,
	0xf8, 0xf5, 0x32, 0xd8, 0xea, 0xfa, 0xa8, 0xe1, 0x62, 0x11, 0x31, 0x21, 0x3f, 0x57, 0x36, 0x33,
	0xe4, 0xe7, 0xec, 0x65, 0x58, 0xc4, 0x8f, 0x9e, 0xc6, 0x68, 0x8b, 0x0e, 0xb2, 0x13, 0xd5, 0xb5,
	0x55, 0x74, 0xfd, 0x45, 0x58, 0x79, 0x9b, 0x27, 0xfe, 0xc9, 0x65, 0xb9, 0xf7, 0x29, 0x73, 0x63,
	0xcf, 0xa0, 0xdd, 0x4d, 0xbc, 0x30, 0x3d, 0x11, 0x47, 0x31, 0xc3, 0x1f, 0xb7, 0x85, 0x1f, 0xa6,
	0xee, 0x7f, 0x6b, 0xc6, 0xfd, 0x6f, 0xd1, 0x99, 0x5d, 0x5a, 0xe8, 0x24, 0x4b, 0x00, 0xd0, 0x92,
	0x91, 0xd0, 0xf7, 0xd8, 0x4d, 0x34, 0x60, 0x51, 0xca, 0xef, 0x8b, 0xdb, 0x75, 0x44, 0x39, 0x68,
	0xa8, 0x4c, 0x54, 0x1a, 0xb3, 0x03, 0xf4, 0xe1, 0xc3, 0xbe, 0xf0, 0x5f, 0x1e, 0x47, 0x3d, 0x2f,
	0xf3, 0xc5, 0xed, 0x54, 0x10, 0x85, 0x03, 0x3f, 0xcb, 0xfb, 0xca, 0x24, 0x17, 0x08, 0xf4, 0x9f,
	0x02, 0x2f, 0x13, 0x95, 0x32, 0x48, 0xab, 0x60, 0xb6, 0x07, 0xb7, 0xf6, 0xbf, 0x25, 0x9d, 0x24,
	0x9e, 0xe6, 0x41, 0x86, 0x92, 0x8b, 0xd4, 0x7b, 0xad, 0xb4, 0xa5, 0x0c, 0x6f, 0xa1, 0xdc, 0xdc,
	0xd8, 0x54, 0x7f, 0x61, 0xc1, 0x8b, 0x0f, 0xfc, 0x41, 0xf7, 0x3c, 0x9a, 0xd4, 0x9f, 0x03, 0xf5,
	0x61, 0xae, 0xef, 0x12, 0xa8, 0x4c, 0x46, 0xcc, 0xf7, 0xc2, 0xd8, 0x8b, 0x74, 0xfc, 0xbb, 0x40,
	0xa0, 0xd1, 0x4f, 0xf8, 0xc8, 0xf3, 0x43, 0xa4, 0x55, 0x2a, 0x15, 0xbd, 0x89, 0xd2, 0xdb, 0xbe,
	0x5e, 0xdd, 0xf6, 0x62, 0x1a, 0x63, 0x33, 0xec, 0xc1, 0x6d, 0x73, 0x82, 0x0f, 0xc3, 0x7e, 0x79,
	0x8e, 0x28, 0x54, 0xb9, 0x0a, 0x72, 0x63, 0xd1, 0xf9, 0xff, 0xa5, 0x2d, 0xf9, 0xa9, 0xea, 0x08,
	0xba, 0x07, 0x63, 0x90, 0x1f, 0x5a, 0xd0, 0xd9, 0xe5, 0xd9, 0x7e, 0x1e, 0x64, 0x7e, 0x1c, 0xf0,
	0x1d, 0x7f, 0x30, 0xcc, 0x76, 0x13, 0x4f, 0x1c, 0xb6, 0xae, 0xa3, 0x0e, 0x8c, 0x03, 0x9c, 0x94,
	0xb7, 0x62, 0x7b, 0xdb, 0xd5, 0x60, 0xc0, 0xa4, 0x00, 0x36, 0xdb, 0x83, 0x17, 0xa7, 0xcc, 0x24,
	0x8d, 0x75, 0x54, 0xc4, 0xaa, 0x46, 0x45, 0x8a, 0x76, 0xc6, 0xaa, 0x7e, 0xdb, 0x82, 0x17, 0x76,
	0xbd, 0x11, 0x9f, 0xc4, 0x5a, 0x06, 0xf5, 0x81, 0x8a, 0xc2, 0x8f, 0x2f, 0x88, 0xea, 0x9c, 0x6f,
	0x40, 0x33, 0xa1, 0x8f, 0xa4, 0xc7, 0xf0, 0x99, 0xa2, 0xd5, 0xa3, 0x28, 0x1c, 0x7c, 0x67, 0x18,
	0x85, 0x83, 0x7d, 0x6f, 0xf8, 0x6e, 0x44, 0x77, 0x7c, 0x79, 0x80, 0x1d, 0xa3, 0xbb, 0x21, 0x3e,
	0x7a, 0xd0, 0xa2, 0xcf, 0x83, 0x3c, 0x63, 0x7f, 0x66, 0xc1, 0xda, 0x61, 0xff, 0x74, 0xd2, 0x3c,
	0xd6, 0xa0, 0x79, 0xee, 0x87, 0x4f, 0x8b, 0x0b, 0x37, 0x01, 0x69, 0xc3, 0x5c, 0x33, 0x0c, 0xf3,
	0x2a, 0x34, 0x92, 0x28, 0x0f, 0x15, 0x25, 0x05, 0x40, 0x8a, 0xd1, 0x1f, 0xa9, 0xbb, 0x22, 0x2a,
	0x3b, 0x5f, 0x90, 0x74, 0x12, 0xc7, 0x8b, 0x17, 0x8c, 0xab, 0xb8, 0xfe, 0xe9, 0x18, 0xf3, 0x7f,
	0x62, 0xc1, 0x62, 0x09, 0x3f, 0x41, 0x6b, 0x74, 0x60, 0xee, 0xdc, 0x0f, 0xe9, 0xd2, 0x55, 0x5a,
	0x4f, 0x09, 0x62, 0xcd, 0x71, 0x34, 0x3a, 0x0e, 0x8b, 0x93, 0xa7, 0x04, 0x9d, 0x97, 0x00, 0xe8,
	0xc8, 0x93, 0xf6, 0xa2, 0x84, 0x4b, 0x2e, 0x1b, 0x18, 0xdc, 0x49, 0xd8, 0x54, 0x54, 0xcb, 0xd8,
	0xbe, 0x46, 0x28, 0x67, 0x51, 0xec, 0xa3, 0x26, 0xed, 0xa3, 0x02, 0x81, 0xb5, 0x43, 0x2f, 0xec,
	0x8b, 0xda, 0x39, 0x51, 0xab, 0x11, 0xec, 0xbb, 0xf0, 0xa2, 0x26, 0xf7, 0x73, 0x6c, 0x98, 0xbb,
	0xa5, 0x0d, 0xb3, 0x5e, 0xa2, 0xd6, 0xa4, 0xdd, 0xf2, 0x23, 0x0b, 0x96, 0xab, 0x55, 0x13, 0x68,
	0xa6, 0xd6, 0x7f, 0x44, 0x0b, 0xac, 0x19, 0xeb, 0x27, 0x8c, 0xf3, 0x0a, 0x2c, 0x12, 0x44, 0x21,
	0x9f, 0xe2, 0x88, 0x51, 0x46, 0x3a, 0x9b, 0x70, 0x43, 0x9e, 0x39, 0x74, 0x3b, 0x41, 0xca, 0x2a,
	0x9a, 0xfd, 0x93, 0x05, 0xeb, 0x3b, 0xfe, 0x19, 0xdf, 0xee, 0xbf, 0x3f, 0x49, 0xd2, 0x04, 0x0b,
	0xbb, 0x85, 0x0d, 0x55, 0xe0, 0x44, 0x59, 0x43, 0xe6, 0x78, 0x29, 0x17, 0x73, 0x97, 0xbe, 0xba,
	0x46, 0x14, 0x92, 0x58, 0x9f, 0x24, 0x89, 0x8d, 0x09, 0x92, 0xd8, 0xac, 0x4a, 0xe2, 0x76, 0xff,
	0xfd, 0x31, 0xc2, 0xfe, 0xa0, 0x06, 0x8b, 0x25, 0xfc, 0xb5, 0x24, 0xb1, 0x2c, 0x6f, 0xf6, 0x98,
	0xbc, 0xad, 0x43, 0xcb, 0xef, 0xf3, 0x30, 0xf3, 0xb3, 0x4b, 0x75, 0x24, 0x57, 0x30, 0xa5, 0x4a,
	0x60, 0x23, 0x17, 0x4f, 0x14, 0x52, 0x16, 0x35, 0x82, 0x0e, 0x7a, 0x3c, 0x1c, 0xbc, 0xed, 0x05,
	0x39, 0x97, 0xfe, 0x75, 0x81, 0xc0, 0x2d, 0x7c, 0xec, 0x85, 0xa7, 0x3c, 0x51, 0x39, 0x4f, 0x02,
	0x2a, 0x4b, 0x70, 0x6b, 0xa6, 0x04, 0xcf, 0x4f, 0x90, 0x60, 0xcd, 0xc6, 0x0f, 0x23, 0xc1, 0xdb,
	0xfd, 0xf7, 0xa7, 0x49, 0x70, 0xb5, 0xea, 0x67, 0x40, 0x82, 0xff, 0xc1, 0x82, 0x17, 0xa7, 0x6a,
	0xd6, 0xaa, 0x6d, 0xb5, 0xc6, 0x6d, 0xeb, 0x7d, 0x58, 0xf0, 0x82, 0xe0, 0x50, 0x49, 0xfe, 0xb8,
	0x05, 0x3c, 0xe4, 0x49, 0x1a, 0x85, 0x87, 0x3c, 0x11, 0x51, 0x66, 0x6c, 0xe4, 0x96, 0x3e, 0x99,
	0x11, 0x48, 0xeb, 0xc0, 0xdc, 0xc8, 0x13, 0x22, 0x50, 0xa7, 0xa1, 0x15, 0xc8, 0xfe, 0xa6, 0x06,
	0x2b, 0x13, 0x7a, 0x9e, 0x40, 0xd0, 0x75, 0x68, 0x8d, 0xfc, 0x70, 0x90, 0x79, 0xe1, 0x40, 0x06,
	0x9d, 0x35, 0x4c, 0xce, 0x86, 0x47, 0xca, 0xdd, 0x26, 0x67, 0xc3, 0x0b, 0xc9, 0x63, 0x3c, 0xc9,
	0x95, 0x85, 0xc4, 0x22, 0x0a, 0xdb, 0x20, 0xf7, 0x8b, 0x00, 0xa2, 0x84, 0xb0, 0xe5, 0xb9, 0x1f,
	0x4a, 0xe1, 0xc4, 0xa2, 0xf3, 0x06, 0x34, 0xe3, 0x3c, 0x8b, 0xf2, 0x8c, 0xf4, 0x63, 0xfb, 0xde,
	0xc6, 0x74, 0xeb, 0x75, 0x98, 0x67, 0x4f, 0xf2, 0xcc, 0x95, 0xed, 0x9d, 0x6f, 0xc0, 0x5c, 0x9f,
	0x67, 0x9e, 0x1f, 0x08, 0xb1, 0x9d, 0x69, 0xf8, 0x44, 0xc3, 0x77, 0xfc, 0xd0, 0x55, 0xdf, 0xa0,
	0xd4, 0xf8, 0xe9, 0x0e, 0x0f, 0x07, 0xdb, 0xea, 0xe4, 0xd8, 0x72, 0x0d, 0x0c, 0xbb, 0x0b, 0x6b,
	0x93, 0x27, 0x40, 0x89, 0x3d, 0x06, 0x6f, 0x05, 0xc0, 0x9e, 0x8d, 0x0b, 0x85, 0x1e, 0xb5, 0x74,
	0x2c, 0x98, 0x97, 0xc7, 0x82, 0x49, 0x17, 0x75, 0xeb, 0xd0, 0x3a, 0xf7, 0x43, 0xc1, 0x3e, 0x99,
	0x47, 0xa3, 0x60, 0xf6, 0x0c, 0xd6, 0x0b, 0x37, 0xe1, 0x39, 0x76, 0xdb, 0xd4, 0x4b, 0x2e, 0xec,
	0x65, 0xd2, 0x76, 0xfb, 0x4f, 0x0b, 0x6e, 0x8e, 0xd5, 0x99, 0x9a, 0xcc, 0x2a, 0x6b, 0xb2, 0xb1,
	0x7d, 0x55, 0x7b, 0xce, 0x7d, 0x65, 0x4f, 0xdc, 0x57, 0x4a, 0x10, 0xeb, 0x85, 0x20, 0xee, 0xc0,
	0xf2, 0x48, 0x90, 0x92, 0xe6, 0xd4, 0x8b, 0x28, 0xbf, 0xb3, 0x72, 0xc6, 0xdf, 0xaf, 0xb4, 0x70,
	0xc7, 0xbe, 0x61, 0x3f, 0xaa, 0xc1, 0x72, 0xb5, 0x19, 0xca, 0xe8, 0xfb, 0xfe, 0x28, 0xda, 0x0a,
	0xd5, 0xd9, 0x44, 0x40, 0xc8, 0x83, 0x77, 0x7d, 0x1e, 0x7b, 0x58, 0x23, 0x33, 0xe7, 0x14, 0x6c,
	0xb8, 0xd5, 0x5b, 0xa1, 0x8e, 0x0d, 0x29, 0x04, 0xa5, 0x08, 0x84, 0x03, 0x2f, 0x1c, 0x6c, 0x85,
	0x3a, 0x45, 0x40, 0xc2, 0x28, 0x6e, 0xb8, 0x87, 0x64, 0xad, 0xd8, 0x15, 0x06, 0x06, 0x7b, 0xee,
	0x0d, 0xbd, 0x77, 0x7d, 0xea, 0x59, 0x2a, 0x6f, 0x8d, 0x20, 0xb9, 0xc8, 0x65, 0xe5, 0x9c, 0x94,
	0x0b, 0x09, 0x23, 0x83, 0x86, 0xb9, 0xf7, 0x7e, 0xbe, 0x15, 0xca, 0xf8, 0x88, 0x02, 0x71, 0xcc,
	0xde, 0xd0, 0x53, 0x95, 0x22, 0x68, 0x6d, 0x60, 0xd8, 0x1f, 0x5a, 0xb0, 0x32, 0xc1, 0xdb, 0xfe,
	0x38, 0x59, 0xce, 0x76, 0x60, 0x6d, 0xdc, 0xab, 0xa6, 0x59, 0x5d, 0xcf, 0xab, 0xfe, 0x47, 0x1b,
	0x96, 0x2a, 0x1d, 0xe8, 0xc4, 0x3d, 0x6b, 0x42, 0xe2, 0x5e, 0xad, 0x48, 0xdc, 0x2b, 0xb2, 0x83,
	0xed, 0x52, 0x76, 0xb0, 0xdc, 0x62, 0xf5, 0x62, 0x8b, 0x7d, 0x55, 0x5a, 0x1e, 0x1a, 0x48, 0xba,
	0xb1, 0xb7, 0xaa, 0x7a, 0x9c, 0x2a, 0x5d, 0xa3, 0xa1, 0xf3, 0x35, 0x68, 0x0b, 0xd5, 0x20, 0xbe,
	0x6b, 0xce, 0xfa, 0xce, 0x6c, 0x49, 0x21, 0x1c, 0x1e, 0x07, 0xde, 0xe5, 0x9e, 0xf4, 0x27, 0xe7,
	0xdd, 0x02, 0x61, 0x9c, 0x61, 0x5a, 0xa5, 0x33, 0x8c, 0x79, 0x32, 0x9a, 0xbf, 0xe2, 0x64, 0xb4,
	0x59, 0x8a, 0x86, 0x2d, 0x99, 0x79, 0x6f, 0x4f, 0xdc, 0xbd, 0xdd, 0xbd, 0x03, 0x9d, 0x49, 0xa2,
	0xb3, 0xab, 0xda, 0xe2, 0xfa, 0x5f, 0x64, 0x57, 0x6d, 0x42, 0x73, 0xe4, 0x5d, 0xa0, 0x8e, 0x5f,
	0xa8, 0xe6, 0xcd, 0xed, 0x53, 0x38, 0xcf, 0x95, 0xf5, 0x24, 0x9c, 0x2a, 0x5e, 0xd6, 0x97, 0xf9,
	0x26, 0x06, 0x86, 0x7d, 0x1f, 0x9a, 0xe2, 0x0b, 0x14, 0x47, 0x71, 0x5f, 0x2e, 0x34, 0xae, 0xed,
	0x2a, 0x50, 0xe5, 0x7d, 0x77, 0x55, 0x8a, 0xe6, 0xbc, 0xab, 0x61, 0xf2, 0xa3, 0xd2, 0x43, 0x9e,
	0x9c, 0xc8, 0xfb, 0xe0, 0x96, 0xab, 0xe1, 0x6a, 0xd0, 0xbb, 0x3e, 0x1e, 0xf4, 0xfe, 0x2e, 0xb4,
	0x0d, 0x2e, 0x4c, 0xcc, 0x86, 0x5a, 0x85, 0xc6, 0x09, 0xf1, 0x4f, 0x98, 0x48, 0x01, 0x28, 0x89,
	0xb6, 0x4b, 0xa1, 0x8c, 0x6a, 0xce, 0x2b, 0xfb, 0xfd, 0x1a, 0x38, 0xe3, 0xa7, 0x7d, 0x67, 0x09,
	0x6a, 0xc3, 0x5c, 0xee, 0xb9, 0xda, 0x30, 0x47, 0x8e, 0x0e, 0x73, 0xba, 0xe7, 0x92, 0x91, 0x23,
	0x01, 0xe1, 0x20, 0x03, 0xae, 0x14, 0x10, 0x16, 0x29, 0x36, 0x12, 0xf9, 0x61, 0x96, 0xaa, 0x73,
	0xaa, 0x80, 0x70, 0x92, 0xa3, 0x28, 0xe4, 0x97, 0x52, 0xe3, 0x08, 0x00, 0x29, 0xca, 0x2f, 0x7a,
	0x41, 0xde, 0x57, 0x7e, 0xa2, 0x02, 0xcd, 0x1b, 0xb1, 0x62, 0xfa, 0x64, 0xf0, 0x85, 0x6b, 0x28,
	0x0c, 0xbe, 0x03, 0xf5, 0x74, 0x18, 0x9d, 0x4b, 0x87, 0x90, 0xca, 0xce, 0xd7, 0x0b, 0x73, 0x0c,
	0x24, 0xd0, 0x6c, 0x5a, 0x60, 0x63, 0x9b, 0x9a, 0xd1, 0x5e, 0x55, 0x9f, 0xb0, 0xdf, 0xb0, 0xa0,
	0x33, 0xad, 0x15, 0x51, 0x50, 0x25, 0xfd, 0x34, 0x44, 0x82, 0x8f, 0xb1, 0xe0, 0x5a, 0x69, 0xc1,
	0xe3, 0xf4, 0xd7, 0x24, 0xa8, 0x9b, 0x24, 0x90, 0x24, 0x6c, 0x68, 0x12, 0xb2, 0xdf, 0xad, 0xc1,
	0x72, 0x35, 0xba, 0x31, 0x43, 0x15, 0x4e, 0x39, 0xfa, 0x0e, 0xf3, 0x13, 0x4f, 0x71, 0x46, 0x00,
	0x22, 0x3e, 0x73, 0xe1, 0xab, 0xf8, 0x14, 0x96, 0xd5, 0x34, 0x1b, 0xa5, 0x08, 0xc4, 0x30, 0xa7,
	0x38, 0x56, 0x53, 0xf1, 0x9a, 0xde, 0x2f, 0x98, 0xce, 0xd8, 0x5c, 0xc5, 0x19, 0x7b, 0xd5, 0xe0,
	0x4d, 0x49, 0x83, 0x88, 0x75, 0xa0, 0x34, 0xa7, 0x92, 0x65, 0x5f, 0xd4, 0x7e, 0xd6, 0xfc, 0xac,
	0xc6, 0xb2, 0x11, 0xfb, 0x0c, 0xb4, 0x0d, 0xf4, 0x14, 0x97, 0xe7, 0x8f, 0x2d, 0x00, 0xd1, 0x4a,
	0xb1, 0x89, 0x66, 0x63, 0x19, 0x92, 0xb2, 0x0a, 0x8d, 0x30, 0xca, 0x53, 0x95, 0xbc, 0x20, 0x00,
	0x63, 0x32, 0xf6, 0x73, 0x4c, 0x86, 0x9e, 0x93, 0xc4, 0x92, 0x7c, 0xb5, 0x28, 0xa6, 0x53, 0x5f,
	0x9e, 0x66, 0xd4, 0x88, 0xb4, 0x2e, 0x9e, 0xfa, 0x14, 0x82, 0x3d, 0x86, 0xa5, 0xa2, 0x13, 0x35,
	0x31, 0xd4, 0x91, 0xf2, 0xaa, 0x94, 0xca, 0x13, 0x42, 0x40, 0xab, 0xd0, 0x38, 0x33, 0x1c, 0x2f,
	0x01, 0xb0, 0x7f, 0x9e, 0x83, 0x96, 0xbe, 0xed, 0xbe, 0x4e, 0x8c, 0x49, 0xbc, 0x72, 0xa9, 0xe9,
	0x57, 0x2e, 0x32, 0x66, 0x2a, 0xf7, 0x6c, 0x2f, 0xcc, 0xf4, 0xcb, 0x94, 0x7a, 0xf9, 0x65, 0x8a,
	0xd4, 0xe1, 0x8d, 0xea, 0x6d, 0x19, 0x39, 0x90, 0xcd, 0x72, 0x5c, 0x79, 0xda, 0x2b, 0x96, 0xb1,
	0xdb, 0x92, 0x55, 0x68, 0x04, 0xfe, 0xc8, 0xcf, 0x54, 0xd2, 0x38, 0x01, 0xd8, 0x43, 0x9a, 0x79,
	0x59, 0x9e, 0xaa, 0xbb, 0x0f, 0x01, 0x29, 0x9b, 0xd8, 0x2e, 0x6c, 0x22, 0xda, 0xbe, 0x48, 0xbc,
	0x5a, 0xb1, 0x5d, 0x2c, 0xe2, 0xb7, 0x7d, 0xee, 0x05, 0x3c, 0x21, 0xdd, 0x6d, 0xbb, 0x12, 0x2a,
	0xac, 0xec, 0x92, 0x69, 0x65, 0x75, 0x52, 0xaf, 0x78, 0x9e, 0x22, 0x93, 0x7a, 0xf5, 0x01, 0x7d,
	0xd9, 0x3c, 0xa0, 0x2f, 0x83, 0x7d, 0xcc, 0x33, 0x7a, 0x7d, 0xd2, 0x70, 0xb1, 0x68, 0x26, 0x24,
	0x38, 0xa5, 0x84, 0x04, 0x7d, 0x57, 0xb5, 0x22, 0xd6, 0x4a, 0x77, 0x55, 0xab, 0xd0, 0x88, 0xa3,
	0x73, 0x9e, 0xc8, 0x37, 0x27, 0x02, 0x28, 0xec, 0xd5, 0x2d, 0x33, 0x1b, 0x18, 0xad, 0x50, 0x4e,
	0xa7, 0x21, 0xec, 0x7c, 0x4d, 0x5a, 0x21, 0x8d, 0xc1, 0x91, 0x55, 0xe5, 0x0b, 0x62, 0xe4, 0xdd,
	0xe2, 0xc6, 0x6a, 0x2b, 0x4f, 0x84, 0xc6, 0xea, 0x74, 0x44, 0x84, 0x55, 0x23, 0xf0, 0xbb, 0x03,
	0x7e, 0xee, 0xa2, 0x38, 0xbd, 0x28, 0x8e, 0x61, 0x12, 0x34, 0x22, 0x8a, 0xeb, 0xa5, 0xcc, 0xcc,
	0xd7, 0xa0, 0x19, 0xc5, 0xb4, 0xff, 0x3f, 0x59, 0xbd, 0x2a, 0x2c, 0x8b, 0xb3, 0x2b, 0xdb, 0xa1,
	0x15, 0xa3, 0x0c, 0xd4, 0x23, 0xc1, 0xc2, 0xdb, 0x64, 0x1b, 0x4d, 0x94, 0xf3, 0xba, 0xc8, 0xe8,
	0xc4, 0xe3, 0x7c, 0xe7, 0x53, 0x55, 0xbf, 0x99, 0x9c, 0x30, 0x79, 0x59, 0x29, 0x6f, 0xa6, 0x65,
	0x5b, 0xe7, 0x4d, 0x98, 0x8f, 0xbd, 0xa8, 0xcf, 0x4f, 0x73, 0xcf, 0xef, 0xbc, 0x44, 0x1f, 0x1a,
	0xe7, 0x87, 0x43, 0x2f, 0xda, 0xe6, 0x6f, 0xe5, 0x9e, 0xaf, 0x2f, 0x4f, 0x8a, 0xd6, 0x14, 0x68,
	0xe3, 0xe1, 0xbb, 0x78, 0xa6, 0xfa, 0xb4, 0x0c, 0xb4, 0x09, 0x50, 0xa5, 0x97, 0xd2, 0xed, 0xff,
	0x86, 0x30, 0xd6, 0x0a, 0x46, 0xa2, 0xf0, 0x8b, 0x18, 0x95, 0xc7, 0xcb, 0xb4, 0x0a, 0x09, 0x39,
	0xdb, 0x70, 0xc3, 0xbc, 0xb0, 0xc3, 0x5e, 0x5f, 0xbd, 0xf2, 0x8e, 0xaf, 0xfa, 0x09, 0xfb, 0x32,
	0xdc, 0x1c, 0x9b, 0x33, 0x71, 0x9e, 0xb2, 0xba, 0xe9, 0x54, 0x21, 0x74, 0x96, 0x81, 0x61, 0xdf,
	0x82, 0xe5, 0x2a, 0x85, 0xcc, 0xdb, 0x39, 0x6b, 0xc6, 0xa5, 0x71, 0xad, 0x72, 0x69, 0xcc, 0x7e,
	0xd2, 0x84, 0x66, 0x91, 0x17, 0xe1, 0xa7, 0xf7, 0xf3, 0x2c, 0x92, 0xda, 0x48, 0x42, 0x02, 0xff,
	0xb6, 0x2f, 0x2f, 0x5e, 0x08, 0x8f, 0x90, 0x74, 0x09, 0x6c, 0xed, 0x12, 0x18, 0xa6, 0xbb, 0x5e,
	0x36, 0xdd, 0x42, 0x4b, 0x36, 0xb4, 0x96, 0x24, 0x83, 0xd2, 0x2d, 0x94, 0x86, 0x84, 0xcc, 0xcd,
	0x34, 0x57, 0xde, 0x4c, 0x85, 0x3a, 0x68, 0x95, 0xd4, 0x01, 0x6d, 0x75, 0xca, 0xe5, 0x10, 0xda,
	0x43, 0x42, 0xa4, 0x80, 0x44, 0x08, 0x43, 0xaa, 0x0f, 0x01, 0x09, 0xfc, 0x39, 0x8a, 0x72, 0x5b,
	0xe1, 0xcf, 0xa5, 0xb7, 0x8f, 0x1b, 0x7b, 0xa1, 0xd8, 0xd8, 0x7a, 0xab, 0x2e, 0x9a, 0x5b, 0x75,
	0x1d, 0x5a, 0x83, 0xb7, 0x23, 0xbf, 0xc7, 0xf7, 0xfa, 0xf2, 0xc1, 0x9b, 0x86, 0x0b, 0xf5, 0x72,
	0x63, 0x82, 0x13, 0xbf, 0x5c, 0x7a, 0x7d, 0x23, 0xac, 0xfe, 0x4d, 0xd1, 0x4e, 0x5b, 0x7d, 0xd4,
	0xfa, 0xce, 0xb8, 0x77, 0xb6, 0x52, 0x4e, 0xb7, 0x26, 0x6f, 0x6f, 0xd5, 0xf0, 0xf6, 0xc4, 0xb3,
	0xb7, 0x5b, 0xfa, 0xd9, 0x9b, 0xb6, 0x88, 0x6b, 0x86, 0x45, 0xd4, 0x8e, 0xd1, 0x0b, 0x86, 0x63,
	0xe4, 0x40, 0xfd, 0x24, 0x0a, 0xfa, 0x9d, 0x8e, 0xc0, 0x9d, 0xc8, 0xf7, 0x32, 0x3d, 0x99, 0x39,
	0x2d, 0xf5, 0x83, 0x86, 0x9d, 0x37, 0xa0, 0x35, 0x7a, 0x57, 0x86, 0x86, 0xd6, 0x49, 0xd8, 0x67,
	0x5f, 0x11, 0xe9, 0xd6, 0xce, 0x57, 0x00, 0x8e, 0xfd, 0x41, 0x26, 0xcc, 0xb1, 0x54, 0x23, 0xab,
	0x55, 0x35, 0x42, 0xdf, 0x18, 0xed, 0x94, 0x13, 0x4d, 0xc7, 0xb4, 0xdb, 0xc5, 0xe3, 0x49, 0x75,
	0x3e, 0x4b, 0xf9, 0x05, 0xe9, 0x8e, 0xf2, 0xe3, 0xbd, 0x97, 0xa6, 0x3e, 0xde, 0x43, 0x63, 0xeb,
	0x7b, 0x91, 0xdc, 0xfd, 0x54, 0x36, 0xb6, 0xf7, 0x46, 0x69, 0x7b, 0x17, 0x49, 0x3e, 0x2f, 0x9b,
	0x49, 0x3e, 0xa8, 0xd9, 0x04, 0xc3, 0xc5, 0xe3, 0x53, 0x46, 0x54, 0x37, 0x51, 0xec, 0x9b, 0x60,
	0xef, 0xc6, 0xe9, 0x87, 0xb8, 0x9d, 0xfb, 0x6b, 0x5b, 0xbd, 0x78, 0x30, 0xb2, 0xfd, 0xe4, 0x0e,
	0xb4, 0x4a, 0x3b, 0xd0, 0x34, 0xfa, 0xb5, 0x2b, 0x8c, 0xbe, 0x32, 0xd3, 0xb6, 0x61, 0xa6, 0x95,
	0x39, 0xae, 0x1b, 0xe6, 0xd8, 0x88, 0xdf, 0x35, 0xca, 0xf1, 0x3b, 0x65, 0xd0, 0x9a, 0x86, 0x41,
	0x2b, 0x9c, 0x82, 0xb9, 0x92, 0x53, 0x50, 0x1c, 0xd6, 0x5a, 0x57, 0x1c, 0xd6, 0x36, 0xa0, 0x9d,
	0xf9, 0xbd, 0x53, 0xde, 0xcb, 0xf6, 0xa3, 0xbe, 0xca, 0x5f, 0x33, 0x51, 0xf4, 0x30, 0x00, 0xb7,
	0x12, 0x4e, 0x09, 0xe4, 0xc3, 0x00, 0x09, 0xa3, 0xaa, 0x3c, 0x16, 0x8e, 0x31, 0xda, 0xb3, 0xb6,
	0x50, 0x95, 0x05, 0xc6, 0xcc, 0x89, 0x59, 0x28, 0xe5, 0xc4, 0x4c, 0x4c, 0xd2, 0x58, 0xbc, 0x7e,
	0x92, 0x06, 0xfb, 0x13, 0x0b, 0x96, 0xab, 0xcd, 0x9c, 0xb7, 0xe0, 0x66, 0xe8, 0x87, 0x83, 0x5f,
	0xcc, 0xbd, 0x90, 0xb0, 0x6e, 0x1e, 0xa8, 0x3c, 0x1b, 0xc3, 0x5a, 0x1d, 0x54, 0x9b, 0x3c, 0xfa,
	0x84, 0x3b, 0xfe, 0x9d, 0xf3, 0x0a, 0xd4, 0x87, 0xea, 0xc2, 0xb9, 0xf4, 0x74, 0xec, 0x51, 0x14,
	0xf4, 0x1f, 0x7d, 0xc2, 0xa5, 0xda, 0x07, 0x37, 0x60, 0x51, 0xcc, 0x4d, 0x86, 0x50, 0x59, 0x04,
	0x37, 0xc7, 0x06, 0x20, 0xc3, 0xdc, 0xef, 0x3f, 0xe0, 0xfe, 0x51, 0x96, 0xf8, 0xb1, 0x34, 0x15,
	0x26, 0x4a, 0xb6, 0xd8, 0xe1, 0xa1, 0x68, 0x51, 0xd3, 0x2d, 0x14, 0x8a, 0x92, 0x06, 0x08, 0x54,
	0x41, 0x08, 0x01, 0xb1, 0x26, 0xd4, 0x71, 0x46, 0xec, 0xa7, 0x36, 0x40, 0x91, 0x85, 0x8b, 0x2c,
	0xa2, 0xfc, 0x3f, 0x11, 0x03, 0x17, 0x23, 0x1a, 0x18, 0xdc, 0x28, 0x6f, 0xf9, 0xbd, 0x53, 0x33,
	0x44, 0x5e, 0x20, 0x70, 0x3a, 0x0f, 0xa2, 0x2c, 0x8b, 0x46, 0xe6, 0x45, 0x8a, 0x89, 0x72, 0xee,
	0x82, 0xb3, 0xeb, 0x9f, 0xf1, 0xfb, 0xe7, 0xde, 0xa5, 0x31, 0x8e, 0x10, 0xe9, 0x09, 0x35, 0x28,
	0x12, 0x7b, 0xe9, 0x8e, 0x7f, 0xc1, 0x95, 0x23, 0xab, 0x40, 0x51, 0x73, 0xd4, 0xf3, 0xb4, 0x8c,
	0x2b, 0x10, 0xd7, 0x40, 0x4d, 0x44, 0xdf, 0x42, 0xd4, 0x0d, 0x0c, 0xad, 0x11, 0x1b, 0x8a, 0xfa,
	0x16, 0xbd, 0x63, 0x32, 0x30, 0xe4, 0xab, 0xf9, 0x67, 0xfc, 0x49, 0xa8, 0x04, 0x5c, 0x81, 0xaa,
	0xa6, 0x7b, 0x1e, 0x49, 0xd9, 0x56, 0x20, 0xd2, 0x85, 0x8a, 0xc3, 0x84, 0x73, 0x69, 0xad, 0x0a,
	0x84, 0xf3, 0x0a, 0x2c, 0xee, 0xe6, 0x5e, 0xe2, 0x85, 0x19, 0xe7, 0x7d, 0xec, 0x57, 0x98, 0xae,
	0x32, 0xb2, 0xdc, 0x0a, 0xc7, 0x58, 0xac, 0xb6, 0xc2, 0x91, 0x36, 0xe1, 0x86, 0x81, 0xa0, 0xf1,
	0x84, 0x6d, 0xab, 0xa2, 0xd9, 0x2f, 0xa9, 0x07, 0x50, 0x3a, 0x5f, 0xf9, 0x0e, 0xd4, 0x51, 0x25,
	0x8f, 0xbf, 0x7a, 0x29, 0xd2, 0x57, 0xb0, 0xde, 0x61, 0x60, 0x47, 0x21, 0x97, 0x32, 0x6c, 0x3e,
	0x6d, 0x14, 0x36, 0x03, 0x2b, 0xd9, 0x91, 0x78, 0x19, 0xa3, 0xb4, 0x9e, 0x3a, 0x84, 0x58, 0x13,
	0x9f, 0xc7, 0xd7, 0x4a, 0x07, 0x0b, 0x63, 0x9f, 0xdb, 0xe5, 0xdc, 0xb7, 0xdf, 0xb2, 0x60, 0xc1,
	0x4c, 0x4f, 0xfb, 0x28, 0x67, 0x4c, 0x6a, 0x2e, 0x1b, 0xf2, 0x24, 0x9d, 0xf0, 0x66, 0x53, 0x34,
	0x93, 0xf5, 0xf2, 0x95, 0x12, 0x65, 0x25, 0x79, 0x99, 0xe7, 0xf2, 0xf7, 0xd8, 0x0f, 0x8a, 0xc4,
	0x21, 0x81, 0xfa, 0xd8, 0xe6, 0xd6, 0x87, 0x85, 0xae, 0x17, 0x9c, 0x76, 0xa3, 0xfb, 0x41, 0x80,
	0x84, 0x2f, 0xfe, 0x05, 0xa1, 0xa1, 0xfe, 0x05, 0x61, 0xec, 0xa9, 0xb1, 0xf1, 0x2c, 0xd8, 0x2e,
	0x3f, 0x0b, 0x2e, 0x1e, 0x29, 0xd4, 0x4b, 0x8f, 0x14, 0xce, 0x61, 0xd1, 0x18, 0xa5, 0x9c, 0xea,
	0x2e, 0x3d, 0x9e, 0xe2, 0x60, 0x5a, 0x1e, 0xd8, 0x9e, 0x3c, 0x70, 0x7d, 0xda, 0xc0, 0x8d, 0xd2,
	0xc0, 0x8b, 0xe2, 0xd1, 0x93, 0x14, 0x2b, 0x76, 0x09, 0x6d, 0x95, 0xac, 0x75, 0x90, 0x9d, 0x7c,
	0x14, 0x39, 0x60, 0x3a, 0x87, 0xcb, 0x9e, 0x9d, 0xc3, 0xc5, 0xbe, 0x5a, 0x08, 0x38, 0x0e, 0x7d,
	0x07, 0x1a, 0xc4, 0x01, 0xc9, 0xee, 0x71, 0x06, 0x89, 0x6a, 0xb6, 0x53, 0x2c, 0x40, 0xde, 0xa7,
	0x54, 0xe8, 0xf6, 0x59, 0x68, 0xf0, 0x24, 0x89, 0x12, 0xe9, 0x04, 0x18, 0x7f, 0x04, 0xf2, 0xd0,
	0x75, 0x9f, 0xb8, 0xae, 0xa8, 0x65, 0x5d, 0x68, 0xed, 0x7b, 0x59, 0x6f, 0x78, 0xdd, 0x9c, 0x14,
	0xca, 0x80, 0xcc, 0x7a, 0xc3, 0x6e, 0x21, 0x04, 0x05, 0x82, 0xfd, 0xa6, 0x05, 0xf3, 0xb2, 0xdb,
	0x8f, 0x4d, 0x82, 0xdb, 0xf4, 0x27, 0x1e, 0x51, 0x4e, 0x19, 0x54, 0x0b, 0x00, 0x0a, 0x48, 0x63,
	0xe6, 0x02, 0x6c, 0x45, 0xa3, 0x91, 0x7c, 0x9e, 0xfd, 0x1c, 0x7f, 0x98, 0xf2, 0x32, 0xd8, 0x3c,
	0x99, 0x4a, 0x4a, 0xac, 0x63, 0x00, 0xad, 0x47, 0xdc, 0x4b, 0x68, 0xb4, 0x36, 0xcc, 0xcb, 0x72,
	0x1a, 0xb3, 0xbf, 0xb7, 0x60, 0xee, 0x81, 0x1f, 0x52, 0x82, 0xd9, 0xdd, 0xca, 0x0b, 0xda, 0xab,
	0xfe, 0x17, 0x45, 0xfd, 0x03, 0x4a, 0xcd, 0xf8, 0x07, 0x14, 0xe3, 0x7f, 0x58, 0xec, 0x89, 0xff,
	0xc3, 0x52, 0x2f, 0xfe, 0x87, 0x45, 0xff, 0x5b, 0x4a, 0x63, 0xd6, 0xbf, 0xa5, 0x34, 0xc7, 0xff,
	0x2d, 0x85, 0xbd, 0x09, 0x4b, 0xfb, 0x78, 0x06, 0x29, 0xb2, 0xe8, 0x3e, 0x57, 0xba, 0xd0, 0x58,
	0x31, 0x9c, 0x7c, 0x6c, 0x67, 0x48, 0xb4, 0x78, 0xee, 0x2b, 0xb8, 0x41, 0xa6, 0x4e, 0xfc, 0x09,
	0x82, 0x53, 0x45, 0xa6, 0xf1, 0xf4, 0x3e, 0xa9, 0x89, 0xd1, 0x67, 0x0a, 0xf3, 0x1a, 0x85, 0x5b,
	0x8e, 0xa2, 0x5d, 0x2a, 0xbe, 0x27, 0xa1, 0x22, 0x6a, 0x53, 0x33, 0xa3, 0x36, 0x13, 0x43, 0xdc,
	0xcf, 0xf3, 0x52, 0x8d, 0x3d, 0x83, 0x79, 0xbd, 0xb6, 0x89, 0xa9, 0x92, 0x3a, 0x06, 0x27, 0x9f,
	0x6c, 0x13, 0x60, 0xf8, 0xb9, 0xf6, 0x6c, 0x3f, 0x97, 0x7d, 0x1d, 0x1c, 0x74, 0xcb, 0x2a, 0x84,
	0xd6, 0xbd, 0x5a, 0x66, 0xaf, 0x63, 0x11, 0x40, 0xf6, 0x0e, 0xb4, 0x29, 0x69, 0xf0, 0x20, 0x1f,
	0xc9, 0xcf, 0xc4, 0xea, 0x2d, 0x73, 0xf5, 0x9d, 0xe2, 0xbd, 0xbf, 0xcc, 0xec, 0x90, 0xa0, 0x38,
	0x58, 0xd3, 0x1f, 0xaa, 0xa8, 0x4b, 0x79, 0x09, 0xb2, 0x47, 0xb0, 0x86, 0x8c, 0xda, 0xf1, 0x79,
	0xd0, 0x7f, 0xee, 0x47, 0x68, 0x93, 0x5e, 0x0c, 0xb2, 0x1e, 0xbc, 0x30, 0xb1, 0xa7, 0x19, 0x89,
	0xf6, 0xaf, 0x95, 0xee, 0x81, 0x6f, 0x4f, 0x7b, 0xa3, 0xd7, 0x4d, 0x38, 0x97, 0xb2, 0xf1, 0x3f,
	0x16, 0x38, 0xe3, 0x95, 0xd7, 0x7a, 0xa3, 0x57, 0x8d, 0x7e, 0xbe, 0x04, 0x90, 0xe6, 0x31, 0x4f,
	0xfc, 0x28, 0xd9, 0x53, 0xa2, 0x63, 0x60, 0xc4, 0x5f, 0x1f, 0x64, 0x7c, 0x90, 0x78, 0x81, 0xb4,
	0x68, 0x1a, 0x46, 0x3e, 0x0c, 0x12, 0xaf, 0xaf, 0x32, 0x5e, 0x04, 0x80, 0x3d, 0xc6, 0x49, 0x14,
	0x47, 0x49, 0xe6, 0x47, 0x62, 0xc7, 0xd5, 0x5c, 0x03, 0xa3, 0x97, 0x3d, 0xf7, 0xdc, 0xcb, 0x7e,
	0x9f, 0xd2, 0x63, 0x0f, 0x75, 0x17, 0x1f, 0x80, 0x3f, 0xd3, 0xde, 0x20, 0x56, 0x66, 0x5b, 0xaf,
	0xce, 0x96, 0x65, 0xb0, 0x74, 0xc4, 0xb3, 0x3d, 0xb9, 0xe4, 0x8f, 0x72, 0xe4, 0x19, 0x94, 0x65,
	0x27, 0x34, 0x2a, 0x11, 0xe4, 0x8a, 0x27, 0x6b, 0xaf, 0xc0, 0x62, 0x1a, 0x07, 0x3e, 0x9d, 0x15,
	0x0d, 0x0b, 0x55, 0x46, 0x1a, 0x73, 0xb3, 0x4b, 0x52, 0xfb, 0x7d, 0x43, 0xfe, 0x0f, 0x79, 0x32,
	0xf2, 0xd3, 0xf4, 0x23, 0xa6, 0xef, 0x3a, 0xb4, 0x42, 0x7e, 0xfe, 0x98, 0x9f, 0x71, 0xb1, 0xca,
	0x45, 0x57, 0xc3, 0xec, 0xcb, 0x70, 0x0b, 0xcd, 0x85, 0x50, 0x95, 0xbb, 0x22, 0x90, 0xb4, 0x2d,
	0xff, 0xc0, 0x41, 0xc7, 0x99, 0xac, 0x72, 0x9c, 0x89, 0xed, 0xc0, 0xda, 0xa4, 0x8f, 0x26, 0x7a,
	0x54, 0x66, 0x3f, 0xb5, 0x4a, 0x3f, 0x0f, 0x60, 0xf1, 0x88, 0x67, 0xbb, 0x71, 0xaa, 0xd2, 0xf3,
	0x65, 0x00, 0xc5, 0x9a, 0x1a, 0x40, 0x19, 0xd7, 0x4b, 0x5b, 0xc4, 0x26, 0xdd, 0x47, 0x1a, 0x7f,
	0x90, 0x4e, 0xfe, 0xd5, 0xa2, 0x3f, 0xb9, 0x20, 0x66, 0x8b, 0x9b, 0xd8, 0xff, 0xb3, 0xa4, 0x59,
	0xf5, 0x82, 0x49, 0xe6, 0x7a, 0xd2, 0x0b, 0x26, 0x07, 0xea, 0xb1, 0x37, 0x50, 0x7b, 0x98, 0xca,
	0xd5, 0x6b, 0xd8, 0xe6, 0xd8, 0x35, 0xac, 0x11, 0x2c, 0x9f, 0x2b, 0xa5, 0xdf, 0xfe, 0x79, 0x8d,
	0x4c, 0xa2, 0xb9, 0x98, 0x59, 0x79, 0xb7, 0x45, 0xbb, 0x72, 0xae, 0x7f, 0x2f, 0x4f, 0x0e, 0x71,
	0x52, 0x52, 0x91, 0x4b, 0x50, 0x26, 0x94, 0x45, 0x5e, 0x40, 0x95, 0x45, 0x8a, 0x9e, 0xc4, 0x50,
	0x9e, 0x47, 0x10, 0xbc, 0xe3, 0x87, 0x46, 0x9e, 0x87, 0x84, 0xe9, 0x64, 0x4f, 0xe5, 0xc3, 0xc8,
	0x0f, 0x33, 0xf5, 0x9e, 0xca, 0x40, 0xc9, 0xaf, 0xd1, 0x4c, 0xa5, 0x72, 0xc9, 0x1a, 0x76, 0xee,
	0xc0, 0x92, 0xc8, 0xf3, 0x3a, 0xe1, 0x99, 0x68, 0x21, 0xd6, 0x5d, 0xc1, 0xd2, 0x0c, 0xfd, 0x11,
	0x4f, 0x33, 0xee, 0x8d, 0x62, 0x3a, 0x0a, 0xdb, 0xae, 0x81, 0x61, 0x3f, 0xae, 0xc9, 0xf7, 0xea,
	0x7a, 0xd1, 0x74, 0xd0, 0x33, 0xae, 0xb0, 0x29, 0x75, 0x78, 0x9c, 0xa5, 0xca, 0x92, 0xdb, 0xe5,
	0x8b, 0xee, 0x91, 0x77, 0xa1, 0xd7, 0x2a, 0x00, 0x95, 0xca, 0xd5, 0x28, 0x52, 0xb9, 0xcc, 0xdb,
	0xf8, 0x66, 0xe5, 0x36, 0x5e, 0xe5, 0xe8, 0x99, 0x8b, 0x32, 0x30, 0x24, 0x0a, 0xc6, 0xaa, 0x5b,
	0x52, 0x14, 0x8c, 0x25, 0xaf, 0x57, 0xb2, 0x18, 0x1a, 0x86, 0x68, 0x56, 0x04, 0x09, 0x66, 0x09,
	0x52, 0xf9, 0x75, 0xe5, 0xbf, 0x58, 0xe4, 0x46, 0x49, 0x5a, 0x89, 0x94, 0x8b, 0x8f, 0x7d, 0x5f,
	0xcc, 0x22, 0xe4, 0xb4, 0x1d, 0xf1, 0xab, 0xfa, 0xef, 0x1c, 0x8a, 0x75, 0x5c, 0x37, 0x15, 0xfd,
	0x83, 0x6f, 0x09, 0xb6, 0xa9, 0x4f, 0xde, 0xc6, 0x33, 0x24, 0x19, 0x44, 0xb0, 0xcc, 0x20, 0x02,
	0xfb, 0x9c, 0x3e, 0x90, 0x6b, 0x6d, 0xb6, 0x0a, 0x8d, 0x24, 0x0f, 0xb4, 0xf7, 0x29, 0x00, 0xf6,
	0x7b, 0x16, 0x2c, 0x3e, 0x4d, 0x79, 0x22, 0xee, 0xb2, 0xd0, 0x21, 0xab, 0xfe, 0x71, 0xe0, 0x75,
	0x22, 0xb3, 0xc5, 0xdd, 0x86, 0x3d, 0xe9, 0xaa, 0xb3, 0xfc, 0xbf, 0x5d, 0xe2, 0x86, 0xa1, 0x61,
	0xdc, 0x30, 0xb0, 0x3f, 0xb0, 0x60, 0x11, 0x05, 0xb1, 0x98, 0xcd, 0x35, 0xcf, 0xb4, 0x72, 0xf4,
	0xda, 0xa4, 0xd1, 0xed, 0x09, 0xa3, 0xd7, 0xcd, 0xfb, 0x0d, 0x07, 0xea, 0x51, 0xcc, 0x13, 0x95,
	0xb3, 0x8c, 0x65, 0xc6, 0x61, 0x1e, 0xc9, 0xf3, 0xe4, 0xf0, 0xc3, 0x92, 0xe6, 0x36, 0x5d, 0x1c,
	0xd9, 0x64, 0x4b, 0x16, 0x0c, 0xd7, 0xfa, 0xd0, 0xad, 0x45, 0x31, 0x7b, 0x2a, 0x87, 0x89, 0xaf,
	0x7f, 0xa0, 0xc5, 0x6e, 0x6b, 0x53, 0xba, 0xbd, 0x01, 0x8b, 0xe2, 0x2f, 0xf3, 0xd4, 0xff, 0xc9,
	0x2c, 0xc3, 0x92, 0x89, 0x48, 0x63, 0xf6, 0x1d, 0x70, 0x0a, 0xcc, 0x61, 0x9e, 0x0e, 0xd5, 0x7f,
	0x26, 0xf9, 0x19, 0x1f, 0x19, 0x19, 0xe2, 0x1a, 0xd6, 0xff, 0x01, 0x57, 0x9b, 0xf2, 0x8f, 0x7d,
	0x19, 0x1f, 0x49, 0x5f, 0xef, 0x6f, 0x2d, 0xfd, 0x97, 0x7d, 0x19, 0xa7, 0x08, 0x77, 0x48, 0x90,
	0xd1, 0xad, 0x81, 0xc1, 0xc3, 0x79, 0x1c, 0x78, 0x97, 0x5b, 0xc6, 0x2b, 0xae, 0x02, 0x41, 0xb9,
	0x7b, 0x51, 0x10, 0x25, 0xc6, 0x8b, 0xe2, 0x02, 0x21, 0x62, 0xfd, 0x71, 0x57, 0x3d, 0x7e, 0xa0,
	0x58, 0x3f, 0x81, 0x66, 0x94, 0xa5, 0x31, 0xf6, 0xaf, 0x6f, 0x79, 0x12, 0xa8, 0xa7, 0xea, 0x79,
	0x12, 0xb0, 0x0d, 0xa8, 0x3d, 0x39, 0x74, 0x16, 0xc0, 0x3a, 0x95, 0xd3, 0xb3, 0x4e, 0x11, 0x3a,
	0xa3, 0xb5, 0xda, 0xae, 0x75, 0xc6, 0x3e, 0x0b, 0x8b, 0xdd, 0x87, 0x47, 0xdd, 0x67, 0xbb, 0xf7,
	0xbb, 0x0f, 0x9f, 0xb9, 0x0f, 0xbf, 0x3d, 0x39, 0xdf, 0x8d, 0x7d, 0x0a, 0xda, 0xa2, 0xd9, 0x11,
	0x35, 0xaa, 0x08, 0x0e, 0x63, 0xb0, 0x50, 0x54, 0x1f, 0x1d, 0xea, 0x7f, 0x36, 0x2d, 0x5e, 0x23,
	0x7b, 0xc7, 0x4d, 0xa2, 0xeb, 0x97, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x50, 0x57, 0xcd,
	0x8e, 0x55, 0x00, 0x00,
}
