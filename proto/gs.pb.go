// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gs.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type IPCService int32

const (
	IPCService_IPC_unused    IPCService = 0
	IPCService_Login         IPCService = 1
	IPCService_Logout        IPCService = 2
	IPCService_Kickout       IPCService = 3
	IPCService_LoginOK       IPCService = 4
	IPCService_LoginFailed   IPCService = 5
	IPCService_Settle        IPCService = 6
	IPCService_Notify        IPCService = 7
	IPCService_Forward       IPCService = 8
	IPCService_CreateOK      IPCService = 9
	IPCService_CreateFailed  IPCService = 10
	IPCService_JoinOK        IPCService = 11
	IPCService_ChangeMoney   IPCService = 12
	IPCService_Quit          IPCService = 13
	IPCService_ShareAchieve  IPCService = 14
	IPCService_RoomList      IPCService = 15
	IPCService_QuitOK        IPCService = 16
	IPCService_JoinFailed    IPCService = 17
	IPCService_TransferOK    IPCService = 18
	IPCService_IncomeOK      IPCService = 19
	IPCService_QuitFailed    IPCService = 20
	IPCService_BindGetMoney  IPCService = 21
	IPCService_PayOK         IPCService = 22
	IPCService_QuitClub      IPCService = 23
	IPCService_JoinClub      IPCService = 24
	IPCService_GetRedPkg     IPCService = 25
	IPCService_Active        IPCService = 26
	IPCService_ModifyActive  IPCService = 27
	IPCService_SetFightGrade IPCService = 28
	// sys
	IPCService_CreateClub             IPCService = 1000
	IPCService_DismissClub            IPCService = 1001
	IPCService_AgreeClub              IPCService = 1002
	IPCService_KickClub               IPCService = 1003
	IPCService_ApplyClub              IPCService = 1004
	IPCService_PerClub                IPCService = 1005
	IPCService_RefuseClub             IPCService = 1006
	IPCService_ModifyClubInfo         IPCService = 1007
	IPCService_ModifyClubGame         IPCService = 1008
	IPCService_ClubGame               IPCService = 1009
	IPCService_SetCreateClubPerm      IPCService = 1010
	IPCService_CreateClubRoom         IPCService = 1011
	IPCService_ModifyClubRoomDec      IPCService = 1012
	IPCService_ModifyClubRoomRule     IPCService = 1013
	IPCService_CreatClubRoomDesk      IPCService = 1014
	IPCService_JoinClubRoomDesk       IPCService = 1015
	IPCService_ChangeClubRoomDeskInfo IPCService = 1016
	IPCService_ChangeClubRoomCards    IPCService = 1017
	IPCService_QuitClubRoomDesk       IPCService = 1018
	IPCService_ClubChangeNotice       IPCService = 1019
	IPCService_CreatClubRoomDeskFail  IPCService = 1020
)

var IPCService_name = map[int32]string{
	0:    "IPC_unused",
	1:    "Login",
	2:    "Logout",
	3:    "Kickout",
	4:    "LoginOK",
	5:    "LoginFailed",
	6:    "Settle",
	7:    "Notify",
	8:    "Forward",
	9:    "CreateOK",
	10:   "CreateFailed",
	11:   "JoinOK",
	12:   "ChangeMoney",
	13:   "Quit",
	14:   "ShareAchieve",
	15:   "RoomList",
	16:   "QuitOK",
	17:   "JoinFailed",
	18:   "TransferOK",
	19:   "IncomeOK",
	20:   "QuitFailed",
	21:   "BindGetMoney",
	22:   "PayOK",
	23:   "QuitClub",
	24:   "JoinClub",
	25:   "GetRedPkg",
	26:   "Active",
	27:   "ModifyActive",
	28:   "SetFightGrade",
	1000: "CreateClub",
	1001: "DismissClub",
	1002: "AgreeClub",
	1003: "KickClub",
	1004: "ApplyClub",
	1005: "PerClub",
	1006: "RefuseClub",
	1007: "ModifyClubInfo",
	1008: "ModifyClubGame",
	1009: "ClubGame",
	1010: "SetCreateClubPerm",
	1011: "CreateClubRoom",
	1012: "ModifyClubRoomDec",
	1013: "ModifyClubRoomRule",
	1014: "CreatClubRoomDesk",
	1015: "JoinClubRoomDesk",
	1016: "ChangeClubRoomDeskInfo",
	1017: "ChangeClubRoomCards",
	1018: "QuitClubRoomDesk",
	1019: "ClubChangeNotice",
	1020: "CreatClubRoomDeskFail",
}
var IPCService_value = map[string]int32{
	"IPC_unused":             0,
	"Login":                  1,
	"Logout":                 2,
	"Kickout":                3,
	"LoginOK":                4,
	"LoginFailed":            5,
	"Settle":                 6,
	"Notify":                 7,
	"Forward":                8,
	"CreateOK":               9,
	"CreateFailed":           10,
	"JoinOK":                 11,
	"ChangeMoney":            12,
	"Quit":                   13,
	"ShareAchieve":           14,
	"RoomList":               15,
	"QuitOK":                 16,
	"JoinFailed":             17,
	"TransferOK":             18,
	"IncomeOK":               19,
	"QuitFailed":             20,
	"BindGetMoney":           21,
	"PayOK":                  22,
	"QuitClub":               23,
	"JoinClub":               24,
	"GetRedPkg":              25,
	"Active":                 26,
	"ModifyActive":           27,
	"SetFightGrade":          28,
	"CreateClub":             1000,
	"DismissClub":            1001,
	"AgreeClub":              1002,
	"KickClub":               1003,
	"ApplyClub":              1004,
	"PerClub":                1005,
	"RefuseClub":             1006,
	"ModifyClubInfo":         1007,
	"ModifyClubGame":         1008,
	"ClubGame":               1009,
	"SetCreateClubPerm":      1010,
	"CreateClubRoom":         1011,
	"ModifyClubRoomDec":      1012,
	"ModifyClubRoomRule":     1013,
	"CreatClubRoomDesk":      1014,
	"JoinClubRoomDesk":       1015,
	"ChangeClubRoomDeskInfo": 1016,
	"ChangeClubRoomCards":    1017,
	"QuitClubRoomDesk":       1018,
	"ClubChangeNotice":       1019,
	"CreatClubRoomDeskFail":  1020,
}

func (x IPCService) String() string {
	return proto.EnumName(IPCService_name, int32(x))
}
func (IPCService) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// 游戏消费类型
type GameConsume int32

const (
	GameConsume_unused     GameConsume = 0
	GameConsume_gold       GameConsume = 1
	GameConsume_score      GameConsume = 2
	GameConsume_matchGold  GameConsume = 3
	GameConsume_matchScore GameConsume = 4
)

var GameConsume_name = map[int32]string{
	0: "unused",
	1: "gold",
	2: "score",
	3: "matchGold",
	4: "matchScore",
}
var GameConsume_value = map[string]int32{
	"unused":     0,
	"gold":       1,
	"score":      2,
	"matchGold":  3,
	"matchScore": 4,
}

func (x GameConsume) String() string {
	return proto.EnumName(GameConsume_name, int32(x))
}
func (GameConsume) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

// gate和gs的通信协议
type MSG struct {
	Api   PROTO  `protobuf:"varint,1,opt,name=api,enum=protocol.PROTO" json:"api,omitempty"`
	Idx   int64  `protobuf:"varint,2,opt,name=idx" json:"idx,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Start int64  `protobuf:"varint,4,opt,name=start" json:"start,omitempty"`
}

func (m *MSG) Reset()                    { *m = MSG{} }
func (m *MSG) String() string            { return proto.CompactTextString(m) }
func (*MSG) ProtoMessage()               {}
func (*MSG) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *MSG) GetApi() PROTO {
	if m != nil {
		return m.Api
	}
	return PROTO_TEST_GATE
}

func (m *MSG) GetIdx() int64 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *MSG) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MSG) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

type Account struct {
	Id           int64        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Uuid         string       `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	Refreshtoken string       `protobuf:"bytes,3,opt,name=refreshtoken" json:"refreshtoken,omitempty"`
	Token        string       `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	Name         string       `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Platform     PLATFORM     `protobuf:"varint,6,opt,name=Platform,enum=protocol.PLATFORM" json:"Platform,omitempty"`
	Inviter      int64        `protobuf:"varint,7,opt,name=inviter" json:"inviter,omitempty"`
	Objs         []*IPCObject `protobuf:"bytes,8,rep,name=objs" json:"objs,omitempty"`
	Os           string       `protobuf:"bytes,9,opt,name=os" json:"os,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Account) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Account) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Account) GetRefreshtoken() string {
	if m != nil {
		return m.Refreshtoken
	}
	return ""
}

func (m *Account) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetPlatform() PLATFORM {
	if m != nil {
		return m.Platform
	}
	return PLATFORM_PLATFORM_UNUSED
}

func (m *Account) GetInviter() int64 {
	if m != nil {
		return m.Inviter
	}
	return 0
}

func (m *Account) GetObjs() []*IPCObject {
	if m != nil {
		return m.Objs
	}
	return nil
}

func (m *Account) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

type ID struct {
	Id  int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Uid int64 `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *ID) Reset()                    { *m = ID{} }
func (m *ID) String() string            { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()               {}
func (*ID) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ID) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ID) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type IPCObject struct {
	ServiceId     IPCService `protobuf:"varint,1,opt,name=serviceId,enum=protocol.IPCService" json:"serviceId,omitempty"`
	Ids           []*ID      `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty"`
	IsPersistence bool       `protobuf:"varint,3,opt,name=isPersistence" json:"isPersistence,omitempty"`
	Data          []byte     `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *IPCObject) Reset()                    { *m = IPCObject{} }
func (m *IPCObject) String() string            { return proto.CompactTextString(m) }
func (*IPCObject) ProtoMessage()               {}
func (*IPCObject) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *IPCObject) GetServiceId() IPCService {
	if m != nil {
		return m.ServiceId
	}
	return IPCService_IPC_unused
}

func (m *IPCObject) GetIds() []*ID {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *IPCObject) GetIsPersistence() bool {
	if m != nil {
		return m.IsPersistence
	}
	return false
}

func (m *IPCObject) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Club struct {
	Id   int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Club) Reset()                    { *m = Club{} }
func (m *Club) String() string            { return proto.CompactTextString(m) }
func (*Club) ProtoMessage()               {}
func (*Club) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *Club) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Club) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type IPCRoom struct {
	IsView           bool              `protobuf:"varint,1,opt,name=isView" json:"isView,omitempty"`
	ConsumeType      GameConsume       `protobuf:"varint,2,opt,name=consumeType,enum=protocol.GameConsume" json:"consumeType,omitempty"`
	GameType         GAME              `protobuf:"varint,3,opt,name=gameType,enum=protocol.GAME" json:"gameType,omitempty"`
	Base             int32             `protobuf:"varint,4,opt,name=base" json:"base,omitempty"`
	GameNum          int32             `protobuf:"varint,5,opt,name=gameNum" json:"gameNum,omitempty"`
	Rule             int32             `protobuf:"varint,6,opt,name=rule" json:"rule,omitempty"`
	Limit            int32             `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	Need             int32             `protobuf:"varint,8,opt,name=need" json:"need,omitempty"`
	Club             *Club             `protobuf:"bytes,9,opt,name=club" json:"club,omitempty"`
	Origin           ORIGIN            `protobuf:"varint,10,opt,name=origin,enum=protocol.ORIGIN" json:"origin,omitempty"`
	TickectMode      int32             `protobuf:"varint,11,opt,name=tickectMode" json:"tickectMode,omitempty"`
	StartNum         int32             `protobuf:"varint,12,opt,name=startNum" json:"startNum,omitempty"`
	BigTwoRlue       []int32           `protobuf:"varint,13,rep,packed,name=bigTwoRlue" json:"bigTwoRlue,omitempty"`
	RoomUid          int32             `protobuf:"varint,14,opt,name=roomUid" json:"roomUid,omitempty"`
	DeskIndex        int32             `protobuf:"varint,15,opt,name=deskIndex" json:"deskIndex,omitempty"`
	ClubOwer         int64             `protobuf:"varint,16,opt,name=clubOwer" json:"clubOwer,omitempty"`
	ExpendSpeciThing *ExpendSpeciThing `protobuf:"bytes,17,opt,name=expendSpeciThing" json:"expendSpeciThing,omitempty"`
}

func (m *IPCRoom) Reset()                    { *m = IPCRoom{} }
func (m *IPCRoom) String() string            { return proto.CompactTextString(m) }
func (*IPCRoom) ProtoMessage()               {}
func (*IPCRoom) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *IPCRoom) GetIsView() bool {
	if m != nil {
		return m.IsView
	}
	return false
}

func (m *IPCRoom) GetConsumeType() GameConsume {
	if m != nil {
		return m.ConsumeType
	}
	return GameConsume_unused
}

func (m *IPCRoom) GetGameType() GAME {
	if m != nil {
		return m.GameType
	}
	return GAME_GAME_UNUSED
}

func (m *IPCRoom) GetBase() int32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *IPCRoom) GetGameNum() int32 {
	if m != nil {
		return m.GameNum
	}
	return 0
}

func (m *IPCRoom) GetRule() int32 {
	if m != nil {
		return m.Rule
	}
	return 0
}

func (m *IPCRoom) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *IPCRoom) GetNeed() int32 {
	if m != nil {
		return m.Need
	}
	return 0
}

func (m *IPCRoom) GetClub() *Club {
	if m != nil {
		return m.Club
	}
	return nil
}

func (m *IPCRoom) GetOrigin() ORIGIN {
	if m != nil {
		return m.Origin
	}
	return ORIGIN_SELF_SELECT
}

func (m *IPCRoom) GetTickectMode() int32 {
	if m != nil {
		return m.TickectMode
	}
	return 0
}

func (m *IPCRoom) GetStartNum() int32 {
	if m != nil {
		return m.StartNum
	}
	return 0
}

func (m *IPCRoom) GetBigTwoRlue() []int32 {
	if m != nil {
		return m.BigTwoRlue
	}
	return nil
}

func (m *IPCRoom) GetRoomUid() int32 {
	if m != nil {
		return m.RoomUid
	}
	return 0
}

func (m *IPCRoom) GetDeskIndex() int32 {
	if m != nil {
		return m.DeskIndex
	}
	return 0
}

func (m *IPCRoom) GetClubOwer() int64 {
	if m != nil {
		return m.ClubOwer
	}
	return 0
}

func (m *IPCRoom) GetExpendSpeciThing() *ExpendSpeciThing {
	if m != nil {
		return m.ExpendSpeciThing
	}
	return nil
}

type IPCCreateRoomReq struct {
	Room *IPCRoom `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	One  *Player  `protobuf:"bytes,2,opt,name=one" json:"one,omitempty"`
}

func (m *IPCCreateRoomReq) Reset()                    { *m = IPCCreateRoomReq{} }
func (m *IPCCreateRoomReq) String() string            { return proto.CompactTextString(m) }
func (*IPCCreateRoomReq) ProtoMessage()               {}
func (*IPCCreateRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *IPCCreateRoomReq) GetRoom() *IPCRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *IPCCreateRoomReq) GetOne() *Player {
	if m != nil {
		return m.One
	}
	return nil
}

type IPCJoinOKInfo struct {
	GsId   int32 `protobuf:"varint,1,opt,name=gsId" json:"gsId,omitempty"`
	Passwd int32 `protobuf:"varint,2,opt,name=passwd" json:"passwd,omitempty"`
}

func (m *IPCJoinOKInfo) Reset()                    { *m = IPCJoinOKInfo{} }
func (m *IPCJoinOKInfo) String() string            { return proto.CompactTextString(m) }
func (*IPCJoinOKInfo) ProtoMessage()               {}
func (*IPCJoinOKInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *IPCJoinOKInfo) GetGsId() int32 {
	if m != nil {
		return m.GsId
	}
	return 0
}

func (m *IPCJoinOKInfo) GetPasswd() int32 {
	if m != nil {
		return m.Passwd
	}
	return 0
}

type IPCJoinRoomReq struct {
	Passwd int32   `protobuf:"varint,1,opt,name=passwd" json:"passwd,omitempty"`
	One    *Player `protobuf:"bytes,2,opt,name=one" json:"one,omitempty"`
}

func (m *IPCJoinRoomReq) Reset()                    { *m = IPCJoinRoomReq{} }
func (m *IPCJoinRoomReq) String() string            { return proto.CompactTextString(m) }
func (*IPCJoinRoomReq) ProtoMessage()               {}
func (*IPCJoinRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *IPCJoinRoomReq) GetPasswd() int32 {
	if m != nil {
		return m.Passwd
	}
	return 0
}

func (m *IPCJoinRoomReq) GetOne() *Player {
	if m != nil {
		return m.One
	}
	return nil
}

type IPCMatchReq struct {
	Room *IPCRoom `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	One  *Player  `protobuf:"bytes,2,opt,name=one" json:"one,omitempty"`
}

func (m *IPCMatchReq) Reset()                    { *m = IPCMatchReq{} }
func (m *IPCMatchReq) String() string            { return proto.CompactTextString(m) }
func (*IPCMatchReq) ProtoMessage()               {}
func (*IPCMatchReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *IPCMatchReq) GetRoom() *IPCRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *IPCMatchReq) GetOne() *Player {
	if m != nil {
		return m.One
	}
	return nil
}

type MoneyUpdateInfo struct {
	List []*ServerMoneyInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *MoneyUpdateInfo) Reset()                    { *m = MoneyUpdateInfo{} }
func (m *MoneyUpdateInfo) String() string            { return proto.CompactTextString(m) }
func (*MoneyUpdateInfo) ProtoMessage()               {}
func (*MoneyUpdateInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *MoneyUpdateInfo) GetList() []*ServerMoneyInfo {
	if m != nil {
		return m.List
	}
	return nil
}

type PayInfo struct {
	Amount float64 `protobuf:"fixed64,1,opt,name=amount" json:"amount,omitempty"`
}

func (m *PayInfo) Reset()                    { *m = PayInfo{} }
func (m *PayInfo) String() string            { return proto.CompactTextString(m) }
func (*PayInfo) ProtoMessage()               {}
func (*PayInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *PayInfo) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// 加入俱乐部的房间
type IPCJoinClubRoomDeskReq struct {
	RoomId           int32             `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
	Room             *IPCRoom          `protobuf:"bytes,2,opt,name=room" json:"room,omitempty"`
	One              *Player           `protobuf:"bytes,3,opt,name=one" json:"one,omitempty"`
	DeskId           int32             `protobuf:"varint,4,opt,name=deskId" json:"deskId,omitempty"`
	Name             string            `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Icon             string            `protobuf:"bytes,6,opt,name=icon" json:"icon,omitempty"`
	Uid              int64             `protobuf:"varint,7,opt,name=uid" json:"uid,omitempty"`
	CreatBackCard    bool              `protobuf:"varint,8,opt,name=creatBackCard" json:"creatBackCard,omitempty"`
	ExpendSpeciThing *ExpendSpeciThing `protobuf:"bytes,9,opt,name=expendSpeciThing" json:"expendSpeciThing,omitempty"`
}

func (m *IPCJoinClubRoomDeskReq) Reset()                    { *m = IPCJoinClubRoomDeskReq{} }
func (m *IPCJoinClubRoomDeskReq) String() string            { return proto.CompactTextString(m) }
func (*IPCJoinClubRoomDeskReq) ProtoMessage()               {}
func (*IPCJoinClubRoomDeskReq) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *IPCJoinClubRoomDeskReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *IPCJoinClubRoomDeskReq) GetRoom() *IPCRoom {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *IPCJoinClubRoomDeskReq) GetOne() *Player {
	if m != nil {
		return m.One
	}
	return nil
}

func (m *IPCJoinClubRoomDeskReq) GetDeskId() int32 {
	if m != nil {
		return m.DeskId
	}
	return 0
}

func (m *IPCJoinClubRoomDeskReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IPCJoinClubRoomDeskReq) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *IPCJoinClubRoomDeskReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *IPCJoinClubRoomDeskReq) GetCreatBackCard() bool {
	if m != nil {
		return m.CreatBackCard
	}
	return false
}

func (m *IPCJoinClubRoomDeskReq) GetExpendSpeciThing() *ExpendSpeciThing {
	if m != nil {
		return m.ExpendSpeciThing
	}
	return nil
}

// 服务使用货币更新
type ServerMoneyInfo struct {
	Type   int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Value  int64  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	ClubId int64  `protobuf:"varint,3,opt,name=clubId" json:"clubId,omitempty"`
	Reason string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	Origin ORIGIN `protobuf:"varint,5,opt,name=origin,enum=protocol.ORIGIN" json:"origin,omitempty"`
}

func (m *ServerMoneyInfo) Reset()                    { *m = ServerMoneyInfo{} }
func (m *ServerMoneyInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerMoneyInfo) ProtoMessage()               {}
func (*ServerMoneyInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *ServerMoneyInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ServerMoneyInfo) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ServerMoneyInfo) GetClubId() int64 {
	if m != nil {
		return m.ClubId
	}
	return 0
}

func (m *ServerMoneyInfo) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *ServerMoneyInfo) GetOrigin() ORIGIN {
	if m != nil {
		return m.Origin
	}
	return ORIGIN_SELF_SELECT
}

type SetLevelInfo struct {
	Userid int64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Nextid int64 `protobuf:"varint,2,opt,name=nextid" json:"nextid,omitempty"`
}

func (m *SetLevelInfo) Reset()                    { *m = SetLevelInfo{} }
func (m *SetLevelInfo) String() string            { return proto.CompactTextString(m) }
func (*SetLevelInfo) ProtoMessage()               {}
func (*SetLevelInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *SetLevelInfo) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *SetLevelInfo) GetNextid() int64 {
	if m != nil {
		return m.Nextid
	}
	return 0
}

type ModifyGoldInfo struct {
	Userid int64 `protobuf:"varint,1,opt,name=userid" json:"userid,omitempty"`
	Money  int64 `protobuf:"varint,2,opt,name=money" json:"money,omitempty"`
}

func (m *ModifyGoldInfo) Reset()                    { *m = ModifyGoldInfo{} }
func (m *ModifyGoldInfo) String() string            { return proto.CompactTextString(m) }
func (*ModifyGoldInfo) ProtoMessage()               {}
func (*ModifyGoldInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *ModifyGoldInfo) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *ModifyGoldInfo) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

type ActionDataInfo struct {
	Uid        int64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	Aid        int64 `protobuf:"varint,2,opt,name=aid" json:"aid,omitempty"`
	ActionData int64 `protobuf:"varint,3,opt,name=actionData" json:"actionData,omitempty"`
	Position   int64 `protobuf:"varint,4,opt,name=position" json:"position,omitempty"`
}

func (m *ActionDataInfo) Reset()                    { *m = ActionDataInfo{} }
func (m *ActionDataInfo) String() string            { return proto.CompactTextString(m) }
func (*ActionDataInfo) ProtoMessage()               {}
func (*ActionDataInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *ActionDataInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ActionDataInfo) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *ActionDataInfo) GetActionData() int64 {
	if m != nil {
		return m.ActionData
	}
	return 0
}

func (m *ActionDataInfo) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

type ToDatabase struct {
	List []*ActionDataInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ToDatabase) Reset()                    { *m = ToDatabase{} }
func (m *ToDatabase) String() string            { return proto.CompactTextString(m) }
func (*ToDatabase) ProtoMessage()               {}
func (*ToDatabase) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *ToDatabase) GetList() []*ActionDataInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*MSG)(nil), "protocol.MSG")
	proto.RegisterType((*Account)(nil), "protocol.Account")
	proto.RegisterType((*ID)(nil), "protocol.ID")
	proto.RegisterType((*IPCObject)(nil), "protocol.IPCObject")
	proto.RegisterType((*Club)(nil), "protocol.club")
	proto.RegisterType((*IPCRoom)(nil), "protocol.IPCRoom")
	proto.RegisterType((*IPCCreateRoomReq)(nil), "protocol.IPCCreateRoomReq")
	proto.RegisterType((*IPCJoinOKInfo)(nil), "protocol.IPCJoinOKInfo")
	proto.RegisterType((*IPCJoinRoomReq)(nil), "protocol.IPCJoinRoomReq")
	proto.RegisterType((*IPCMatchReq)(nil), "protocol.IPCMatchReq")
	proto.RegisterType((*MoneyUpdateInfo)(nil), "protocol.MoneyUpdateInfo")
	proto.RegisterType((*PayInfo)(nil), "protocol.PayInfo")
	proto.RegisterType((*IPCJoinClubRoomDeskReq)(nil), "protocol.IPCJoinClubRoomDeskReq")
	proto.RegisterType((*ServerMoneyInfo)(nil), "protocol.ServerMoneyInfo")
	proto.RegisterType((*SetLevelInfo)(nil), "protocol.SetLevelInfo")
	proto.RegisterType((*ModifyGoldInfo)(nil), "protocol.ModifyGoldInfo")
	proto.RegisterType((*ActionDataInfo)(nil), "protocol.ActionDataInfo")
	proto.RegisterType((*ToDatabase)(nil), "protocol.ToDatabase")
	proto.RegisterEnum("protocol.IPCService", IPCService_name, IPCService_value)
	proto.RegisterEnum("protocol.GameConsume", GameConsume_name, GameConsume_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Service service

type ServiceClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (Service_StreamClient, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Service_StreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Service_serviceDesc.Streams[0], c.cc, "/protocol.Service/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceStreamClient{stream}
	return x, nil
}

type Service_StreamClient interface {
	Send(*MSG) error
	Recv() (*MSG, error)
	grpc.ClientStream
}

type serviceStreamClient struct {
	grpc.ClientStream
}

func (x *serviceStreamClient) Send(m *MSG) error {
	return x.ClientStream.SendMsg(m)
}

func (x *serviceStreamClient) Recv() (*MSG, error) {
	m := new(MSG)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Service service

type ServiceServer interface {
	Stream(Service_StreamServer) error
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ServiceServer).Stream(&serviceStreamServer{stream})
}

type Service_StreamServer interface {
	Send(*MSG) error
	Recv() (*MSG, error)
	grpc.ServerStream
}

type serviceStreamServer struct {
	grpc.ServerStream
}

func (x *serviceStreamServer) Send(m *MSG) error {
	return x.ServerStream.SendMsg(m)
}

func (x *serviceStreamServer) Recv() (*MSG, error) {
	m := new(MSG)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Service_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gs.proto",
}

func init() { proto.RegisterFile("gs.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xeb, 0x6e, 0x23, 0x49,
	0x15, 0xc6, 0x6e, 0x3b, 0x6d, 0x1f, 0x3b, 0x4e, 0xa5, 0x66, 0x26, 0xdb, 0x9b, 0x5d, 0xad, 0xb2,
	0x2d, 0x2e, 0x51, 0x04, 0x23, 0x14, 0x84, 0x90, 0x40, 0x5a, 0x91, 0x75, 0x36, 0x96, 0x49, 0x3c,
	0x36, 0xe5, 0x2c, 0xe2, 0x0f, 0x42, 0x95, 0xee, 0x13, 0xa7, 0x36, 0x76, 0x97, 0xe9, 0x2e, 0x27,
	0x93, 0x07, 0xe1, 0x07, 0xaf, 0x02, 0xcf, 0x83, 0xc4, 0xfd, 0x7e, 0x07, 0x21, 0x74, 0x4e, 0xb7,
	0xdd, 0x76, 0x66, 0x35, 0x1a, 0xa1, 0xfd, 0xd5, 0xf5, 0x9d, 0x5b, 0x9d, 0x7b, 0x35, 0x34, 0x26,
	0xd9, 0xf3, 0x79, 0x6a, 0x9d, 0x95, 0x0d, 0xfe, 0x44, 0x76, 0xba, 0xdf, 0x8a, 0x6c, 0x92, 0xb9,
	0x9c, 0xbc, 0x0f, 0x13, 0xed, 0x30, 0x3f, 0x87, 0x31, 0x78, 0x83, 0x71, 0x4f, 0xbe, 0x0f, 0x9e,
	0x9e, 0x9b, 0xa0, 0x72, 0x50, 0x39, 0xec, 0x1c, 0xef, 0x3c, 0x5f, 0xea, 0x3d, 0x1f, 0xa9, 0xe1,
	0xe5, 0x50, 0x11, 0x4f, 0x0a, 0xf0, 0x4c, 0xfc, 0x32, 0xa8, 0x1e, 0x54, 0x0e, 0x3d, 0x45, 0x47,
	0x29, 0xa1, 0x16, 0x6b, 0xa7, 0x03, 0xef, 0xa0, 0x72, 0xd8, 0x56, 0x7c, 0x96, 0x4f, 0xa1, 0x9e,
	0x39, 0x9d, 0xba, 0xa0, 0xc6, 0x72, 0x39, 0x08, 0xff, 0x5b, 0x01, 0xff, 0x24, 0x8a, 0xec, 0x22,
	0x71, 0xb2, 0x03, 0x55, 0x13, 0xf3, 0x4d, 0x9e, 0xaa, 0x9a, 0x98, 0xac, 0x2c, 0x16, 0x26, 0x66,
	0xc3, 0x4d, 0xc5, 0x67, 0x19, 0x42, 0x3b, 0xc5, 0xeb, 0x14, 0xb3, 0x1b, 0x67, 0x6f, 0x31, 0xe1,
	0x1b, 0x9a, 0x6a, 0x83, 0x46, 0x37, 0xe5, 0xcc, 0x1a, 0x33, 0x73, 0x40, 0xd6, 0x12, 0x3d, 0xc3,
	0xa0, 0x9e, 0x5b, 0xa3, 0xb3, 0x7c, 0x0e, 0x8d, 0xd1, 0x54, 0xbb, 0x6b, 0x9b, 0xce, 0x82, 0x2d,
	0x8e, 0x50, 0xae, 0x45, 0x78, 0x71, 0x72, 0x79, 0x36, 0x54, 0x03, 0xb5, 0x92, 0x91, 0x01, 0xf8,
	0x26, 0xb9, 0x33, 0x0e, 0xd3, 0xc0, 0x67, 0x37, 0x97, 0x50, 0x7e, 0x09, 0x6a, 0xf6, 0xea, 0x93,
	0x2c, 0x68, 0x1c, 0x78, 0x87, 0xad, 0xe3, 0x27, 0xa5, 0x95, 0xfe, 0xa8, 0x3b, 0xbc, 0xfa, 0x04,
	0x23, 0xa7, 0x58, 0x80, 0x82, 0xb4, 0x59, 0xd0, 0x64, 0x27, 0xaa, 0x36, 0x0b, 0xbf, 0x08, 0xd5,
	0xfe, 0xe9, 0x2b, 0xa1, 0x0b, 0xf0, 0x96, 0x91, 0x7b, 0x8a, 0x8e, 0xe1, 0x4f, 0x2a, 0xd0, 0x5c,
	0xd9, 0x92, 0xc7, 0xd0, 0xcc, 0x30, 0xbd, 0x33, 0x11, 0xf6, 0xe3, 0xa2, 0x36, 0x4f, 0x37, 0xee,
	0x1c, 0xe7, 0x5c, 0x55, 0x8a, 0xc9, 0xf7, 0xa8, 0x4c, 0x59, 0x50, 0x65, 0x0f, 0xdb, 0x6b, 0xd2,
	0xa7, 0x54, 0xb4, 0x4c, 0x7e, 0x1e, 0xb6, 0x4d, 0x36, 0xc2, 0x34, 0x33, 0x99, 0xc3, 0x24, 0x42,
	0xce, 0x6d, 0x43, 0x6d, 0x12, 0x57, 0xa5, 0xad, 0x95, 0xa5, 0x0d, 0x8f, 0xa0, 0x16, 0x4d, 0x17,
	0x57, 0x6b, 0x51, 0xd4, 0x97, 0x05, 0xe4, 0x94, 0x57, 0xcb, 0x94, 0x87, 0x3f, 0xad, 0x81, 0xdf,
	0x1f, 0x75, 0x95, 0xb5, 0x33, 0xb9, 0x07, 0x5b, 0x26, 0xfb, 0x9e, 0xc1, 0x7b, 0xd6, 0x69, 0xa8,
	0x02, 0xc9, 0x6f, 0x00, 0x77, 0xe5, 0x62, 0x86, 0x97, 0x0f, 0xf3, 0x5c, 0xbd, 0x73, 0xfc, 0xac,
	0xf4, 0xb8, 0xa7, 0x67, 0xd8, 0xcd, 0x05, 0xd4, 0xba, 0xa4, 0x3c, 0x82, 0xc6, 0x44, 0x17, 0x5a,
	0x1e, 0x6b, 0x75, 0xd6, 0xb4, 0x4e, 0x06, 0x1f, 0xa9, 0x15, 0x9f, 0x9c, 0xbb, 0xd2, 0x19, 0x72,
	0x20, 0x75, 0xc5, 0x67, 0xaa, 0x2f, 0xf1, 0x5f, 0x2c, 0x66, 0xdc, 0x26, 0x75, 0xb5, 0x84, 0x24,
	0x9d, 0x2e, 0xa6, 0xc8, 0x5d, 0x52, 0x57, 0x7c, 0xa6, 0x3e, 0x9b, 0x9a, 0x99, 0x71, 0xdc, 0x0b,
	0x75, 0x95, 0x03, 0x0e, 0x1a, 0x31, 0x0e, 0x1a, 0xb9, 0x24, 0x9d, 0x65, 0x98, 0x27, 0x88, 0xcb,
	0xde, 0x5a, 0xf7, 0x89, 0xa8, 0x2a, 0x4f, 0xde, 0x21, 0x6c, 0xd9, 0xd4, 0x4c, 0x4c, 0x12, 0x00,
	0x7b, 0x2e, 0x4a, 0xa9, 0xa1, 0xea, 0xf7, 0xfa, 0x2f, 0x54, 0xc1, 0x97, 0x07, 0xd0, 0x72, 0x26,
	0xba, 0xc5, 0xc8, 0x0d, 0x6c, 0x8c, 0x41, 0x8b, 0x2f, 0x5a, 0x27, 0xc9, 0x7d, 0x68, 0xf0, 0x78,
	0x51, 0x20, 0x6d, 0x66, 0xaf, 0xb0, 0x7c, 0x0f, 0xe0, 0xca, 0x4c, 0x2e, 0xef, 0xad, 0x9a, 0x2e,
	0x30, 0xd8, 0x3e, 0xf0, 0x0e, 0xeb, 0x6a, 0x8d, 0x42, 0x39, 0x48, 0xad, 0x9d, 0x7d, 0x6c, 0xe2,
	0xa0, 0x93, 0xe7, 0xa0, 0x80, 0xf2, 0x5d, 0x68, 0xc6, 0x98, 0xdd, 0xf6, 0x93, 0x18, 0x5f, 0x06,
	0x3b, 0xcc, 0x2b, 0x09, 0x74, 0x27, 0xc5, 0x31, 0xbc, 0xc7, 0x34, 0x10, 0xdc, 0xb7, 0x2b, 0x2c,
	0xcf, 0x40, 0xe0, 0xcb, 0x39, 0x26, 0xf1, 0x78, 0x8e, 0x91, 0xb9, 0xbc, 0x31, 0xc9, 0x24, 0xd8,
	0xe5, 0x5c, 0xec, 0x97, 0x51, 0x7e, 0xf4, 0x48, 0x42, 0xbd, 0xa2, 0x13, 0xfe, 0x00, 0x44, 0x7f,
	0xd4, 0xed, 0xa6, 0xa8, 0x1d, 0x52, 0x07, 0x29, 0xfc, 0x91, 0xfc, 0x02, 0xd4, 0xc8, 0x41, 0x6e,
	0xa1, 0xd6, 0xf1, 0xee, 0xc6, 0x14, 0xb0, 0x0c, 0xb3, 0x65, 0x08, 0x9e, 0x4d, 0xf2, 0x5e, 0x6a,
	0xad, 0xe7, 0x76, 0x34, 0xd5, 0x0f, 0x98, 0x2a, 0x62, 0x86, 0xdf, 0x82, 0xed, 0xfe, 0xa8, 0xfb,
	0x1d, 0x6b, 0x92, 0xe1, 0x79, 0x3f, 0xb9, 0xb6, 0x54, 0xcb, 0x49, 0xd6, 0x5f, 0xb6, 0x34, 0x9f,
	0xa9, 0x69, 0xe7, 0x3a, 0xcb, 0xee, 0xf3, 0xe9, 0xac, 0xab, 0x02, 0x85, 0x17, 0xd0, 0x29, 0x94,
	0x97, 0x9e, 0x95, 0x92, 0x95, 0x75, 0xc9, 0x37, 0x72, 0xe5, 0xfb, 0xd0, 0xea, 0x8f, 0xba, 0x03,
	0xed, 0xa2, 0x9b, 0xcf, 0x38, 0xc8, 0x6f, 0xc3, 0xce, 0xc0, 0x26, 0xf8, 0xf0, 0xf1, 0x3c, 0xd6,
	0x0e, 0x39, 0xcc, 0xaf, 0x40, 0x6d, 0x6a, 0x32, 0x17, 0x54, 0x78, 0x35, 0xbc, 0x5d, 0xea, 0xd1,
	0x16, 0xc1, 0x94, 0xc5, 0x49, 0x50, 0xb1, 0x58, 0xf8, 0x3e, 0xf8, 0x23, 0xcd, 0x04, 0x0a, 0x51,
	0xcf, 0x68, 0x79, 0xb3, 0x67, 0x15, 0x55, 0xa0, 0xf0, 0x67, 0x55, 0xd8, 0x2b, 0xb2, 0xd1, 0xa5,
	0x16, 0xb7, 0x76, 0x76, 0x8a, 0xd9, 0x6d, 0x91, 0x15, 0xf2, 0x75, 0x95, 0xd5, 0x02, 0xad, 0x42,
	0xac, 0xbe, 0x51, 0x88, 0xde, 0x6b, 0x42, 0xa4, 0x2b, 0xb8, 0x2f, 0xe3, 0x62, 0xb8, 0x0b, 0xf4,
	0xa9, 0x4f, 0x80, 0x84, 0x9a, 0x89, 0x6c, 0xc2, 0x83, 0xdd, 0x54, 0x7c, 0x5e, 0x6e, 0x5f, 0x7f,
	0xb5, 0x7d, 0x69, 0x37, 0x46, 0xd4, 0x75, 0x1f, 0xea, 0xe8, 0xb6, 0xab, 0xd3, 0x7c, 0xba, 0x1b,
	0x6a, 0x93, 0xf8, 0xa9, 0x6d, 0xde, 0xfc, 0x3f, 0xda, 0xfc, 0xc7, 0x15, 0xd8, 0x79, 0x94, 0x7a,
	0xf2, 0xd3, 0xd1, 0x5a, 0x2b, 0x5a, 0x91, 0xce, 0xb4, 0x80, 0xee, 0x34, 0x4d, 0x71, 0xfe, 0x4e,
	0xe4, 0x80, 0xa2, 0xa7, 0xc1, 0xeb, 0xc7, 0x9c, 0x24, 0x4f, 0x15, 0x88, 0x13, 0x8f, 0x3a, 0xb3,
	0xcb, 0x77, 0xb1, 0x40, 0x6b, 0x8b, 0xa7, 0xfe, 0xfa, 0xc5, 0x13, 0x7e, 0x00, 0xed, 0x31, 0xba,
	0x0b, 0xbc, 0xc3, 0xe9, 0xb2, 0xfa, 0x8b, 0x0c, 0xd3, 0xd5, 0xcb, 0x55, 0x20, 0xa2, 0x27, 0xf8,
	0xd2, 0xad, 0x1e, 0xb0, 0x02, 0x85, 0x1f, 0x40, 0x67, 0x60, 0x63, 0x73, 0xfd, 0xd0, 0xb3, 0xd3,
	0xf8, 0xb5, 0x16, 0x9e, 0x42, 0x7d, 0x46, 0xa1, 0x2f, 0x23, 0x63, 0x10, 0xce, 0xa1, 0x73, 0x12,
	0x39, 0x63, 0x93, 0x53, 0xed, 0x34, 0xeb, 0x17, 0x95, 0xaa, 0x94, 0x95, 0x12, 0xe0, 0xe9, 0xf2,
	0xe5, 0xd4, 0x86, 0xde, 0x3d, 0xd0, 0x2b, 0xad, 0x22, 0x27, 0x6b, 0x14, 0x5a, 0x5c, 0x73, 0x9b,
	0x19, 0xc2, 0xc5, 0xbf, 0xc9, 0x0a, 0x87, 0xdf, 0x04, 0xb8, 0xb4, 0x24, 0xc5, 0xcf, 0xc3, 0x97,
	0x37, 0xe6, 0x24, 0x28, 0xf3, 0xb4, 0xe9, 0x55, 0x3e, 0x26, 0x47, 0x3f, 0xdf, 0x02, 0x28, 0x5f,
	0x62, 0xd9, 0x61, 0xf4, 0xc3, 0x45, 0xb2, 0xc8, 0x30, 0x16, 0x9f, 0x93, 0x4d, 0xa8, 0x5f, 0xd8,
	0x89, 0x49, 0x44, 0x45, 0x02, 0x6c, 0x5d, 0xd8, 0x89, 0x5d, 0x38, 0x51, 0x95, 0x2d, 0xf0, 0xcf,
	0x4d, 0x74, 0x4b, 0xc0, 0x23, 0xc0, 0x32, 0xc3, 0x73, 0x51, 0x93, 0x3b, 0xd0, 0x62, 0x70, 0xa6,
	0xcd, 0x14, 0x63, 0x51, 0x27, 0xb5, 0x31, 0x3a, 0x37, 0x45, 0xb1, 0x45, 0xe7, 0x17, 0xd6, 0x99,
	0xeb, 0x07, 0xe1, 0x93, 0xd6, 0x99, 0x4d, 0xef, 0x75, 0x1a, 0x8b, 0x86, 0x6c, 0x43, 0x23, 0xdf,
	0x97, 0xc3, 0x73, 0xd1, 0x94, 0x02, 0xda, 0x39, 0x2a, 0x8c, 0x00, 0x29, 0xe6, 0x0b, 0x4f, 0xb4,
	0xe8, 0x86, 0xee, 0x8d, 0x4e, 0x26, 0xc8, 0x6d, 0x27, 0xda, 0xb2, 0x01, 0xb5, 0xef, 0x2e, 0x8c,
	0x13, 0xdb, 0xa4, 0x38, 0xbe, 0xd1, 0x29, 0x9e, 0x44, 0x37, 0x06, 0xef, 0x50, 0x74, 0xc8, 0x30,
	0x8d, 0xe5, 0x85, 0xc9, 0x9c, 0xd8, 0x21, 0x33, 0x24, 0x39, 0x3c, 0x17, 0x82, 0x22, 0x25, 0x93,
	0xc5, 0x15, 0xbb, 0x84, 0x2f, 0x53, 0x9d, 0x64, 0xd7, 0x98, 0x0e, 0xcf, 0x85, 0x24, 0xcd, 0x7e,
	0x12, 0xd9, 0x19, 0xb9, 0xf4, 0x84, 0xb8, 0xa4, 0x59, 0x48, 0x3f, 0xa5, 0x9b, 0x3e, 0x34, 0x49,
	0xdc, 0x43, 0x97, 0x7b, 0xf1, 0x8c, 0x32, 0x35, 0xd2, 0x0f, 0xc3, 0x73, 0xb1, 0x47, 0xaa, 0x24,
	0x4c, 0x3b, 0x45, 0xbc, 0x45, 0x68, 0xb9, 0x61, 0x44, 0x20, 0xb7, 0xa1, 0xd9, 0x43, 0xa7, 0x30,
	0x1e, 0xdd, 0x4e, 0xc4, 0xdb, 0xe4, 0x11, 0x95, 0xe5, 0x0e, 0xc5, 0x3e, 0xd9, 0xcc, 0x1b, 0xaf,
	0xa0, 0xbc, 0x23, 0x77, 0x61, 0x7b, 0x8c, 0xee, 0xcc, 0x4c, 0x6e, 0x5c, 0x2f, 0xd5, 0x31, 0x8a,
	0x77, 0xe5, 0x0e, 0x40, 0x9e, 0x1b, 0xb6, 0xf7, 0x0b, 0x5f, 0x0a, 0x68, 0x9d, 0x9a, 0x6c, 0x66,
	0xb2, 0x8c, 0x29, 0xbf, 0xf4, 0x65, 0x07, 0x9a, 0x27, 0x93, 0x14, 0x73, 0x89, 0x5f, 0xf9, 0x72,
	0x1b, 0x1a, 0x54, 0x2c, 0x86, 0xbf, 0xce, 0xd9, 0xf3, 0xf9, 0xf4, 0x81, 0xf1, 0x6f, 0x7c, 0xd9,
	0x06, 0x7f, 0x84, 0x29, 0xa3, 0xdf, 0xfa, 0x64, 0x5f, 0xe1, 0xf5, 0x22, 0xcb, 0xb5, 0x7f, 0xe7,
	0xcb, 0x27, 0xcb, 0x71, 0x20, 0x02, 0x35, 0x8e, 0xf8, 0xfd, 0x23, 0x22, 0xfd, 0xe8, 0x88, 0x3f,
	0xf0, 0x3d, 0x2b, 0xf8, 0x47, 0x5f, 0xee, 0xc1, 0xee, 0x18, 0x5d, 0xe9, 0xec, 0x08, 0xd3, 0x99,
	0xf8, 0x13, 0xeb, 0x96, 0x44, 0x2a, 0x8e, 0xf8, 0x33, 0x0b, 0x97, 0x06, 0xf3, 0x45, 0x1c, 0x89,
	0xbf, 0xf8, 0xf2, 0x2d, 0x90, 0x9b, 0x74, 0xb5, 0x98, 0xa2, 0xf8, 0x2b, 0x2b, 0xb0, 0x95, 0xf5,
	0xc5, 0x2d, 0xfe, 0xe6, 0xcb, 0x67, 0x20, 0x1e, 0xef, 0x73, 0xf1, 0x77, 0x5f, 0xbe, 0x03, 0x7b,
	0x79, 0xd3, 0xac, 0x33, 0x38, 0x9a, 0x7f, 0xf8, 0x32, 0x80, 0x27, 0x9b, 0x4c, 0xda, 0x93, 0x99,
	0xf8, 0x27, 0x5b, 0x5b, 0x56, 0x72, 0x65, 0xed, 0x5f, 0x4c, 0x26, 0x52, 0xae, 0x44, 0x1d, 0x1d,
	0xa1, 0xf8, 0xb7, 0x2f, 0xf7, 0xe1, 0xd9, 0x2b, 0x3e, 0x51, 0xc7, 0x88, 0xff, 0xf8, 0x47, 0x03,
	0x68, 0xad, 0xfd, 0x10, 0x52, 0xdd, 0x57, 0x33, 0xd6, 0x80, 0xda, 0xc4, 0x4e, 0x63, 0x51, 0xa1,
	0x1e, 0xca, 0x22, 0x9b, 0xa2, 0xa8, 0x52, 0x9f, 0xcc, 0xe8, 0x5d, 0xa5, 0x25, 0x24, 0x3c, 0xea,
	0x3f, 0x86, 0x63, 0x66, 0xd7, 0x8e, 0xbf, 0x0e, 0xfe, 0x72, 0x64, 0x8f, 0x60, 0x6b, 0xec, 0x52,
	0xd4, 0x33, 0xb9, 0x5d, 0xce, 0xfa, 0x60, 0xdc, 0xdb, 0xdf, 0x84, 0x87, 0x95, 0xaf, 0x56, 0xae,
	0xb6, 0x98, 0xf2, 0xb5, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xd7, 0x65, 0x57, 0x64, 0x0d,
	0x00, 0x00,
}
